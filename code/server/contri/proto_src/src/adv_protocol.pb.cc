// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: adv_protocol.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "adv_protocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace adv {
namespace msg {

namespace {

const ::google::protobuf::Descriptor* UserKeepAliveRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserKeepAliveRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserKeepAliveResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserKeepAliveResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoginRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoginResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* LogoutRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LogoutRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* LogoutResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LogoutResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* TaskNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TaskNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* SyncTaskRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SyncTaskRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SyncTaskResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SyncTaskResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReportTaskRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReportTaskRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReportTaskResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReportTaskResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetIncomeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetIncomeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetIncomeResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetIncomeResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* AckRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AckRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SaveTaskRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SaveTaskRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SaveTaskResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SaveTaskResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* WithdrawRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WithdrawRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* WithdrawResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WithdrawResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* MysqlRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MysqlRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MysqlResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MysqlResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* RedispRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RedispRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* RedispResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RedispResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* InnerCommonMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InnerCommonMsg_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_adv_5fprotocol_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_adv_5fprotocol_2eproto() {
  protobuf_AddDesc_adv_5fprotocol_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "adv_protocol.proto");
  GOOGLE_CHECK(file != NULL);
  UserKeepAliveRequest_descriptor_ = file->message_type(0);
  static const int UserKeepAliveRequest_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserKeepAliveRequest, condid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserKeepAliveRequest, devicetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserKeepAliveRequest, deviceid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserKeepAliveRequest, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserKeepAliveRequest, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserKeepAliveRequest, transid_),
  };
  UserKeepAliveRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UserKeepAliveRequest_descriptor_,
      UserKeepAliveRequest::default_instance_,
      UserKeepAliveRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(UserKeepAliveRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserKeepAliveRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserKeepAliveRequest, _is_default_instance_));
  UserKeepAliveResult_descriptor_ = file->message_type(1);
  static const int UserKeepAliveResult_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserKeepAliveResult, retbase_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserKeepAliveResult, condid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserKeepAliveResult, devicetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserKeepAliveResult, deviceid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserKeepAliveResult, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserKeepAliveResult, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserKeepAliveResult, transid_),
  };
  UserKeepAliveResult_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UserKeepAliveResult_descriptor_,
      UserKeepAliveResult::default_instance_,
      UserKeepAliveResult_offsets_,
      -1,
      -1,
      -1,
      sizeof(UserKeepAliveResult),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserKeepAliveResult, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserKeepAliveResult, _is_default_instance_));
  LoginRequest_descriptor_ = file->message_type(2);
  static const int LoginRequest_offsets_[25] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, token_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, magicnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, devicetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, deviceid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, condid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, loginseq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, accounttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, passwd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, nickname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, gender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, province_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, city_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, country_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, avatar_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, desc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, email_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, mobile_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, transid_),
  };
  LoginRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoginRequest_descriptor_,
      LoginRequest::default_instance_,
      LoginRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(LoginRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, _is_default_instance_));
  LoginResult_descriptor_ = file->message_type(3);
  static const int LoginResult_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResult, retbase_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResult, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResult, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResult, loginseq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResult, accounttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResult, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResult, transid_),
  };
  LoginResult_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoginResult_descriptor_,
      LoginResult::default_instance_,
      LoginResult_offsets_,
      -1,
      -1,
      -1,
      sizeof(LoginResult),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResult, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResult, _is_default_instance_));
  LogoutRequest_descriptor_ = file->message_type(4);
  static const int LogoutRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutRequest, devicetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutRequest, deviceid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutRequest, conid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutRequest, transid_),
  };
  LogoutRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LogoutRequest_descriptor_,
      LogoutRequest::default_instance_,
      LogoutRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(LogoutRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutRequest, _is_default_instance_));
  LogoutResult_descriptor_ = file->message_type(5);
  static const int LogoutResult_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutResult, retbase_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutResult, transid_),
  };
  LogoutResult_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LogoutResult_descriptor_,
      LogoutResult::default_instance_,
      LogoutResult_offsets_,
      -1,
      -1,
      -1,
      sizeof(LogoutResult),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutResult, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutResult, _is_default_instance_));
  TaskNotify_descriptor_ = file->message_type(6);
  static const int TaskNotify_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskNotify, tasktype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskNotify, transid_),
  };
  TaskNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TaskNotify_descriptor_,
      TaskNotify::default_instance_,
      TaskNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(TaskNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskNotify, _is_default_instance_));
  SyncTaskRequest_descriptor_ = file->message_type(7);
  static const int SyncTaskRequest_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncTaskRequest, syncpoint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncTaskRequest, synctype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncTaskRequest, syncflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncTaskRequest, synclimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncTaskRequest, transid_),
  };
  SyncTaskRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SyncTaskRequest_descriptor_,
      SyncTaskRequest::default_instance_,
      SyncTaskRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(SyncTaskRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncTaskRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncTaskRequest, _is_default_instance_));
  SyncTaskResult_descriptor_ = file->message_type(8);
  static const int SyncTaskResult_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncTaskResult, retbase_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncTaskResult, taskinfos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncTaskResult, synctype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncTaskResult, continueflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncTaskResult, maxtaskid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncTaskResult, transid_),
  };
  SyncTaskResult_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SyncTaskResult_descriptor_,
      SyncTaskResult::default_instance_,
      SyncTaskResult_offsets_,
      -1,
      -1,
      -1,
      sizeof(SyncTaskResult),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncTaskResult, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncTaskResult, _is_default_instance_));
  ReportTaskRequest_descriptor_ = file->message_type(9);
  static const int ReportTaskRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportTaskRequest, taskinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportTaskRequest, reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportTaskRequest, transid_),
  };
  ReportTaskRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReportTaskRequest_descriptor_,
      ReportTaskRequest::default_instance_,
      ReportTaskRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ReportTaskRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportTaskRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportTaskRequest, _is_default_instance_));
  ReportTaskResult_descriptor_ = file->message_type(10);
  static const int ReportTaskResult_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportTaskResult, retbase_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportTaskResult, taskid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportTaskResult, reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportTaskResult, done_step_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportTaskResult, tasktype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportTaskResult, report_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportTaskResult, transid_),
  };
  ReportTaskResult_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReportTaskResult_descriptor_,
      ReportTaskResult::default_instance_,
      ReportTaskResult_offsets_,
      -1,
      -1,
      -1,
      sizeof(ReportTaskResult),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportTaskResult, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportTaskResult, _is_default_instance_));
  GetIncomeRequest_descriptor_ = file->message_type(11);
  static const int GetIncomeRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetIncomeRequest, transid_),
  };
  GetIncomeRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetIncomeRequest_descriptor_,
      GetIncomeRequest::default_instance_,
      GetIncomeRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetIncomeRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetIncomeRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetIncomeRequest, _is_default_instance_));
  GetIncomeResult_descriptor_ = file->message_type(12);
  static const int GetIncomeResult_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetIncomeResult, retbase_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetIncomeResult, pre_cash_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetIncomeResult, useable_cash_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetIncomeResult, fetched_cash_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetIncomeResult, rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetIncomeResult, desc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetIncomeResult, transid_),
  };
  GetIncomeResult_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetIncomeResult_descriptor_,
      GetIncomeResult::default_instance_,
      GetIncomeResult_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetIncomeResult),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetIncomeResult, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetIncomeResult, _is_default_instance_));
  AckRequest_descriptor_ = file->message_type(13);
  static const int AckRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AckRequest, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AckRequest, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AckRequest, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AckRequest, transid_),
  };
  AckRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AckRequest_descriptor_,
      AckRequest::default_instance_,
      AckRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(AckRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AckRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AckRequest, _is_default_instance_));
  SaveTaskRequest_descriptor_ = file->message_type(14);
  static const int SaveTaskRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveTaskRequest, taskinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveTaskRequest, transid_),
  };
  SaveTaskRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SaveTaskRequest_descriptor_,
      SaveTaskRequest::default_instance_,
      SaveTaskRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(SaveTaskRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveTaskRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveTaskRequest, _is_default_instance_));
  SaveTaskResult_descriptor_ = file->message_type(15);
  static const int SaveTaskResult_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveTaskResult, retbase_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveTaskResult, transid_),
  };
  SaveTaskResult_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SaveTaskResult_descriptor_,
      SaveTaskResult::default_instance_,
      SaveTaskResult_offsets_,
      -1,
      -1,
      -1,
      sizeof(SaveTaskResult),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveTaskResult, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveTaskResult, _is_default_instance_));
  WithdrawRequest_descriptor_ = file->message_type(16);
  static const int WithdrawRequest_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WithdrawRequest, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WithdrawRequest, withdraw_cash_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WithdrawRequest, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WithdrawRequest, open_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WithdrawRequest, passwd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WithdrawRequest, user_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WithdrawRequest, desc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WithdrawRequest, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WithdrawRequest, transid_),
  };
  WithdrawRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      WithdrawRequest_descriptor_,
      WithdrawRequest::default_instance_,
      WithdrawRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(WithdrawRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WithdrawRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WithdrawRequest, _is_default_instance_));
  WithdrawResult_descriptor_ = file->message_type(17);
  static const int WithdrawResult_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WithdrawResult, retbase_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WithdrawResult, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WithdrawResult, withdraw_cash_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WithdrawResult, trade_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WithdrawResult, desc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WithdrawResult, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WithdrawResult, pre_cash_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WithdrawResult, useable_cash_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WithdrawResult, fetched_cash_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WithdrawResult, transid_),
  };
  WithdrawResult_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      WithdrawResult_descriptor_,
      WithdrawResult::default_instance_,
      WithdrawResult_offsets_,
      -1,
      -1,
      -1,
      sizeof(WithdrawResult),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WithdrawResult, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WithdrawResult, _is_default_instance_));
  MysqlRequest_descriptor_ = file->message_type(18);
  static const int MysqlRequest_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MysqlRequest, sqlid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MysqlRequest, sql_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MysqlRequest, isrequestfield_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MysqlRequest, limit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MysqlRequest, timeout_),
  };
  MysqlRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MysqlRequest_descriptor_,
      MysqlRequest::default_instance_,
      MysqlRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(MysqlRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MysqlRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MysqlRequest, _is_default_instance_));
  MysqlResult_descriptor_ = file->message_type(19);
  static const int MysqlResult_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MysqlResult, retbase_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MysqlResult, affectedrows_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MysqlResult, insertid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MysqlResult, rows_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MysqlResult, sqlid_),
  };
  MysqlResult_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MysqlResult_descriptor_,
      MysqlResult::default_instance_,
      MysqlResult_offsets_,
      -1,
      -1,
      -1,
      sizeof(MysqlResult),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MysqlResult, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MysqlResult, _is_default_instance_));
  RedispRequest_descriptor_ = file->message_type(20);
  static const int RedispRequest_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedispRequest, sqlid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedispRequest, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedispRequest, param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedispRequest, limit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedispRequest, timeout_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedispRequest, transid_),
  };
  RedispRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RedispRequest_descriptor_,
      RedispRequest::default_instance_,
      RedispRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(RedispRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedispRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedispRequest, _is_default_instance_));
  RedispResult_descriptor_ = file->message_type(21);
  static const int RedispResult_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedispResult, retbase_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedispResult, affectedrows_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedispResult, insertid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedispResult, rows_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedispResult, sqlid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedispResult, transid_),
  };
  RedispResult_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RedispResult_descriptor_,
      RedispResult::default_instance_,
      RedispResult_offsets_,
      -1,
      -1,
      -1,
      sizeof(RedispResult),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedispResult, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedispResult, _is_default_instance_));
  InnerCommonMsg_descriptor_ = file->message_type(22);
  static const int InnerCommonMsg_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InnerCommonMsg, items_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InnerCommonMsg, transfer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InnerCommonMsg, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InnerCommonMsg, transid_),
  };
  InnerCommonMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InnerCommonMsg_descriptor_,
      InnerCommonMsg::default_instance_,
      InnerCommonMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(InnerCommonMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InnerCommonMsg, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InnerCommonMsg, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_adv_5fprotocol_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UserKeepAliveRequest_descriptor_, &UserKeepAliveRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UserKeepAliveResult_descriptor_, &UserKeepAliveResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoginRequest_descriptor_, &LoginRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoginResult_descriptor_, &LoginResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LogoutRequest_descriptor_, &LogoutRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LogoutResult_descriptor_, &LogoutResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TaskNotify_descriptor_, &TaskNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SyncTaskRequest_descriptor_, &SyncTaskRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SyncTaskResult_descriptor_, &SyncTaskResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReportTaskRequest_descriptor_, &ReportTaskRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReportTaskResult_descriptor_, &ReportTaskResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetIncomeRequest_descriptor_, &GetIncomeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetIncomeResult_descriptor_, &GetIncomeResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AckRequest_descriptor_, &AckRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SaveTaskRequest_descriptor_, &SaveTaskRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SaveTaskResult_descriptor_, &SaveTaskResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      WithdrawRequest_descriptor_, &WithdrawRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      WithdrawResult_descriptor_, &WithdrawResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MysqlRequest_descriptor_, &MysqlRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MysqlResult_descriptor_, &MysqlResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RedispRequest_descriptor_, &RedispRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RedispResult_descriptor_, &RedispResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InnerCommonMsg_descriptor_, &InnerCommonMsg::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_adv_5fprotocol_2eproto() {
  delete UserKeepAliveRequest::default_instance_;
  delete UserKeepAliveRequest_reflection_;
  delete UserKeepAliveResult::default_instance_;
  delete UserKeepAliveResult_reflection_;
  delete LoginRequest::default_instance_;
  delete LoginRequest_reflection_;
  delete LoginResult::default_instance_;
  delete LoginResult_reflection_;
  delete LogoutRequest::default_instance_;
  delete LogoutRequest_reflection_;
  delete LogoutResult::default_instance_;
  delete LogoutResult_reflection_;
  delete TaskNotify::default_instance_;
  delete TaskNotify_reflection_;
  delete SyncTaskRequest::default_instance_;
  delete SyncTaskRequest_reflection_;
  delete SyncTaskResult::default_instance_;
  delete SyncTaskResult_reflection_;
  delete ReportTaskRequest::default_instance_;
  delete ReportTaskRequest_reflection_;
  delete ReportTaskResult::default_instance_;
  delete ReportTaskResult_reflection_;
  delete GetIncomeRequest::default_instance_;
  delete GetIncomeRequest_reflection_;
  delete GetIncomeResult::default_instance_;
  delete GetIncomeResult_reflection_;
  delete AckRequest::default_instance_;
  delete AckRequest_reflection_;
  delete SaveTaskRequest::default_instance_;
  delete SaveTaskRequest_reflection_;
  delete SaveTaskResult::default_instance_;
  delete SaveTaskResult_reflection_;
  delete WithdrawRequest::default_instance_;
  delete WithdrawRequest_reflection_;
  delete WithdrawResult::default_instance_;
  delete WithdrawResult_reflection_;
  delete MysqlRequest::default_instance_;
  delete MysqlRequest_reflection_;
  delete MysqlResult::default_instance_;
  delete MysqlResult_reflection_;
  delete RedispRequest::default_instance_;
  delete RedispRequest_reflection_;
  delete RedispResult::default_instance_;
  delete RedispResult_reflection_;
  delete InnerCommonMsg::default_instance_;
  delete InnerCommonMsg_reflection_;
}

void protobuf_AddDesc_adv_5fprotocol_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_adv_5fprotocol_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::com::adv::msg::protobuf_AddDesc_adv_5fbase_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022adv_protocol.proto\022\013com.adv.msg\032\016adv_b"
    "ase.proto\"{\n\024UserKeepAliveRequest\022\016\n\006con"
    "did\030\001 \001(\005\022\022\n\ndevicetype\030\002 \001(\005\022\020\n\010devicei"
    "d\030\003 \001(\t\022\013\n\003uid\030\004 \001(\005\022\017\n\007version\030\005 \001(\005\022\017\n"
    "\007transid\030  \001(\005\"\241\001\n\023UserKeepAliveResult\022%"
    "\n\007retbase\030\001 \001(\0132\024.com.adv.msg.RetBase\022\016\n"
    "\006condid\030\002 \001(\005\022\022\n\ndevicetype\030\003 \001(\005\022\020\n\010dev"
    "iceid\030\004 \001(\t\022\013\n\003uid\030\005 \001(\005\022\017\n\007version\030\006 \001("
    "\005\022\017\n\007transid\030  \001(\005\"\255\003\n\014LoginRequest\022\r\n\005t"
    "oken\030\001 \001(\t\022\020\n\010magicnum\030\002 \001(\005\022\016\n\006status\030\003"
    " \001(\005\022\022\n\ndevicetype\030\004 \001(\005\022\020\n\010deviceid\030\006 \001"
    "(\t\022\023\n\013description\030\007 \001(\t\022\016\n\006condid\030\010 \001(\005\022"
    "\020\n\010loginseq\030\t \001(\005\022\023\n\013accounttype\030\n \001(\005\022\017"
    "\n\007account\030\013 \001(\t\022\016\n\006passwd\030\014 \001(\t\022\017\n\007versi"
    "on\030\r \001(\005\022\020\n\010nickname\030\016 \001(\t\022\016\n\006gender\030\017 \001"
    "(\005\022\020\n\010province\030\020 \001(\t\022\014\n\004city\030\021 \001(\t\022\017\n\007co"
    "untry\030\022 \001(\t\022\016\n\006avatar\030\023 \001(\t\022\014\n\004desc\030\024 \001("
    "\t\022\r\n\005email\030\025 \001(\t\022\016\n\006mobile\030\026 \001(\t\022\014\n\004time"
    "\030\027 \001(\005\022\013\n\003uid\030\030 \001(\005\022\014\n\004flag\030\031 \001(\005\022\017\n\007tra"
    "nsid\030  \001(\005\"\224\001\n\013LoginResult\022%\n\007retbase\030\001 "
    "\001(\0132\024.com.adv.msg.RetBase\022\013\n\003key\030\002 \001(\t\022\013"
    "\n\003uid\030\003 \001(\005\022\020\n\010loginseq\030\004 \001(\005\022\023\n\013account"
    "type\030\005 \001(\005\022\014\n\004time\030\006 \001(\005\022\017\n\007transid\030  \001("
    "\005\"U\n\rLogoutRequest\022\022\n\ndeviceType\030\001 \001(\005\022\020"
    "\n\010deviceid\030\002 \001(\t\022\r\n\005conid\030\003 \001(\005\022\017\n\007trans"
    "id\030  \001(\005\"F\n\014LogoutResult\022%\n\007retbase\030\001 \001("
    "\0132\024.com.adv.msg.RetBase\022\017\n\007transid\030  \001(\005"
    "\"/\n\nTaskNotify\022\020\n\010tasktype\030\001 \001(\005\022\017\n\007tran"
    "sid\030  \001(\005\"l\n\017SyncTaskRequest\022\021\n\tsyncpoin"
    "t\030\001 \001(\003\022\020\n\010synctype\030\002 \001(\005\022\020\n\010syncflag\030\003 "
    "\001(\005\022\021\n\tsynclimit\030\004 \001(\005\022\017\n\007transid\030  \001(\005\""
    "\255\001\n\016SyncTaskResult\022%\n\007retbase\030\001 \001(\0132\024.co"
    "m.adv.msg.RetBase\022(\n\ttaskinfos\030\002 \003(\0132\025.c"
    "om.adv.msg.TaskInfo\022\020\n\010synctype\030\003 \001(\005\022\024\n"
    "\014continueflag\030\004 \001(\005\022\021\n\tmaxtaskid\030\005 \001(\003\022\017"
    "\n\007transid\030  \001(\005\"]\n\021ReportTaskRequest\022\'\n\010"
    "taskinfo\030\001 \001(\0132\025.com.adv.msg.TaskInfo\022\016\n"
    "\006reward\030\002 \001(\t\022\017\n\007transid\030  \001(\005\"\244\001\n\020Repor"
    "tTaskResult\022%\n\007retbase\030\001 \001(\0132\024.com.adv.m"
    "sg.RetBase\022\016\n\006taskid\030\002 \001(\003\022\016\n\006reward\030\003 \001"
    "(\t\022\021\n\tdone_step\030\004 \001(\005\022\020\n\010tasktype\030\005 \001(\005\022"
    "\023\n\013report_time\030\006 \001(\005\022\017\n\007transid\030  \001(\005\"#\n"
    "\020GetIncomeRequest\022\017\n\007transid\030  \001(\005\"\243\001\n\017G"
    "etIncomeResult\022%\n\007retbase\030\001 \001(\0132\024.com.ad"
    "v.msg.RetBase\022\020\n\010pre_cash\030\002 \001(\t\022\024\n\014useab"
    "le_cash\030\003 \001(\t\022\024\n\014fetched_cash\030\004 \001(\t\022\014\n\004r"
    "ank\030\005 \001(\005\022\014\n\004desc\030\006 \001(\t\022\017\n\007transid\030  \001(\005"
    "\"E\n\nAckRequest\022\014\n\004type\030\001 \001(\005\022\n\n\002id\030\002 \003(\003"
    "\022\014\n\004time\030\003 \001(\005\022\017\n\007transid\030  \001(\005\"K\n\017SaveT"
    "askRequest\022\'\n\010taskinfo\030\001 \003(\0132\025.com.adv.m"
    "sg.TaskInfo\022\017\n\007transid\030  \001(\005\"H\n\016SaveTask"
    "Result\022%\n\007retbase\030\001 \001(\0132\024.com.adv.msg.Re"
    "tBase\022\017\n\007transid\030  \001(\005\"\243\001\n\017WithdrawReque"
    "st\022\014\n\004type\030\001 \001(\005\022\025\n\rwithdraw_cash\030\002 \001(\005\022"
    "\n\n\002id\030\003 \001(\t\022\017\n\007open_id\030\004 \001(\t\022\016\n\006passwd\030\005"
    " \001(\t\022\021\n\tuser_name\030\006 \001(\t\022\014\n\004desc\030\007 \001(\t\022\014\n"
    "\004time\030\010 \001(\005\022\017\n\007transid\030  \001(\005\"\331\001\n\016Withdra"
    "wResult\022%\n\007retbase\030\001 \001(\0132\024.com.adv.msg.R"
    "etBase\022\014\n\004type\030\002 \001(\005\022\025\n\rwithdraw_cash\030\003 "
    "\001(\005\022\020\n\010trade_id\030\004 \001(\t\022\014\n\004desc\030\005 \001(\t\022\014\n\004t"
    "ime\030\006 \001(\005\022\020\n\010pre_cash\030\007 \001(\t\022\024\n\014useable_c"
    "ash\030\010 \001(\t\022\024\n\014fetched_cash\030\t \001(\t\022\017\n\007trans"
    "id\030  \001(\005\"b\n\014MysqlRequest\022\r\n\005sqlid\030\001 \001(\005\022"
    "\013\n\003sql\030\002 \001(\t\022\026\n\016isrequestfield\030\003 \001(\005\022\r\n\005"
    "limit\030\004 \001(\005\022\017\n\007timeout\030\005 \001(\005\"\214\001\n\013MysqlRe"
    "sult\022%\n\007retbase\030\001 \001(\0132\024.com.adv.msg.RetB"
    "ase\022\024\n\014affectedrows\030\002 \001(\005\022\020\n\010insertid\030\003 "
    "\001(\005\022\037\n\004rows\030\004 \003(\0132\021.com.adv.msg.PRow\022\r\n\005"
    "sqlid\030\005 \001(\005\"k\n\rRedispRequest\022\r\n\005sqlid\030\001 "
    "\001(\005\022\013\n\003key\030\002 \001(\t\022\r\n\005param\030\003 \001(\005\022\r\n\005limit"
    "\030\004 \001(\005\022\017\n\007timeout\030\005 \001(\005\022\017\n\007transid\030  \001(\005"
    "\"\236\001\n\014RedispResult\022%\n\007retbase\030\001 \001(\0132\024.com"
    ".adv.msg.RetBase\022\024\n\014affectedrows\030\002 \001(\005\022\020"
    "\n\010insertid\030\003 \001(\005\022\037\n\004rows\030\004 \003(\0132\021.com.adv"
    ".msg.PRow\022\r\n\005sqlid\030\005 \001(\005\022\017\n\007transid\030  \001("
    "\005\"h\n\016InnerCommonMsg\022%\n\005items\030\001 \003(\0132\026.com"
    ".adv.msg.PDataCell\022\020\n\010transfer\030\002 \001(\t\022\014\n\004"
    "time\030\003 \001(\005\022\017\n\007transid\030  \001(\005b\006proto3", 3115);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "adv_protocol.proto", &protobuf_RegisterTypes);
  UserKeepAliveRequest::default_instance_ = new UserKeepAliveRequest();
  UserKeepAliveResult::default_instance_ = new UserKeepAliveResult();
  LoginRequest::default_instance_ = new LoginRequest();
  LoginResult::default_instance_ = new LoginResult();
  LogoutRequest::default_instance_ = new LogoutRequest();
  LogoutResult::default_instance_ = new LogoutResult();
  TaskNotify::default_instance_ = new TaskNotify();
  SyncTaskRequest::default_instance_ = new SyncTaskRequest();
  SyncTaskResult::default_instance_ = new SyncTaskResult();
  ReportTaskRequest::default_instance_ = new ReportTaskRequest();
  ReportTaskResult::default_instance_ = new ReportTaskResult();
  GetIncomeRequest::default_instance_ = new GetIncomeRequest();
  GetIncomeResult::default_instance_ = new GetIncomeResult();
  AckRequest::default_instance_ = new AckRequest();
  SaveTaskRequest::default_instance_ = new SaveTaskRequest();
  SaveTaskResult::default_instance_ = new SaveTaskResult();
  WithdrawRequest::default_instance_ = new WithdrawRequest();
  WithdrawResult::default_instance_ = new WithdrawResult();
  MysqlRequest::default_instance_ = new MysqlRequest();
  MysqlResult::default_instance_ = new MysqlResult();
  RedispRequest::default_instance_ = new RedispRequest();
  RedispResult::default_instance_ = new RedispResult();
  InnerCommonMsg::default_instance_ = new InnerCommonMsg();
  UserKeepAliveRequest::default_instance_->InitAsDefaultInstance();
  UserKeepAliveResult::default_instance_->InitAsDefaultInstance();
  LoginRequest::default_instance_->InitAsDefaultInstance();
  LoginResult::default_instance_->InitAsDefaultInstance();
  LogoutRequest::default_instance_->InitAsDefaultInstance();
  LogoutResult::default_instance_->InitAsDefaultInstance();
  TaskNotify::default_instance_->InitAsDefaultInstance();
  SyncTaskRequest::default_instance_->InitAsDefaultInstance();
  SyncTaskResult::default_instance_->InitAsDefaultInstance();
  ReportTaskRequest::default_instance_->InitAsDefaultInstance();
  ReportTaskResult::default_instance_->InitAsDefaultInstance();
  GetIncomeRequest::default_instance_->InitAsDefaultInstance();
  GetIncomeResult::default_instance_->InitAsDefaultInstance();
  AckRequest::default_instance_->InitAsDefaultInstance();
  SaveTaskRequest::default_instance_->InitAsDefaultInstance();
  SaveTaskResult::default_instance_->InitAsDefaultInstance();
  WithdrawRequest::default_instance_->InitAsDefaultInstance();
  WithdrawResult::default_instance_->InitAsDefaultInstance();
  MysqlRequest::default_instance_->InitAsDefaultInstance();
  MysqlResult::default_instance_->InitAsDefaultInstance();
  RedispRequest::default_instance_->InitAsDefaultInstance();
  RedispResult::default_instance_->InitAsDefaultInstance();
  InnerCommonMsg::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_adv_5fprotocol_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_adv_5fprotocol_2eproto {
  StaticDescriptorInitializer_adv_5fprotocol_2eproto() {
    protobuf_AddDesc_adv_5fprotocol_2eproto();
  }
} static_descriptor_initializer_adv_5fprotocol_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserKeepAliveRequest::kCondidFieldNumber;
const int UserKeepAliveRequest::kDevicetypeFieldNumber;
const int UserKeepAliveRequest::kDeviceidFieldNumber;
const int UserKeepAliveRequest::kUidFieldNumber;
const int UserKeepAliveRequest::kVersionFieldNumber;
const int UserKeepAliveRequest::kTransidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserKeepAliveRequest::UserKeepAliveRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.adv.msg.UserKeepAliveRequest)
}

void UserKeepAliveRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UserKeepAliveRequest::UserKeepAliveRequest(const UserKeepAliveRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.adv.msg.UserKeepAliveRequest)
}

void UserKeepAliveRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  condid_ = 0;
  devicetype_ = 0;
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uid_ = 0;
  version_ = 0;
  transid_ = 0;
}

UserKeepAliveRequest::~UserKeepAliveRequest() {
  // @@protoc_insertion_point(destructor:com.adv.msg.UserKeepAliveRequest)
  SharedDtor();
}

void UserKeepAliveRequest::SharedDtor() {
  deviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void UserKeepAliveRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserKeepAliveRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserKeepAliveRequest_descriptor_;
}

const UserKeepAliveRequest& UserKeepAliveRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_adv_5fprotocol_2eproto();
  return *default_instance_;
}

UserKeepAliveRequest* UserKeepAliveRequest::default_instance_ = NULL;

UserKeepAliveRequest* UserKeepAliveRequest::New(::google::protobuf::Arena* arena) const {
  UserKeepAliveRequest* n = new UserKeepAliveRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserKeepAliveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:com.adv.msg.UserKeepAliveRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(UserKeepAliveRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<UserKeepAliveRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(condid_, devicetype_);
  ZR_(uid_, transid_);
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool UserKeepAliveRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.adv.msg.UserKeepAliveRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 condid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &condid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_devicetype;
        break;
      }

      // optional int32 devicetype = 2;
      case 2: {
        if (tag == 16) {
         parse_devicetype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &devicetype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_deviceid;
        break;
      }

      // optional string deviceid = 3;
      case 3: {
        if (tag == 26) {
         parse_deviceid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deviceid().data(), this->deviceid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.UserKeepAliveRequest.deviceid"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_uid;
        break;
      }

      // optional int32 uid = 4;
      case 4: {
        if (tag == 32) {
         parse_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_version;
        break;
      }

      // optional int32 version = 5;
      case 5: {
        if (tag == 40) {
         parse_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(256)) goto parse_transid;
        break;
      }

      // optional int32 transid = 32;
      case 32: {
        if (tag == 256) {
         parse_transid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.adv.msg.UserKeepAliveRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.adv.msg.UserKeepAliveRequest)
  return false;
#undef DO_
}

void UserKeepAliveRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.adv.msg.UserKeepAliveRequest)
  // optional int32 condid = 1;
  if (this->condid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->condid(), output);
  }

  // optional int32 devicetype = 2;
  if (this->devicetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->devicetype(), output);
  }

  // optional string deviceid = 3;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), this->deviceid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.UserKeepAliveRequest.deviceid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->deviceid(), output);
  }

  // optional int32 uid = 4;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->uid(), output);
  }

  // optional int32 version = 5;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->version(), output);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->transid(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.adv.msg.UserKeepAliveRequest)
}

::google::protobuf::uint8* UserKeepAliveRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.adv.msg.UserKeepAliveRequest)
  // optional int32 condid = 1;
  if (this->condid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->condid(), target);
  }

  // optional int32 devicetype = 2;
  if (this->devicetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->devicetype(), target);
  }

  // optional string deviceid = 3;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), this->deviceid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.UserKeepAliveRequest.deviceid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->deviceid(), target);
  }

  // optional int32 uid = 4;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->uid(), target);
  }

  // optional int32 version = 5;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->version(), target);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->transid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.adv.msg.UserKeepAliveRequest)
  return target;
}

int UserKeepAliveRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:com.adv.msg.UserKeepAliveRequest)
  int total_size = 0;

  // optional int32 condid = 1;
  if (this->condid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->condid());
  }

  // optional int32 devicetype = 2;
  if (this->devicetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->devicetype());
  }

  // optional string deviceid = 3;
  if (this->deviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deviceid());
  }

  // optional int32 uid = 4;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uid());
  }

  // optional int32 version = 5;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->transid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserKeepAliveRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.adv.msg.UserKeepAliveRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UserKeepAliveRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UserKeepAliveRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.adv.msg.UserKeepAliveRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.adv.msg.UserKeepAliveRequest)
    MergeFrom(*source);
  }
}

void UserKeepAliveRequest::MergeFrom(const UserKeepAliveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.adv.msg.UserKeepAliveRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.condid() != 0) {
    set_condid(from.condid());
  }
  if (from.devicetype() != 0) {
    set_devicetype(from.devicetype());
  }
  if (from.deviceid().size() > 0) {

    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.transid() != 0) {
    set_transid(from.transid());
  }
}

void UserKeepAliveRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.adv.msg.UserKeepAliveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserKeepAliveRequest::CopyFrom(const UserKeepAliveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.adv.msg.UserKeepAliveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserKeepAliveRequest::IsInitialized() const {

  return true;
}

void UserKeepAliveRequest::Swap(UserKeepAliveRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserKeepAliveRequest::InternalSwap(UserKeepAliveRequest* other) {
  std::swap(condid_, other->condid_);
  std::swap(devicetype_, other->devicetype_);
  deviceid_.Swap(&other->deviceid_);
  std::swap(uid_, other->uid_);
  std::swap(version_, other->version_);
  std::swap(transid_, other->transid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserKeepAliveRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserKeepAliveRequest_descriptor_;
  metadata.reflection = UserKeepAliveRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserKeepAliveRequest

// optional int32 condid = 1;
void UserKeepAliveRequest::clear_condid() {
  condid_ = 0;
}
 ::google::protobuf::int32 UserKeepAliveRequest::condid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.UserKeepAliveRequest.condid)
  return condid_;
}
 void UserKeepAliveRequest::set_condid(::google::protobuf::int32 value) {
  
  condid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.UserKeepAliveRequest.condid)
}

// optional int32 devicetype = 2;
void UserKeepAliveRequest::clear_devicetype() {
  devicetype_ = 0;
}
 ::google::protobuf::int32 UserKeepAliveRequest::devicetype() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.UserKeepAliveRequest.devicetype)
  return devicetype_;
}
 void UserKeepAliveRequest::set_devicetype(::google::protobuf::int32 value) {
  
  devicetype_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.UserKeepAliveRequest.devicetype)
}

// optional string deviceid = 3;
void UserKeepAliveRequest::clear_deviceid() {
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UserKeepAliveRequest::deviceid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.UserKeepAliveRequest.deviceid)
  return deviceid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserKeepAliveRequest::set_deviceid(const ::std::string& value) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.UserKeepAliveRequest.deviceid)
}
 void UserKeepAliveRequest::set_deviceid(const char* value) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.UserKeepAliveRequest.deviceid)
}
 void UserKeepAliveRequest::set_deviceid(const char* value, size_t size) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.UserKeepAliveRequest.deviceid)
}
 ::std::string* UserKeepAliveRequest::mutable_deviceid() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.UserKeepAliveRequest.deviceid)
  return deviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserKeepAliveRequest::release_deviceid() {
  // @@protoc_insertion_point(field_release:com.adv.msg.UserKeepAliveRequest.deviceid)
  
  return deviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserKeepAliveRequest::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid != NULL) {
    
  } else {
    
  }
  deviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceid);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.UserKeepAliveRequest.deviceid)
}

// optional int32 uid = 4;
void UserKeepAliveRequest::clear_uid() {
  uid_ = 0;
}
 ::google::protobuf::int32 UserKeepAliveRequest::uid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.UserKeepAliveRequest.uid)
  return uid_;
}
 void UserKeepAliveRequest::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.UserKeepAliveRequest.uid)
}

// optional int32 version = 5;
void UserKeepAliveRequest::clear_version() {
  version_ = 0;
}
 ::google::protobuf::int32 UserKeepAliveRequest::version() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.UserKeepAliveRequest.version)
  return version_;
}
 void UserKeepAliveRequest::set_version(::google::protobuf::int32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.UserKeepAliveRequest.version)
}

// optional int32 transid = 32;
void UserKeepAliveRequest::clear_transid() {
  transid_ = 0;
}
 ::google::protobuf::int32 UserKeepAliveRequest::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.UserKeepAliveRequest.transid)
  return transid_;
}
 void UserKeepAliveRequest::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.UserKeepAliveRequest.transid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserKeepAliveResult::kRetbaseFieldNumber;
const int UserKeepAliveResult::kCondidFieldNumber;
const int UserKeepAliveResult::kDevicetypeFieldNumber;
const int UserKeepAliveResult::kDeviceidFieldNumber;
const int UserKeepAliveResult::kUidFieldNumber;
const int UserKeepAliveResult::kVersionFieldNumber;
const int UserKeepAliveResult::kTransidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserKeepAliveResult::UserKeepAliveResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.adv.msg.UserKeepAliveResult)
}

void UserKeepAliveResult::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  retbase_ = const_cast< ::com::adv::msg::RetBase*>(&::com::adv::msg::RetBase::default_instance());
}

UserKeepAliveResult::UserKeepAliveResult(const UserKeepAliveResult& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.adv.msg.UserKeepAliveResult)
}

void UserKeepAliveResult::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  retbase_ = NULL;
  condid_ = 0;
  devicetype_ = 0;
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uid_ = 0;
  version_ = 0;
  transid_ = 0;
}

UserKeepAliveResult::~UserKeepAliveResult() {
  // @@protoc_insertion_point(destructor:com.adv.msg.UserKeepAliveResult)
  SharedDtor();
}

void UserKeepAliveResult::SharedDtor() {
  deviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete retbase_;
  }
}

void UserKeepAliveResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserKeepAliveResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserKeepAliveResult_descriptor_;
}

const UserKeepAliveResult& UserKeepAliveResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_adv_5fprotocol_2eproto();
  return *default_instance_;
}

UserKeepAliveResult* UserKeepAliveResult::default_instance_ = NULL;

UserKeepAliveResult* UserKeepAliveResult::New(::google::protobuf::Arena* arena) const {
  UserKeepAliveResult* n = new UserKeepAliveResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserKeepAliveResult::Clear() {
// @@protoc_insertion_point(message_clear_start:com.adv.msg.UserKeepAliveResult)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(UserKeepAliveResult, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<UserKeepAliveResult*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(condid_, devicetype_);
  ZR_(uid_, transid_);
  if (GetArenaNoVirtual() == NULL && retbase_ != NULL) delete retbase_;
  retbase_ = NULL;
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool UserKeepAliveResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.adv.msg.UserKeepAliveResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.adv.msg.RetBase retbase = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_retbase()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_condid;
        break;
      }

      // optional int32 condid = 2;
      case 2: {
        if (tag == 16) {
         parse_condid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &condid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_devicetype;
        break;
      }

      // optional int32 devicetype = 3;
      case 3: {
        if (tag == 24) {
         parse_devicetype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &devicetype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_deviceid;
        break;
      }

      // optional string deviceid = 4;
      case 4: {
        if (tag == 34) {
         parse_deviceid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deviceid().data(), this->deviceid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.UserKeepAliveResult.deviceid"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_uid;
        break;
      }

      // optional int32 uid = 5;
      case 5: {
        if (tag == 40) {
         parse_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_version;
        break;
      }

      // optional int32 version = 6;
      case 6: {
        if (tag == 48) {
         parse_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(256)) goto parse_transid;
        break;
      }

      // optional int32 transid = 32;
      case 32: {
        if (tag == 256) {
         parse_transid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.adv.msg.UserKeepAliveResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.adv.msg.UserKeepAliveResult)
  return false;
#undef DO_
}

void UserKeepAliveResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.adv.msg.UserKeepAliveResult)
  // optional .com.adv.msg.RetBase retbase = 1;
  if (this->has_retbase()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->retbase_, output);
  }

  // optional int32 condid = 2;
  if (this->condid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->condid(), output);
  }

  // optional int32 devicetype = 3;
  if (this->devicetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->devicetype(), output);
  }

  // optional string deviceid = 4;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), this->deviceid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.UserKeepAliveResult.deviceid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->deviceid(), output);
  }

  // optional int32 uid = 5;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->uid(), output);
  }

  // optional int32 version = 6;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->version(), output);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->transid(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.adv.msg.UserKeepAliveResult)
}

::google::protobuf::uint8* UserKeepAliveResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.adv.msg.UserKeepAliveResult)
  // optional .com.adv.msg.RetBase retbase = 1;
  if (this->has_retbase()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->retbase_, false, target);
  }

  // optional int32 condid = 2;
  if (this->condid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->condid(), target);
  }

  // optional int32 devicetype = 3;
  if (this->devicetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->devicetype(), target);
  }

  // optional string deviceid = 4;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), this->deviceid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.UserKeepAliveResult.deviceid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->deviceid(), target);
  }

  // optional int32 uid = 5;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->uid(), target);
  }

  // optional int32 version = 6;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->version(), target);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->transid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.adv.msg.UserKeepAliveResult)
  return target;
}

int UserKeepAliveResult::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:com.adv.msg.UserKeepAliveResult)
  int total_size = 0;

  // optional .com.adv.msg.RetBase retbase = 1;
  if (this->has_retbase()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->retbase_);
  }

  // optional int32 condid = 2;
  if (this->condid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->condid());
  }

  // optional int32 devicetype = 3;
  if (this->devicetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->devicetype());
  }

  // optional string deviceid = 4;
  if (this->deviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deviceid());
  }

  // optional int32 uid = 5;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uid());
  }

  // optional int32 version = 6;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->transid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserKeepAliveResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.adv.msg.UserKeepAliveResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UserKeepAliveResult* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UserKeepAliveResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.adv.msg.UserKeepAliveResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.adv.msg.UserKeepAliveResult)
    MergeFrom(*source);
  }
}

void UserKeepAliveResult::MergeFrom(const UserKeepAliveResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.adv.msg.UserKeepAliveResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_retbase()) {
    mutable_retbase()->::com::adv::msg::RetBase::MergeFrom(from.retbase());
  }
  if (from.condid() != 0) {
    set_condid(from.condid());
  }
  if (from.devicetype() != 0) {
    set_devicetype(from.devicetype());
  }
  if (from.deviceid().size() > 0) {

    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.transid() != 0) {
    set_transid(from.transid());
  }
}

void UserKeepAliveResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.adv.msg.UserKeepAliveResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserKeepAliveResult::CopyFrom(const UserKeepAliveResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.adv.msg.UserKeepAliveResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserKeepAliveResult::IsInitialized() const {

  return true;
}

void UserKeepAliveResult::Swap(UserKeepAliveResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserKeepAliveResult::InternalSwap(UserKeepAliveResult* other) {
  std::swap(retbase_, other->retbase_);
  std::swap(condid_, other->condid_);
  std::swap(devicetype_, other->devicetype_);
  deviceid_.Swap(&other->deviceid_);
  std::swap(uid_, other->uid_);
  std::swap(version_, other->version_);
  std::swap(transid_, other->transid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserKeepAliveResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserKeepAliveResult_descriptor_;
  metadata.reflection = UserKeepAliveResult_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserKeepAliveResult

// optional .com.adv.msg.RetBase retbase = 1;
bool UserKeepAliveResult::has_retbase() const {
  return !_is_default_instance_ && retbase_ != NULL;
}
void UserKeepAliveResult::clear_retbase() {
  if (GetArenaNoVirtual() == NULL && retbase_ != NULL) delete retbase_;
  retbase_ = NULL;
}
const ::com::adv::msg::RetBase& UserKeepAliveResult::retbase() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.UserKeepAliveResult.retbase)
  return retbase_ != NULL ? *retbase_ : *default_instance_->retbase_;
}
::com::adv::msg::RetBase* UserKeepAliveResult::mutable_retbase() {
  
  if (retbase_ == NULL) {
    retbase_ = new ::com::adv::msg::RetBase;
  }
  // @@protoc_insertion_point(field_mutable:com.adv.msg.UserKeepAliveResult.retbase)
  return retbase_;
}
::com::adv::msg::RetBase* UserKeepAliveResult::release_retbase() {
  // @@protoc_insertion_point(field_release:com.adv.msg.UserKeepAliveResult.retbase)
  
  ::com::adv::msg::RetBase* temp = retbase_;
  retbase_ = NULL;
  return temp;
}
void UserKeepAliveResult::set_allocated_retbase(::com::adv::msg::RetBase* retbase) {
  delete retbase_;
  retbase_ = retbase;
  if (retbase) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.UserKeepAliveResult.retbase)
}

// optional int32 condid = 2;
void UserKeepAliveResult::clear_condid() {
  condid_ = 0;
}
 ::google::protobuf::int32 UserKeepAliveResult::condid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.UserKeepAliveResult.condid)
  return condid_;
}
 void UserKeepAliveResult::set_condid(::google::protobuf::int32 value) {
  
  condid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.UserKeepAliveResult.condid)
}

// optional int32 devicetype = 3;
void UserKeepAliveResult::clear_devicetype() {
  devicetype_ = 0;
}
 ::google::protobuf::int32 UserKeepAliveResult::devicetype() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.UserKeepAliveResult.devicetype)
  return devicetype_;
}
 void UserKeepAliveResult::set_devicetype(::google::protobuf::int32 value) {
  
  devicetype_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.UserKeepAliveResult.devicetype)
}

// optional string deviceid = 4;
void UserKeepAliveResult::clear_deviceid() {
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UserKeepAliveResult::deviceid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.UserKeepAliveResult.deviceid)
  return deviceid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserKeepAliveResult::set_deviceid(const ::std::string& value) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.UserKeepAliveResult.deviceid)
}
 void UserKeepAliveResult::set_deviceid(const char* value) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.UserKeepAliveResult.deviceid)
}
 void UserKeepAliveResult::set_deviceid(const char* value, size_t size) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.UserKeepAliveResult.deviceid)
}
 ::std::string* UserKeepAliveResult::mutable_deviceid() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.UserKeepAliveResult.deviceid)
  return deviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserKeepAliveResult::release_deviceid() {
  // @@protoc_insertion_point(field_release:com.adv.msg.UserKeepAliveResult.deviceid)
  
  return deviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserKeepAliveResult::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid != NULL) {
    
  } else {
    
  }
  deviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceid);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.UserKeepAliveResult.deviceid)
}

// optional int32 uid = 5;
void UserKeepAliveResult::clear_uid() {
  uid_ = 0;
}
 ::google::protobuf::int32 UserKeepAliveResult::uid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.UserKeepAliveResult.uid)
  return uid_;
}
 void UserKeepAliveResult::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.UserKeepAliveResult.uid)
}

// optional int32 version = 6;
void UserKeepAliveResult::clear_version() {
  version_ = 0;
}
 ::google::protobuf::int32 UserKeepAliveResult::version() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.UserKeepAliveResult.version)
  return version_;
}
 void UserKeepAliveResult::set_version(::google::protobuf::int32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.UserKeepAliveResult.version)
}

// optional int32 transid = 32;
void UserKeepAliveResult::clear_transid() {
  transid_ = 0;
}
 ::google::protobuf::int32 UserKeepAliveResult::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.UserKeepAliveResult.transid)
  return transid_;
}
 void UserKeepAliveResult::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.UserKeepAliveResult.transid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginRequest::kTokenFieldNumber;
const int LoginRequest::kMagicnumFieldNumber;
const int LoginRequest::kStatusFieldNumber;
const int LoginRequest::kDevicetypeFieldNumber;
const int LoginRequest::kDeviceidFieldNumber;
const int LoginRequest::kDescriptionFieldNumber;
const int LoginRequest::kCondidFieldNumber;
const int LoginRequest::kLoginseqFieldNumber;
const int LoginRequest::kAccounttypeFieldNumber;
const int LoginRequest::kAccountFieldNumber;
const int LoginRequest::kPasswdFieldNumber;
const int LoginRequest::kVersionFieldNumber;
const int LoginRequest::kNicknameFieldNumber;
const int LoginRequest::kGenderFieldNumber;
const int LoginRequest::kProvinceFieldNumber;
const int LoginRequest::kCityFieldNumber;
const int LoginRequest::kCountryFieldNumber;
const int LoginRequest::kAvatarFieldNumber;
const int LoginRequest::kDescFieldNumber;
const int LoginRequest::kEmailFieldNumber;
const int LoginRequest::kMobileFieldNumber;
const int LoginRequest::kTimeFieldNumber;
const int LoginRequest::kUidFieldNumber;
const int LoginRequest::kFlagFieldNumber;
const int LoginRequest::kTransidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginRequest::LoginRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.adv.msg.LoginRequest)
}

void LoginRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

LoginRequest::LoginRequest(const LoginRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.adv.msg.LoginRequest)
}

void LoginRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  magicnum_ = 0;
  status_ = 0;
  devicetype_ = 0;
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  condid_ = 0;
  loginseq_ = 0;
  accounttype_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_ = 0;
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gender_ = 0;
  province_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = 0;
  uid_ = 0;
  flag_ = 0;
  transid_ = 0;
}

LoginRequest::~LoginRequest() {
  // @@protoc_insertion_point(destructor:com.adv.msg.LoginRequest)
  SharedDtor();
}

void LoginRequest::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  province_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void LoginRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginRequest_descriptor_;
}

const LoginRequest& LoginRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_adv_5fprotocol_2eproto();
  return *default_instance_;
}

LoginRequest* LoginRequest::default_instance_ = NULL;

LoginRequest* LoginRequest::New(::google::protobuf::Arena* arena) const {
  LoginRequest* n = new LoginRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:com.adv.msg.LoginRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(LoginRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<LoginRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(magicnum_, status_);
  ZR_(devicetype_, condid_);
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  loginseq_ = 0;
  ZR_(version_, gender_);
  accounttype_ = 0;
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  province_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(time_, flag_);
  country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transid_ = 0;

#undef ZR_HELPER_
#undef ZR_

}

bool LoginRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.adv.msg.LoginRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string token = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.LoginRequest.token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_magicnum;
        break;
      }

      // optional int32 magicnum = 2;
      case 2: {
        if (tag == 16) {
         parse_magicnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &magicnum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_status;
        break;
      }

      // optional int32 status = 3;
      case 3: {
        if (tag == 24) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_devicetype;
        break;
      }

      // optional int32 devicetype = 4;
      case 4: {
        if (tag == 32) {
         parse_devicetype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &devicetype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_deviceid;
        break;
      }

      // optional string deviceid = 6;
      case 6: {
        if (tag == 50) {
         parse_deviceid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deviceid().data(), this->deviceid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.LoginRequest.deviceid"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_description;
        break;
      }

      // optional string description = 7;
      case 7: {
        if (tag == 58) {
         parse_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.LoginRequest.description"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_condid;
        break;
      }

      // optional int32 condid = 8;
      case 8: {
        if (tag == 64) {
         parse_condid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &condid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_loginseq;
        break;
      }

      // optional int32 loginseq = 9;
      case 9: {
        if (tag == 72) {
         parse_loginseq:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &loginseq_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_accounttype;
        break;
      }

      // optional int32 accounttype = 10;
      case 10: {
        if (tag == 80) {
         parse_accounttype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &accounttype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_account;
        break;
      }

      // optional string account = 11;
      case 11: {
        if (tag == 90) {
         parse_account:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.LoginRequest.account"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_passwd;
        break;
      }

      // optional string passwd = 12;
      case 12: {
        if (tag == 98) {
         parse_passwd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_passwd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->passwd().data(), this->passwd().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.LoginRequest.passwd"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_version;
        break;
      }

      // optional int32 version = 13;
      case 13: {
        if (tag == 104) {
         parse_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_nickname;
        break;
      }

      // optional string nickname = 14;
      case 14: {
        if (tag == 114) {
         parse_nickname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.LoginRequest.nickname"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_gender;
        break;
      }

      // optional int32 gender = 15;
      case 15: {
        if (tag == 120) {
         parse_gender:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gender_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_province;
        break;
      }

      // optional string province = 16;
      case 16: {
        if (tag == 130) {
         parse_province:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_province()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->province().data(), this->province().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.LoginRequest.province"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_city;
        break;
      }

      // optional string city = 17;
      case 17: {
        if (tag == 138) {
         parse_city:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_city()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->city().data(), this->city().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.LoginRequest.city"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_country;
        break;
      }

      // optional string country = 18;
      case 18: {
        if (tag == 146) {
         parse_country:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_country()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->country().data(), this->country().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.LoginRequest.country"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_avatar;
        break;
      }

      // optional string avatar = 19;
      case 19: {
        if (tag == 154) {
         parse_avatar:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_avatar()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->avatar().data(), this->avatar().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.LoginRequest.avatar"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_desc;
        break;
      }

      // optional string desc = 20;
      case 20: {
        if (tag == 162) {
         parse_desc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desc().data(), this->desc().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.LoginRequest.desc"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_email;
        break;
      }

      // optional string email = 21;
      case 21: {
        if (tag == 170) {
         parse_email:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email().data(), this->email().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.LoginRequest.email"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(178)) goto parse_mobile;
        break;
      }

      // optional string mobile = 22;
      case 22: {
        if (tag == 178) {
         parse_mobile:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mobile()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mobile().data(), this->mobile().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.LoginRequest.mobile"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(184)) goto parse_time;
        break;
      }

      // optional int32 time = 23;
      case 23: {
        if (tag == 184) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(192)) goto parse_uid;
        break;
      }

      // optional int32 uid = 24;
      case 24: {
        if (tag == 192) {
         parse_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(200)) goto parse_flag;
        break;
      }

      // optional int32 flag = 25;
      case 25: {
        if (tag == 200) {
         parse_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(256)) goto parse_transid;
        break;
      }

      // optional int32 transid = 32;
      case 32: {
        if (tag == 256) {
         parse_transid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.adv.msg.LoginRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.adv.msg.LoginRequest)
  return false;
#undef DO_
}

void LoginRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.adv.msg.LoginRequest)
  // optional string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.LoginRequest.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // optional int32 magicnum = 2;
  if (this->magicnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->magicnum(), output);
  }

  // optional int32 status = 3;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->status(), output);
  }

  // optional int32 devicetype = 4;
  if (this->devicetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->devicetype(), output);
  }

  // optional string deviceid = 6;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), this->deviceid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.LoginRequest.deviceid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->deviceid(), output);
  }

  // optional string description = 7;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.LoginRequest.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->description(), output);
  }

  // optional int32 condid = 8;
  if (this->condid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->condid(), output);
  }

  // optional int32 loginseq = 9;
  if (this->loginseq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->loginseq(), output);
  }

  // optional int32 accounttype = 10;
  if (this->accounttype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->accounttype(), output);
  }

  // optional string account = 11;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.LoginRequest.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->account(), output);
  }

  // optional string passwd = 12;
  if (this->passwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passwd().data(), this->passwd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.LoginRequest.passwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->passwd(), output);
  }

  // optional int32 version = 13;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->version(), output);
  }

  // optional string nickname = 14;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.LoginRequest.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->nickname(), output);
  }

  // optional int32 gender = 15;
  if (this->gender() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->gender(), output);
  }

  // optional string province = 16;
  if (this->province().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->province().data(), this->province().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.LoginRequest.province");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->province(), output);
  }

  // optional string city = 17;
  if (this->city().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->city().data(), this->city().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.LoginRequest.city");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->city(), output);
  }

  // optional string country = 18;
  if (this->country().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->country().data(), this->country().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.LoginRequest.country");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->country(), output);
  }

  // optional string avatar = 19;
  if (this->avatar().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->avatar().data(), this->avatar().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.LoginRequest.avatar");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->avatar(), output);
  }

  // optional string desc = 20;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.LoginRequest.desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->desc(), output);
  }

  // optional string email = 21;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.LoginRequest.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->email(), output);
  }

  // optional string mobile = 22;
  if (this->mobile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mobile().data(), this->mobile().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.LoginRequest.mobile");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->mobile(), output);
  }

  // optional int32 time = 23;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->time(), output);
  }

  // optional int32 uid = 24;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->uid(), output);
  }

  // optional int32 flag = 25;
  if (this->flag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->flag(), output);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->transid(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.adv.msg.LoginRequest)
}

::google::protobuf::uint8* LoginRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.adv.msg.LoginRequest)
  // optional string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.LoginRequest.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // optional int32 magicnum = 2;
  if (this->magicnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->magicnum(), target);
  }

  // optional int32 status = 3;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->status(), target);
  }

  // optional int32 devicetype = 4;
  if (this->devicetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->devicetype(), target);
  }

  // optional string deviceid = 6;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), this->deviceid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.LoginRequest.deviceid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->deviceid(), target);
  }

  // optional string description = 7;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.LoginRequest.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->description(), target);
  }

  // optional int32 condid = 8;
  if (this->condid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->condid(), target);
  }

  // optional int32 loginseq = 9;
  if (this->loginseq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->loginseq(), target);
  }

  // optional int32 accounttype = 10;
  if (this->accounttype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->accounttype(), target);
  }

  // optional string account = 11;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.LoginRequest.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->account(), target);
  }

  // optional string passwd = 12;
  if (this->passwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passwd().data(), this->passwd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.LoginRequest.passwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->passwd(), target);
  }

  // optional int32 version = 13;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->version(), target);
  }

  // optional string nickname = 14;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.LoginRequest.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->nickname(), target);
  }

  // optional int32 gender = 15;
  if (this->gender() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->gender(), target);
  }

  // optional string province = 16;
  if (this->province().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->province().data(), this->province().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.LoginRequest.province");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->province(), target);
  }

  // optional string city = 17;
  if (this->city().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->city().data(), this->city().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.LoginRequest.city");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->city(), target);
  }

  // optional string country = 18;
  if (this->country().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->country().data(), this->country().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.LoginRequest.country");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->country(), target);
  }

  // optional string avatar = 19;
  if (this->avatar().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->avatar().data(), this->avatar().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.LoginRequest.avatar");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->avatar(), target);
  }

  // optional string desc = 20;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.LoginRequest.desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->desc(), target);
  }

  // optional string email = 21;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.LoginRequest.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->email(), target);
  }

  // optional string mobile = 22;
  if (this->mobile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mobile().data(), this->mobile().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.LoginRequest.mobile");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->mobile(), target);
  }

  // optional int32 time = 23;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->time(), target);
  }

  // optional int32 uid = 24;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->uid(), target);
  }

  // optional int32 flag = 25;
  if (this->flag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->flag(), target);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->transid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.adv.msg.LoginRequest)
  return target;
}

int LoginRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:com.adv.msg.LoginRequest)
  int total_size = 0;

  // optional string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // optional int32 magicnum = 2;
  if (this->magicnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->magicnum());
  }

  // optional int32 status = 3;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  // optional int32 devicetype = 4;
  if (this->devicetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->devicetype());
  }

  // optional string deviceid = 6;
  if (this->deviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deviceid());
  }

  // optional string description = 7;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // optional int32 condid = 8;
  if (this->condid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->condid());
  }

  // optional int32 loginseq = 9;
  if (this->loginseq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->loginseq());
  }

  // optional int32 accounttype = 10;
  if (this->accounttype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->accounttype());
  }

  // optional string account = 11;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  // optional string passwd = 12;
  if (this->passwd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->passwd());
  }

  // optional int32 version = 13;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }

  // optional string nickname = 14;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  // optional int32 gender = 15;
  if (this->gender() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gender());
  }

  // optional string province = 16;
  if (this->province().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->province());
  }

  // optional string city = 17;
  if (this->city().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->city());
  }

  // optional string country = 18;
  if (this->country().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->country());
  }

  // optional string avatar = 19;
  if (this->avatar().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->avatar());
  }

  // optional string desc = 20;
  if (this->desc().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->desc());
  }

  // optional string email = 21;
  if (this->email().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  // optional string mobile = 22;
  if (this->mobile().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mobile());
  }

  // optional int32 time = 23;
  if (this->time() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->time());
  }

  // optional int32 uid = 24;
  if (this->uid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uid());
  }

  // optional int32 flag = 25;
  if (this->flag() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->flag());
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->transid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.adv.msg.LoginRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LoginRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.adv.msg.LoginRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.adv.msg.LoginRequest)
    MergeFrom(*source);
  }
}

void LoginRequest::MergeFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.adv.msg.LoginRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.magicnum() != 0) {
    set_magicnum(from.magicnum());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.devicetype() != 0) {
    set_devicetype(from.devicetype());
  }
  if (from.deviceid().size() > 0) {

    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.condid() != 0) {
    set_condid(from.condid());
  }
  if (from.loginseq() != 0) {
    set_loginseq(from.loginseq());
  }
  if (from.accounttype() != 0) {
    set_accounttype(from.accounttype());
  }
  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.passwd().size() > 0) {

    passwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passwd_);
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.nickname().size() > 0) {

    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  if (from.gender() != 0) {
    set_gender(from.gender());
  }
  if (from.province().size() > 0) {

    province_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.province_);
  }
  if (from.city().size() > 0) {

    city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
  }
  if (from.country().size() > 0) {

    country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_);
  }
  if (from.avatar().size() > 0) {

    avatar_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_);
  }
  if (from.desc().size() > 0) {

    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  if (from.email().size() > 0) {

    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  if (from.mobile().size() > 0) {

    mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.flag() != 0) {
    set_flag(from.flag());
  }
  if (from.transid() != 0) {
    set_transid(from.transid());
  }
}

void LoginRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.adv.msg.LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginRequest::CopyFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.adv.msg.LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginRequest::IsInitialized() const {

  return true;
}

void LoginRequest::Swap(LoginRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginRequest::InternalSwap(LoginRequest* other) {
  token_.Swap(&other->token_);
  std::swap(magicnum_, other->magicnum_);
  std::swap(status_, other->status_);
  std::swap(devicetype_, other->devicetype_);
  deviceid_.Swap(&other->deviceid_);
  description_.Swap(&other->description_);
  std::swap(condid_, other->condid_);
  std::swap(loginseq_, other->loginseq_);
  std::swap(accounttype_, other->accounttype_);
  account_.Swap(&other->account_);
  passwd_.Swap(&other->passwd_);
  std::swap(version_, other->version_);
  nickname_.Swap(&other->nickname_);
  std::swap(gender_, other->gender_);
  province_.Swap(&other->province_);
  city_.Swap(&other->city_);
  country_.Swap(&other->country_);
  avatar_.Swap(&other->avatar_);
  desc_.Swap(&other->desc_);
  email_.Swap(&other->email_);
  mobile_.Swap(&other->mobile_);
  std::swap(time_, other->time_);
  std::swap(uid_, other->uid_);
  std::swap(flag_, other->flag_);
  std::swap(transid_, other->transid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginRequest_descriptor_;
  metadata.reflection = LoginRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginRequest

// optional string token = 1;
void LoginRequest::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& LoginRequest::token() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginRequest::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.token)
}
 void LoginRequest::set_token(const char* value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.LoginRequest.token)
}
 void LoginRequest::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.LoginRequest.token)
}
 ::std::string* LoginRequest::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.LoginRequest.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LoginRequest::release_token() {
  // @@protoc_insertion_point(field_release:com.adv.msg.LoginRequest.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginRequest::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.LoginRequest.token)
}

// optional int32 magicnum = 2;
void LoginRequest::clear_magicnum() {
  magicnum_ = 0;
}
 ::google::protobuf::int32 LoginRequest::magicnum() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.magicnum)
  return magicnum_;
}
 void LoginRequest::set_magicnum(::google::protobuf::int32 value) {
  
  magicnum_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.magicnum)
}

// optional int32 status = 3;
void LoginRequest::clear_status() {
  status_ = 0;
}
 ::google::protobuf::int32 LoginRequest::status() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.status)
  return status_;
}
 void LoginRequest::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.status)
}

// optional int32 devicetype = 4;
void LoginRequest::clear_devicetype() {
  devicetype_ = 0;
}
 ::google::protobuf::int32 LoginRequest::devicetype() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.devicetype)
  return devicetype_;
}
 void LoginRequest::set_devicetype(::google::protobuf::int32 value) {
  
  devicetype_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.devicetype)
}

// optional string deviceid = 6;
void LoginRequest::clear_deviceid() {
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& LoginRequest::deviceid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.deviceid)
  return deviceid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginRequest::set_deviceid(const ::std::string& value) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.deviceid)
}
 void LoginRequest::set_deviceid(const char* value) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.LoginRequest.deviceid)
}
 void LoginRequest::set_deviceid(const char* value, size_t size) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.LoginRequest.deviceid)
}
 ::std::string* LoginRequest::mutable_deviceid() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.LoginRequest.deviceid)
  return deviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LoginRequest::release_deviceid() {
  // @@protoc_insertion_point(field_release:com.adv.msg.LoginRequest.deviceid)
  
  return deviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginRequest::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid != NULL) {
    
  } else {
    
  }
  deviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceid);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.LoginRequest.deviceid)
}

// optional string description = 7;
void LoginRequest::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& LoginRequest::description() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.description)
  return description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginRequest::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.description)
}
 void LoginRequest::set_description(const char* value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.LoginRequest.description)
}
 void LoginRequest::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.LoginRequest.description)
}
 ::std::string* LoginRequest::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.LoginRequest.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LoginRequest::release_description() {
  // @@protoc_insertion_point(field_release:com.adv.msg.LoginRequest.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginRequest::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.LoginRequest.description)
}

// optional int32 condid = 8;
void LoginRequest::clear_condid() {
  condid_ = 0;
}
 ::google::protobuf::int32 LoginRequest::condid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.condid)
  return condid_;
}
 void LoginRequest::set_condid(::google::protobuf::int32 value) {
  
  condid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.condid)
}

// optional int32 loginseq = 9;
void LoginRequest::clear_loginseq() {
  loginseq_ = 0;
}
 ::google::protobuf::int32 LoginRequest::loginseq() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.loginseq)
  return loginseq_;
}
 void LoginRequest::set_loginseq(::google::protobuf::int32 value) {
  
  loginseq_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.loginseq)
}

// optional int32 accounttype = 10;
void LoginRequest::clear_accounttype() {
  accounttype_ = 0;
}
 ::google::protobuf::int32 LoginRequest::accounttype() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.accounttype)
  return accounttype_;
}
 void LoginRequest::set_accounttype(::google::protobuf::int32 value) {
  
  accounttype_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.accounttype)
}

// optional string account = 11;
void LoginRequest::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& LoginRequest::account() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.account)
  return account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginRequest::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.account)
}
 void LoginRequest::set_account(const char* value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.LoginRequest.account)
}
 void LoginRequest::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.LoginRequest.account)
}
 ::std::string* LoginRequest::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.LoginRequest.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LoginRequest::release_account() {
  // @@protoc_insertion_point(field_release:com.adv.msg.LoginRequest.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginRequest::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.LoginRequest.account)
}

// optional string passwd = 12;
void LoginRequest::clear_passwd() {
  passwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& LoginRequest::passwd() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.passwd)
  return passwd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginRequest::set_passwd(const ::std::string& value) {
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.passwd)
}
 void LoginRequest::set_passwd(const char* value) {
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.LoginRequest.passwd)
}
 void LoginRequest::set_passwd(const char* value, size_t size) {
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.LoginRequest.passwd)
}
 ::std::string* LoginRequest::mutable_passwd() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.LoginRequest.passwd)
  return passwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LoginRequest::release_passwd() {
  // @@protoc_insertion_point(field_release:com.adv.msg.LoginRequest.passwd)
  
  return passwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginRequest::set_allocated_passwd(::std::string* passwd) {
  if (passwd != NULL) {
    
  } else {
    
  }
  passwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), passwd);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.LoginRequest.passwd)
}

// optional int32 version = 13;
void LoginRequest::clear_version() {
  version_ = 0;
}
 ::google::protobuf::int32 LoginRequest::version() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.version)
  return version_;
}
 void LoginRequest::set_version(::google::protobuf::int32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.version)
}

// optional string nickname = 14;
void LoginRequest::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& LoginRequest::nickname() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.nickname)
  return nickname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginRequest::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.nickname)
}
 void LoginRequest::set_nickname(const char* value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.LoginRequest.nickname)
}
 void LoginRequest::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.LoginRequest.nickname)
}
 ::std::string* LoginRequest::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.LoginRequest.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LoginRequest::release_nickname() {
  // @@protoc_insertion_point(field_release:com.adv.msg.LoginRequest.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginRequest::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.LoginRequest.nickname)
}

// optional int32 gender = 15;
void LoginRequest::clear_gender() {
  gender_ = 0;
}
 ::google::protobuf::int32 LoginRequest::gender() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.gender)
  return gender_;
}
 void LoginRequest::set_gender(::google::protobuf::int32 value) {
  
  gender_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.gender)
}

// optional string province = 16;
void LoginRequest::clear_province() {
  province_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& LoginRequest::province() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.province)
  return province_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginRequest::set_province(const ::std::string& value) {
  
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.province)
}
 void LoginRequest::set_province(const char* value) {
  
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.LoginRequest.province)
}
 void LoginRequest::set_province(const char* value, size_t size) {
  
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.LoginRequest.province)
}
 ::std::string* LoginRequest::mutable_province() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.LoginRequest.province)
  return province_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LoginRequest::release_province() {
  // @@protoc_insertion_point(field_release:com.adv.msg.LoginRequest.province)
  
  return province_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginRequest::set_allocated_province(::std::string* province) {
  if (province != NULL) {
    
  } else {
    
  }
  province_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), province);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.LoginRequest.province)
}

// optional string city = 17;
void LoginRequest::clear_city() {
  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& LoginRequest::city() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.city)
  return city_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginRequest::set_city(const ::std::string& value) {
  
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.city)
}
 void LoginRequest::set_city(const char* value) {
  
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.LoginRequest.city)
}
 void LoginRequest::set_city(const char* value, size_t size) {
  
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.LoginRequest.city)
}
 ::std::string* LoginRequest::mutable_city() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.LoginRequest.city)
  return city_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LoginRequest::release_city() {
  // @@protoc_insertion_point(field_release:com.adv.msg.LoginRequest.city)
  
  return city_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginRequest::set_allocated_city(::std::string* city) {
  if (city != NULL) {
    
  } else {
    
  }
  city_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), city);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.LoginRequest.city)
}

// optional string country = 18;
void LoginRequest::clear_country() {
  country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& LoginRequest::country() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.country)
  return country_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginRequest::set_country(const ::std::string& value) {
  
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.country)
}
 void LoginRequest::set_country(const char* value) {
  
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.LoginRequest.country)
}
 void LoginRequest::set_country(const char* value, size_t size) {
  
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.LoginRequest.country)
}
 ::std::string* LoginRequest::mutable_country() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.LoginRequest.country)
  return country_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LoginRequest::release_country() {
  // @@protoc_insertion_point(field_release:com.adv.msg.LoginRequest.country)
  
  return country_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginRequest::set_allocated_country(::std::string* country) {
  if (country != NULL) {
    
  } else {
    
  }
  country_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.LoginRequest.country)
}

// optional string avatar = 19;
void LoginRequest::clear_avatar() {
  avatar_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& LoginRequest::avatar() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.avatar)
  return avatar_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginRequest::set_avatar(const ::std::string& value) {
  
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.avatar)
}
 void LoginRequest::set_avatar(const char* value) {
  
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.LoginRequest.avatar)
}
 void LoginRequest::set_avatar(const char* value, size_t size) {
  
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.LoginRequest.avatar)
}
 ::std::string* LoginRequest::mutable_avatar() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.LoginRequest.avatar)
  return avatar_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LoginRequest::release_avatar() {
  // @@protoc_insertion_point(field_release:com.adv.msg.LoginRequest.avatar)
  
  return avatar_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginRequest::set_allocated_avatar(::std::string* avatar) {
  if (avatar != NULL) {
    
  } else {
    
  }
  avatar_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), avatar);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.LoginRequest.avatar)
}

// optional string desc = 20;
void LoginRequest::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& LoginRequest::desc() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.desc)
  return desc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginRequest::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.desc)
}
 void LoginRequest::set_desc(const char* value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.LoginRequest.desc)
}
 void LoginRequest::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.LoginRequest.desc)
}
 ::std::string* LoginRequest::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.LoginRequest.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LoginRequest::release_desc() {
  // @@protoc_insertion_point(field_release:com.adv.msg.LoginRequest.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginRequest::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.LoginRequest.desc)
}

// optional string email = 21;
void LoginRequest::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& LoginRequest::email() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.email)
  return email_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginRequest::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.email)
}
 void LoginRequest::set_email(const char* value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.LoginRequest.email)
}
 void LoginRequest::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.LoginRequest.email)
}
 ::std::string* LoginRequest::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.LoginRequest.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LoginRequest::release_email() {
  // @@protoc_insertion_point(field_release:com.adv.msg.LoginRequest.email)
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginRequest::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.LoginRequest.email)
}

// optional string mobile = 22;
void LoginRequest::clear_mobile() {
  mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& LoginRequest::mobile() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.mobile)
  return mobile_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginRequest::set_mobile(const ::std::string& value) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.mobile)
}
 void LoginRequest::set_mobile(const char* value) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.LoginRequest.mobile)
}
 void LoginRequest::set_mobile(const char* value, size_t size) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.LoginRequest.mobile)
}
 ::std::string* LoginRequest::mutable_mobile() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.LoginRequest.mobile)
  return mobile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LoginRequest::release_mobile() {
  // @@protoc_insertion_point(field_release:com.adv.msg.LoginRequest.mobile)
  
  return mobile_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginRequest::set_allocated_mobile(::std::string* mobile) {
  if (mobile != NULL) {
    
  } else {
    
  }
  mobile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mobile);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.LoginRequest.mobile)
}

// optional int32 time = 23;
void LoginRequest::clear_time() {
  time_ = 0;
}
 ::google::protobuf::int32 LoginRequest::time() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.time)
  return time_;
}
 void LoginRequest::set_time(::google::protobuf::int32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.time)
}

// optional int32 uid = 24;
void LoginRequest::clear_uid() {
  uid_ = 0;
}
 ::google::protobuf::int32 LoginRequest::uid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.uid)
  return uid_;
}
 void LoginRequest::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.uid)
}

// optional int32 flag = 25;
void LoginRequest::clear_flag() {
  flag_ = 0;
}
 ::google::protobuf::int32 LoginRequest::flag() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.flag)
  return flag_;
}
 void LoginRequest::set_flag(::google::protobuf::int32 value) {
  
  flag_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.flag)
}

// optional int32 transid = 32;
void LoginRequest::clear_transid() {
  transid_ = 0;
}
 ::google::protobuf::int32 LoginRequest::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.transid)
  return transid_;
}
 void LoginRequest::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.transid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginResult::kRetbaseFieldNumber;
const int LoginResult::kKeyFieldNumber;
const int LoginResult::kUidFieldNumber;
const int LoginResult::kLoginseqFieldNumber;
const int LoginResult::kAccounttypeFieldNumber;
const int LoginResult::kTimeFieldNumber;
const int LoginResult::kTransidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginResult::LoginResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.adv.msg.LoginResult)
}

void LoginResult::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  retbase_ = const_cast< ::com::adv::msg::RetBase*>(&::com::adv::msg::RetBase::default_instance());
}

LoginResult::LoginResult(const LoginResult& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.adv.msg.LoginResult)
}

void LoginResult::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  retbase_ = NULL;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uid_ = 0;
  loginseq_ = 0;
  accounttype_ = 0;
  time_ = 0;
  transid_ = 0;
}

LoginResult::~LoginResult() {
  // @@protoc_insertion_point(destructor:com.adv.msg.LoginResult)
  SharedDtor();
}

void LoginResult::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete retbase_;
  }
}

void LoginResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginResult_descriptor_;
}

const LoginResult& LoginResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_adv_5fprotocol_2eproto();
  return *default_instance_;
}

LoginResult* LoginResult::default_instance_ = NULL;

LoginResult* LoginResult::New(::google::protobuf::Arena* arena) const {
  LoginResult* n = new LoginResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginResult::Clear() {
// @@protoc_insertion_point(message_clear_start:com.adv.msg.LoginResult)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(LoginResult, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<LoginResult*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(uid_, transid_);
  if (GetArenaNoVirtual() == NULL && retbase_ != NULL) delete retbase_;
  retbase_ = NULL;
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool LoginResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.adv.msg.LoginResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.adv.msg.RetBase retbase = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_retbase()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_key;
        break;
      }

      // optional string key = 2;
      case 2: {
        if (tag == 18) {
         parse_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.LoginResult.key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uid;
        break;
      }

      // optional int32 uid = 3;
      case 3: {
        if (tag == 24) {
         parse_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_loginseq;
        break;
      }

      // optional int32 loginseq = 4;
      case 4: {
        if (tag == 32) {
         parse_loginseq:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &loginseq_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_accounttype;
        break;
      }

      // optional int32 accounttype = 5;
      case 5: {
        if (tag == 40) {
         parse_accounttype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &accounttype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_time;
        break;
      }

      // optional int32 time = 6;
      case 6: {
        if (tag == 48) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(256)) goto parse_transid;
        break;
      }

      // optional int32 transid = 32;
      case 32: {
        if (tag == 256) {
         parse_transid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.adv.msg.LoginResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.adv.msg.LoginResult)
  return false;
#undef DO_
}

void LoginResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.adv.msg.LoginResult)
  // optional .com.adv.msg.RetBase retbase = 1;
  if (this->has_retbase()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->retbase_, output);
  }

  // optional string key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.LoginResult.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->key(), output);
  }

  // optional int32 uid = 3;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->uid(), output);
  }

  // optional int32 loginseq = 4;
  if (this->loginseq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->loginseq(), output);
  }

  // optional int32 accounttype = 5;
  if (this->accounttype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->accounttype(), output);
  }

  // optional int32 time = 6;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->time(), output);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->transid(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.adv.msg.LoginResult)
}

::google::protobuf::uint8* LoginResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.adv.msg.LoginResult)
  // optional .com.adv.msg.RetBase retbase = 1;
  if (this->has_retbase()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->retbase_, false, target);
  }

  // optional string key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.LoginResult.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->key(), target);
  }

  // optional int32 uid = 3;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->uid(), target);
  }

  // optional int32 loginseq = 4;
  if (this->loginseq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->loginseq(), target);
  }

  // optional int32 accounttype = 5;
  if (this->accounttype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->accounttype(), target);
  }

  // optional int32 time = 6;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->time(), target);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->transid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.adv.msg.LoginResult)
  return target;
}

int LoginResult::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:com.adv.msg.LoginResult)
  int total_size = 0;

  // optional .com.adv.msg.RetBase retbase = 1;
  if (this->has_retbase()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->retbase_);
  }

  // optional string key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // optional int32 uid = 3;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uid());
  }

  // optional int32 loginseq = 4;
  if (this->loginseq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->loginseq());
  }

  // optional int32 accounttype = 5;
  if (this->accounttype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->accounttype());
  }

  // optional int32 time = 6;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->time());
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->transid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.adv.msg.LoginResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LoginResult* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.adv.msg.LoginResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.adv.msg.LoginResult)
    MergeFrom(*source);
  }
}

void LoginResult::MergeFrom(const LoginResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.adv.msg.LoginResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_retbase()) {
    mutable_retbase()->::com::adv::msg::RetBase::MergeFrom(from.retbase());
  }
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.loginseq() != 0) {
    set_loginseq(from.loginseq());
  }
  if (from.accounttype() != 0) {
    set_accounttype(from.accounttype());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.transid() != 0) {
    set_transid(from.transid());
  }
}

void LoginResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.adv.msg.LoginResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginResult::CopyFrom(const LoginResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.adv.msg.LoginResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginResult::IsInitialized() const {

  return true;
}

void LoginResult::Swap(LoginResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginResult::InternalSwap(LoginResult* other) {
  std::swap(retbase_, other->retbase_);
  key_.Swap(&other->key_);
  std::swap(uid_, other->uid_);
  std::swap(loginseq_, other->loginseq_);
  std::swap(accounttype_, other->accounttype_);
  std::swap(time_, other->time_);
  std::swap(transid_, other->transid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginResult_descriptor_;
  metadata.reflection = LoginResult_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginResult

// optional .com.adv.msg.RetBase retbase = 1;
bool LoginResult::has_retbase() const {
  return !_is_default_instance_ && retbase_ != NULL;
}
void LoginResult::clear_retbase() {
  if (GetArenaNoVirtual() == NULL && retbase_ != NULL) delete retbase_;
  retbase_ = NULL;
}
const ::com::adv::msg::RetBase& LoginResult::retbase() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginResult.retbase)
  return retbase_ != NULL ? *retbase_ : *default_instance_->retbase_;
}
::com::adv::msg::RetBase* LoginResult::mutable_retbase() {
  
  if (retbase_ == NULL) {
    retbase_ = new ::com::adv::msg::RetBase;
  }
  // @@protoc_insertion_point(field_mutable:com.adv.msg.LoginResult.retbase)
  return retbase_;
}
::com::adv::msg::RetBase* LoginResult::release_retbase() {
  // @@protoc_insertion_point(field_release:com.adv.msg.LoginResult.retbase)
  
  ::com::adv::msg::RetBase* temp = retbase_;
  retbase_ = NULL;
  return temp;
}
void LoginResult::set_allocated_retbase(::com::adv::msg::RetBase* retbase) {
  delete retbase_;
  retbase_ = retbase;
  if (retbase) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.LoginResult.retbase)
}

// optional string key = 2;
void LoginResult::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& LoginResult::key() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginResult.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginResult::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginResult.key)
}
 void LoginResult::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.LoginResult.key)
}
 void LoginResult::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.LoginResult.key)
}
 ::std::string* LoginResult::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.LoginResult.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LoginResult::release_key() {
  // @@protoc_insertion_point(field_release:com.adv.msg.LoginResult.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginResult::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.LoginResult.key)
}

// optional int32 uid = 3;
void LoginResult::clear_uid() {
  uid_ = 0;
}
 ::google::protobuf::int32 LoginResult::uid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginResult.uid)
  return uid_;
}
 void LoginResult::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginResult.uid)
}

// optional int32 loginseq = 4;
void LoginResult::clear_loginseq() {
  loginseq_ = 0;
}
 ::google::protobuf::int32 LoginResult::loginseq() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginResult.loginseq)
  return loginseq_;
}
 void LoginResult::set_loginseq(::google::protobuf::int32 value) {
  
  loginseq_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginResult.loginseq)
}

// optional int32 accounttype = 5;
void LoginResult::clear_accounttype() {
  accounttype_ = 0;
}
 ::google::protobuf::int32 LoginResult::accounttype() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginResult.accounttype)
  return accounttype_;
}
 void LoginResult::set_accounttype(::google::protobuf::int32 value) {
  
  accounttype_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginResult.accounttype)
}

// optional int32 time = 6;
void LoginResult::clear_time() {
  time_ = 0;
}
 ::google::protobuf::int32 LoginResult::time() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginResult.time)
  return time_;
}
 void LoginResult::set_time(::google::protobuf::int32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginResult.time)
}

// optional int32 transid = 32;
void LoginResult::clear_transid() {
  transid_ = 0;
}
 ::google::protobuf::int32 LoginResult::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginResult.transid)
  return transid_;
}
 void LoginResult::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginResult.transid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogoutRequest::kDeviceTypeFieldNumber;
const int LogoutRequest::kDeviceidFieldNumber;
const int LogoutRequest::kConidFieldNumber;
const int LogoutRequest::kTransidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogoutRequest::LogoutRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.adv.msg.LogoutRequest)
}

void LogoutRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

LogoutRequest::LogoutRequest(const LogoutRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.adv.msg.LogoutRequest)
}

void LogoutRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  devicetype_ = 0;
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  conid_ = 0;
  transid_ = 0;
}

LogoutRequest::~LogoutRequest() {
  // @@protoc_insertion_point(destructor:com.adv.msg.LogoutRequest)
  SharedDtor();
}

void LogoutRequest::SharedDtor() {
  deviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void LogoutRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogoutRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LogoutRequest_descriptor_;
}

const LogoutRequest& LogoutRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_adv_5fprotocol_2eproto();
  return *default_instance_;
}

LogoutRequest* LogoutRequest::default_instance_ = NULL;

LogoutRequest* LogoutRequest::New(::google::protobuf::Arena* arena) const {
  LogoutRequest* n = new LogoutRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LogoutRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:com.adv.msg.LogoutRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(LogoutRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<LogoutRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(devicetype_, transid_);
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool LogoutRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.adv.msg.LogoutRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 deviceType = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &devicetype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_deviceid;
        break;
      }

      // optional string deviceid = 2;
      case 2: {
        if (tag == 18) {
         parse_deviceid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deviceid().data(), this->deviceid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.LogoutRequest.deviceid"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_conid;
        break;
      }

      // optional int32 conid = 3;
      case 3: {
        if (tag == 24) {
         parse_conid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &conid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(256)) goto parse_transid;
        break;
      }

      // optional int32 transid = 32;
      case 32: {
        if (tag == 256) {
         parse_transid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.adv.msg.LogoutRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.adv.msg.LogoutRequest)
  return false;
#undef DO_
}

void LogoutRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.adv.msg.LogoutRequest)
  // optional int32 deviceType = 1;
  if (this->devicetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->devicetype(), output);
  }

  // optional string deviceid = 2;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), this->deviceid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.LogoutRequest.deviceid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->deviceid(), output);
  }

  // optional int32 conid = 3;
  if (this->conid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->conid(), output);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->transid(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.adv.msg.LogoutRequest)
}

::google::protobuf::uint8* LogoutRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.adv.msg.LogoutRequest)
  // optional int32 deviceType = 1;
  if (this->devicetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->devicetype(), target);
  }

  // optional string deviceid = 2;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), this->deviceid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.LogoutRequest.deviceid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->deviceid(), target);
  }

  // optional int32 conid = 3;
  if (this->conid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->conid(), target);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->transid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.adv.msg.LogoutRequest)
  return target;
}

int LogoutRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:com.adv.msg.LogoutRequest)
  int total_size = 0;

  // optional int32 deviceType = 1;
  if (this->devicetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->devicetype());
  }

  // optional string deviceid = 2;
  if (this->deviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deviceid());
  }

  // optional int32 conid = 3;
  if (this->conid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->conid());
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->transid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogoutRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.adv.msg.LogoutRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LogoutRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LogoutRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.adv.msg.LogoutRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.adv.msg.LogoutRequest)
    MergeFrom(*source);
  }
}

void LogoutRequest::MergeFrom(const LogoutRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.adv.msg.LogoutRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.devicetype() != 0) {
    set_devicetype(from.devicetype());
  }
  if (from.deviceid().size() > 0) {

    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  if (from.conid() != 0) {
    set_conid(from.conid());
  }
  if (from.transid() != 0) {
    set_transid(from.transid());
  }
}

void LogoutRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.adv.msg.LogoutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogoutRequest::CopyFrom(const LogoutRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.adv.msg.LogoutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogoutRequest::IsInitialized() const {

  return true;
}

void LogoutRequest::Swap(LogoutRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogoutRequest::InternalSwap(LogoutRequest* other) {
  std::swap(devicetype_, other->devicetype_);
  deviceid_.Swap(&other->deviceid_);
  std::swap(conid_, other->conid_);
  std::swap(transid_, other->transid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogoutRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LogoutRequest_descriptor_;
  metadata.reflection = LogoutRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LogoutRequest

// optional int32 deviceType = 1;
void LogoutRequest::clear_devicetype() {
  devicetype_ = 0;
}
 ::google::protobuf::int32 LogoutRequest::devicetype() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LogoutRequest.deviceType)
  return devicetype_;
}
 void LogoutRequest::set_devicetype(::google::protobuf::int32 value) {
  
  devicetype_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LogoutRequest.deviceType)
}

// optional string deviceid = 2;
void LogoutRequest::clear_deviceid() {
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& LogoutRequest::deviceid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LogoutRequest.deviceid)
  return deviceid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LogoutRequest::set_deviceid(const ::std::string& value) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.LogoutRequest.deviceid)
}
 void LogoutRequest::set_deviceid(const char* value) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.LogoutRequest.deviceid)
}
 void LogoutRequest::set_deviceid(const char* value, size_t size) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.LogoutRequest.deviceid)
}
 ::std::string* LogoutRequest::mutable_deviceid() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.LogoutRequest.deviceid)
  return deviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LogoutRequest::release_deviceid() {
  // @@protoc_insertion_point(field_release:com.adv.msg.LogoutRequest.deviceid)
  
  return deviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LogoutRequest::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid != NULL) {
    
  } else {
    
  }
  deviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceid);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.LogoutRequest.deviceid)
}

// optional int32 conid = 3;
void LogoutRequest::clear_conid() {
  conid_ = 0;
}
 ::google::protobuf::int32 LogoutRequest::conid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LogoutRequest.conid)
  return conid_;
}
 void LogoutRequest::set_conid(::google::protobuf::int32 value) {
  
  conid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LogoutRequest.conid)
}

// optional int32 transid = 32;
void LogoutRequest::clear_transid() {
  transid_ = 0;
}
 ::google::protobuf::int32 LogoutRequest::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LogoutRequest.transid)
  return transid_;
}
 void LogoutRequest::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LogoutRequest.transid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogoutResult::kRetbaseFieldNumber;
const int LogoutResult::kTransidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogoutResult::LogoutResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.adv.msg.LogoutResult)
}

void LogoutResult::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  retbase_ = const_cast< ::com::adv::msg::RetBase*>(&::com::adv::msg::RetBase::default_instance());
}

LogoutResult::LogoutResult(const LogoutResult& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.adv.msg.LogoutResult)
}

void LogoutResult::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retbase_ = NULL;
  transid_ = 0;
}

LogoutResult::~LogoutResult() {
  // @@protoc_insertion_point(destructor:com.adv.msg.LogoutResult)
  SharedDtor();
}

void LogoutResult::SharedDtor() {
  if (this != default_instance_) {
    delete retbase_;
  }
}

void LogoutResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogoutResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LogoutResult_descriptor_;
}

const LogoutResult& LogoutResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_adv_5fprotocol_2eproto();
  return *default_instance_;
}

LogoutResult* LogoutResult::default_instance_ = NULL;

LogoutResult* LogoutResult::New(::google::protobuf::Arena* arena) const {
  LogoutResult* n = new LogoutResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LogoutResult::Clear() {
// @@protoc_insertion_point(message_clear_start:com.adv.msg.LogoutResult)
  if (GetArenaNoVirtual() == NULL && retbase_ != NULL) delete retbase_;
  retbase_ = NULL;
  transid_ = 0;
}

bool LogoutResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.adv.msg.LogoutResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.adv.msg.RetBase retbase = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_retbase()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(256)) goto parse_transid;
        break;
      }

      // optional int32 transid = 32;
      case 32: {
        if (tag == 256) {
         parse_transid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.adv.msg.LogoutResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.adv.msg.LogoutResult)
  return false;
#undef DO_
}

void LogoutResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.adv.msg.LogoutResult)
  // optional .com.adv.msg.RetBase retbase = 1;
  if (this->has_retbase()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->retbase_, output);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->transid(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.adv.msg.LogoutResult)
}

::google::protobuf::uint8* LogoutResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.adv.msg.LogoutResult)
  // optional .com.adv.msg.RetBase retbase = 1;
  if (this->has_retbase()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->retbase_, false, target);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->transid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.adv.msg.LogoutResult)
  return target;
}

int LogoutResult::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:com.adv.msg.LogoutResult)
  int total_size = 0;

  // optional .com.adv.msg.RetBase retbase = 1;
  if (this->has_retbase()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->retbase_);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->transid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogoutResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.adv.msg.LogoutResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LogoutResult* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LogoutResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.adv.msg.LogoutResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.adv.msg.LogoutResult)
    MergeFrom(*source);
  }
}

void LogoutResult::MergeFrom(const LogoutResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.adv.msg.LogoutResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_retbase()) {
    mutable_retbase()->::com::adv::msg::RetBase::MergeFrom(from.retbase());
  }
  if (from.transid() != 0) {
    set_transid(from.transid());
  }
}

void LogoutResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.adv.msg.LogoutResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogoutResult::CopyFrom(const LogoutResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.adv.msg.LogoutResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogoutResult::IsInitialized() const {

  return true;
}

void LogoutResult::Swap(LogoutResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogoutResult::InternalSwap(LogoutResult* other) {
  std::swap(retbase_, other->retbase_);
  std::swap(transid_, other->transid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogoutResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LogoutResult_descriptor_;
  metadata.reflection = LogoutResult_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LogoutResult

// optional .com.adv.msg.RetBase retbase = 1;
bool LogoutResult::has_retbase() const {
  return !_is_default_instance_ && retbase_ != NULL;
}
void LogoutResult::clear_retbase() {
  if (GetArenaNoVirtual() == NULL && retbase_ != NULL) delete retbase_;
  retbase_ = NULL;
}
const ::com::adv::msg::RetBase& LogoutResult::retbase() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LogoutResult.retbase)
  return retbase_ != NULL ? *retbase_ : *default_instance_->retbase_;
}
::com::adv::msg::RetBase* LogoutResult::mutable_retbase() {
  
  if (retbase_ == NULL) {
    retbase_ = new ::com::adv::msg::RetBase;
  }
  // @@protoc_insertion_point(field_mutable:com.adv.msg.LogoutResult.retbase)
  return retbase_;
}
::com::adv::msg::RetBase* LogoutResult::release_retbase() {
  // @@protoc_insertion_point(field_release:com.adv.msg.LogoutResult.retbase)
  
  ::com::adv::msg::RetBase* temp = retbase_;
  retbase_ = NULL;
  return temp;
}
void LogoutResult::set_allocated_retbase(::com::adv::msg::RetBase* retbase) {
  delete retbase_;
  retbase_ = retbase;
  if (retbase) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.LogoutResult.retbase)
}

// optional int32 transid = 32;
void LogoutResult::clear_transid() {
  transid_ = 0;
}
 ::google::protobuf::int32 LogoutResult::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LogoutResult.transid)
  return transid_;
}
 void LogoutResult::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LogoutResult.transid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskNotify::kTasktypeFieldNumber;
const int TaskNotify::kTransidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskNotify::TaskNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.adv.msg.TaskNotify)
}

void TaskNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

TaskNotify::TaskNotify(const TaskNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.adv.msg.TaskNotify)
}

void TaskNotify::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  tasktype_ = 0;
  transid_ = 0;
}

TaskNotify::~TaskNotify() {
  // @@protoc_insertion_point(destructor:com.adv.msg.TaskNotify)
  SharedDtor();
}

void TaskNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TaskNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TaskNotify_descriptor_;
}

const TaskNotify& TaskNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_adv_5fprotocol_2eproto();
  return *default_instance_;
}

TaskNotify* TaskNotify::default_instance_ = NULL;

TaskNotify* TaskNotify::New(::google::protobuf::Arena* arena) const {
  TaskNotify* n = new TaskNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TaskNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:com.adv.msg.TaskNotify)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TaskNotify, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TaskNotify*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(tasktype_, transid_);

#undef ZR_HELPER_
#undef ZR_

}

bool TaskNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.adv.msg.TaskNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 tasktype = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tasktype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(256)) goto parse_transid;
        break;
      }

      // optional int32 transid = 32;
      case 32: {
        if (tag == 256) {
         parse_transid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.adv.msg.TaskNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.adv.msg.TaskNotify)
  return false;
#undef DO_
}

void TaskNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.adv.msg.TaskNotify)
  // optional int32 tasktype = 1;
  if (this->tasktype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->tasktype(), output);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->transid(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.adv.msg.TaskNotify)
}

::google::protobuf::uint8* TaskNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.adv.msg.TaskNotify)
  // optional int32 tasktype = 1;
  if (this->tasktype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->tasktype(), target);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->transid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.adv.msg.TaskNotify)
  return target;
}

int TaskNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:com.adv.msg.TaskNotify)
  int total_size = 0;

  // optional int32 tasktype = 1;
  if (this->tasktype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tasktype());
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->transid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.adv.msg.TaskNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TaskNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TaskNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.adv.msg.TaskNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.adv.msg.TaskNotify)
    MergeFrom(*source);
  }
}

void TaskNotify::MergeFrom(const TaskNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.adv.msg.TaskNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.tasktype() != 0) {
    set_tasktype(from.tasktype());
  }
  if (from.transid() != 0) {
    set_transid(from.transid());
  }
}

void TaskNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.adv.msg.TaskNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskNotify::CopyFrom(const TaskNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.adv.msg.TaskNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskNotify::IsInitialized() const {

  return true;
}

void TaskNotify::Swap(TaskNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskNotify::InternalSwap(TaskNotify* other) {
  std::swap(tasktype_, other->tasktype_);
  std::swap(transid_, other->transid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TaskNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TaskNotify_descriptor_;
  metadata.reflection = TaskNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TaskNotify

// optional int32 tasktype = 1;
void TaskNotify::clear_tasktype() {
  tasktype_ = 0;
}
 ::google::protobuf::int32 TaskNotify::tasktype() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.TaskNotify.tasktype)
  return tasktype_;
}
 void TaskNotify::set_tasktype(::google::protobuf::int32 value) {
  
  tasktype_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.TaskNotify.tasktype)
}

// optional int32 transid = 32;
void TaskNotify::clear_transid() {
  transid_ = 0;
}
 ::google::protobuf::int32 TaskNotify::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.TaskNotify.transid)
  return transid_;
}
 void TaskNotify::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.TaskNotify.transid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncTaskRequest::kSyncpointFieldNumber;
const int SyncTaskRequest::kSynctypeFieldNumber;
const int SyncTaskRequest::kSyncflagFieldNumber;
const int SyncTaskRequest::kSynclimitFieldNumber;
const int SyncTaskRequest::kTransidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncTaskRequest::SyncTaskRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.adv.msg.SyncTaskRequest)
}

void SyncTaskRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SyncTaskRequest::SyncTaskRequest(const SyncTaskRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.adv.msg.SyncTaskRequest)
}

void SyncTaskRequest::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  syncpoint_ = GOOGLE_LONGLONG(0);
  synctype_ = 0;
  syncflag_ = 0;
  synclimit_ = 0;
  transid_ = 0;
}

SyncTaskRequest::~SyncTaskRequest() {
  // @@protoc_insertion_point(destructor:com.adv.msg.SyncTaskRequest)
  SharedDtor();
}

void SyncTaskRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SyncTaskRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncTaskRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncTaskRequest_descriptor_;
}

const SyncTaskRequest& SyncTaskRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_adv_5fprotocol_2eproto();
  return *default_instance_;
}

SyncTaskRequest* SyncTaskRequest::default_instance_ = NULL;

SyncTaskRequest* SyncTaskRequest::New(::google::protobuf::Arena* arena) const {
  SyncTaskRequest* n = new SyncTaskRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SyncTaskRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:com.adv.msg.SyncTaskRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SyncTaskRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SyncTaskRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(syncpoint_, transid_);

#undef ZR_HELPER_
#undef ZR_

}

bool SyncTaskRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.adv.msg.SyncTaskRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 syncpoint = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &syncpoint_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_synctype;
        break;
      }

      // optional int32 synctype = 2;
      case 2: {
        if (tag == 16) {
         parse_synctype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &synctype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_syncflag;
        break;
      }

      // optional int32 syncflag = 3;
      case 3: {
        if (tag == 24) {
         parse_syncflag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &syncflag_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_synclimit;
        break;
      }

      // optional int32 synclimit = 4;
      case 4: {
        if (tag == 32) {
         parse_synclimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &synclimit_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(256)) goto parse_transid;
        break;
      }

      // optional int32 transid = 32;
      case 32: {
        if (tag == 256) {
         parse_transid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.adv.msg.SyncTaskRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.adv.msg.SyncTaskRequest)
  return false;
#undef DO_
}

void SyncTaskRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.adv.msg.SyncTaskRequest)
  // optional int64 syncpoint = 1;
  if (this->syncpoint() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->syncpoint(), output);
  }

  // optional int32 synctype = 2;
  if (this->synctype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->synctype(), output);
  }

  // optional int32 syncflag = 3;
  if (this->syncflag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->syncflag(), output);
  }

  // optional int32 synclimit = 4;
  if (this->synclimit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->synclimit(), output);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->transid(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.adv.msg.SyncTaskRequest)
}

::google::protobuf::uint8* SyncTaskRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.adv.msg.SyncTaskRequest)
  // optional int64 syncpoint = 1;
  if (this->syncpoint() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->syncpoint(), target);
  }

  // optional int32 synctype = 2;
  if (this->synctype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->synctype(), target);
  }

  // optional int32 syncflag = 3;
  if (this->syncflag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->syncflag(), target);
  }

  // optional int32 synclimit = 4;
  if (this->synclimit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->synclimit(), target);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->transid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.adv.msg.SyncTaskRequest)
  return target;
}

int SyncTaskRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:com.adv.msg.SyncTaskRequest)
  int total_size = 0;

  // optional int64 syncpoint = 1;
  if (this->syncpoint() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->syncpoint());
  }

  // optional int32 synctype = 2;
  if (this->synctype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->synctype());
  }

  // optional int32 syncflag = 3;
  if (this->syncflag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->syncflag());
  }

  // optional int32 synclimit = 4;
  if (this->synclimit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->synclimit());
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->transid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncTaskRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.adv.msg.SyncTaskRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SyncTaskRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncTaskRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.adv.msg.SyncTaskRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.adv.msg.SyncTaskRequest)
    MergeFrom(*source);
  }
}

void SyncTaskRequest::MergeFrom(const SyncTaskRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.adv.msg.SyncTaskRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.syncpoint() != 0) {
    set_syncpoint(from.syncpoint());
  }
  if (from.synctype() != 0) {
    set_synctype(from.synctype());
  }
  if (from.syncflag() != 0) {
    set_syncflag(from.syncflag());
  }
  if (from.synclimit() != 0) {
    set_synclimit(from.synclimit());
  }
  if (from.transid() != 0) {
    set_transid(from.transid());
  }
}

void SyncTaskRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.adv.msg.SyncTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncTaskRequest::CopyFrom(const SyncTaskRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.adv.msg.SyncTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncTaskRequest::IsInitialized() const {

  return true;
}

void SyncTaskRequest::Swap(SyncTaskRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncTaskRequest::InternalSwap(SyncTaskRequest* other) {
  std::swap(syncpoint_, other->syncpoint_);
  std::swap(synctype_, other->synctype_);
  std::swap(syncflag_, other->syncflag_);
  std::swap(synclimit_, other->synclimit_);
  std::swap(transid_, other->transid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SyncTaskRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SyncTaskRequest_descriptor_;
  metadata.reflection = SyncTaskRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SyncTaskRequest

// optional int64 syncpoint = 1;
void SyncTaskRequest::clear_syncpoint() {
  syncpoint_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 SyncTaskRequest::syncpoint() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.SyncTaskRequest.syncpoint)
  return syncpoint_;
}
 void SyncTaskRequest::set_syncpoint(::google::protobuf::int64 value) {
  
  syncpoint_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.SyncTaskRequest.syncpoint)
}

// optional int32 synctype = 2;
void SyncTaskRequest::clear_synctype() {
  synctype_ = 0;
}
 ::google::protobuf::int32 SyncTaskRequest::synctype() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.SyncTaskRequest.synctype)
  return synctype_;
}
 void SyncTaskRequest::set_synctype(::google::protobuf::int32 value) {
  
  synctype_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.SyncTaskRequest.synctype)
}

// optional int32 syncflag = 3;
void SyncTaskRequest::clear_syncflag() {
  syncflag_ = 0;
}
 ::google::protobuf::int32 SyncTaskRequest::syncflag() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.SyncTaskRequest.syncflag)
  return syncflag_;
}
 void SyncTaskRequest::set_syncflag(::google::protobuf::int32 value) {
  
  syncflag_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.SyncTaskRequest.syncflag)
}

// optional int32 synclimit = 4;
void SyncTaskRequest::clear_synclimit() {
  synclimit_ = 0;
}
 ::google::protobuf::int32 SyncTaskRequest::synclimit() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.SyncTaskRequest.synclimit)
  return synclimit_;
}
 void SyncTaskRequest::set_synclimit(::google::protobuf::int32 value) {
  
  synclimit_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.SyncTaskRequest.synclimit)
}

// optional int32 transid = 32;
void SyncTaskRequest::clear_transid() {
  transid_ = 0;
}
 ::google::protobuf::int32 SyncTaskRequest::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.SyncTaskRequest.transid)
  return transid_;
}
 void SyncTaskRequest::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.SyncTaskRequest.transid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncTaskResult::kRetbaseFieldNumber;
const int SyncTaskResult::kTaskinfosFieldNumber;
const int SyncTaskResult::kSynctypeFieldNumber;
const int SyncTaskResult::kContinueflagFieldNumber;
const int SyncTaskResult::kMaxtaskidFieldNumber;
const int SyncTaskResult::kTransidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncTaskResult::SyncTaskResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.adv.msg.SyncTaskResult)
}

void SyncTaskResult::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  retbase_ = const_cast< ::com::adv::msg::RetBase*>(&::com::adv::msg::RetBase::default_instance());
}

SyncTaskResult::SyncTaskResult(const SyncTaskResult& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.adv.msg.SyncTaskResult)
}

void SyncTaskResult::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retbase_ = NULL;
  synctype_ = 0;
  continueflag_ = 0;
  maxtaskid_ = GOOGLE_LONGLONG(0);
  transid_ = 0;
}

SyncTaskResult::~SyncTaskResult() {
  // @@protoc_insertion_point(destructor:com.adv.msg.SyncTaskResult)
  SharedDtor();
}

void SyncTaskResult::SharedDtor() {
  if (this != default_instance_) {
    delete retbase_;
  }
}

void SyncTaskResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncTaskResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncTaskResult_descriptor_;
}

const SyncTaskResult& SyncTaskResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_adv_5fprotocol_2eproto();
  return *default_instance_;
}

SyncTaskResult* SyncTaskResult::default_instance_ = NULL;

SyncTaskResult* SyncTaskResult::New(::google::protobuf::Arena* arena) const {
  SyncTaskResult* n = new SyncTaskResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SyncTaskResult::Clear() {
// @@protoc_insertion_point(message_clear_start:com.adv.msg.SyncTaskResult)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SyncTaskResult, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SyncTaskResult*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(synctype_, transid_);
  if (GetArenaNoVirtual() == NULL && retbase_ != NULL) delete retbase_;
  retbase_ = NULL;

#undef ZR_HELPER_
#undef ZR_

  taskinfos_.Clear();
}

bool SyncTaskResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.adv.msg.SyncTaskResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.adv.msg.RetBase retbase = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_retbase()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_taskinfos;
        break;
      }

      // repeated .com.adv.msg.TaskInfo taskinfos = 2;
      case 2: {
        if (tag == 18) {
         parse_taskinfos:
          DO_(input->IncrementRecursionDepth());
         parse_loop_taskinfos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_taskinfos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_taskinfos;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(24)) goto parse_synctype;
        break;
      }

      // optional int32 synctype = 3;
      case 3: {
        if (tag == 24) {
         parse_synctype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &synctype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_continueflag;
        break;
      }

      // optional int32 continueflag = 4;
      case 4: {
        if (tag == 32) {
         parse_continueflag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &continueflag_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_maxtaskid;
        break;
      }

      // optional int64 maxtaskid = 5;
      case 5: {
        if (tag == 40) {
         parse_maxtaskid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &maxtaskid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(256)) goto parse_transid;
        break;
      }

      // optional int32 transid = 32;
      case 32: {
        if (tag == 256) {
         parse_transid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.adv.msg.SyncTaskResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.adv.msg.SyncTaskResult)
  return false;
#undef DO_
}

void SyncTaskResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.adv.msg.SyncTaskResult)
  // optional .com.adv.msg.RetBase retbase = 1;
  if (this->has_retbase()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->retbase_, output);
  }

  // repeated .com.adv.msg.TaskInfo taskinfos = 2;
  for (unsigned int i = 0, n = this->taskinfos_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->taskinfos(i), output);
  }

  // optional int32 synctype = 3;
  if (this->synctype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->synctype(), output);
  }

  // optional int32 continueflag = 4;
  if (this->continueflag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->continueflag(), output);
  }

  // optional int64 maxtaskid = 5;
  if (this->maxtaskid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->maxtaskid(), output);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->transid(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.adv.msg.SyncTaskResult)
}

::google::protobuf::uint8* SyncTaskResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.adv.msg.SyncTaskResult)
  // optional .com.adv.msg.RetBase retbase = 1;
  if (this->has_retbase()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->retbase_, false, target);
  }

  // repeated .com.adv.msg.TaskInfo taskinfos = 2;
  for (unsigned int i = 0, n = this->taskinfos_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->taskinfos(i), false, target);
  }

  // optional int32 synctype = 3;
  if (this->synctype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->synctype(), target);
  }

  // optional int32 continueflag = 4;
  if (this->continueflag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->continueflag(), target);
  }

  // optional int64 maxtaskid = 5;
  if (this->maxtaskid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->maxtaskid(), target);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->transid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.adv.msg.SyncTaskResult)
  return target;
}

int SyncTaskResult::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:com.adv.msg.SyncTaskResult)
  int total_size = 0;

  // optional .com.adv.msg.RetBase retbase = 1;
  if (this->has_retbase()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->retbase_);
  }

  // optional int32 synctype = 3;
  if (this->synctype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->synctype());
  }

  // optional int32 continueflag = 4;
  if (this->continueflag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->continueflag());
  }

  // optional int64 maxtaskid = 5;
  if (this->maxtaskid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->maxtaskid());
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->transid());
  }

  // repeated .com.adv.msg.TaskInfo taskinfos = 2;
  total_size += 1 * this->taskinfos_size();
  for (int i = 0; i < this->taskinfos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->taskinfos(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncTaskResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.adv.msg.SyncTaskResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SyncTaskResult* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncTaskResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.adv.msg.SyncTaskResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.adv.msg.SyncTaskResult)
    MergeFrom(*source);
  }
}

void SyncTaskResult::MergeFrom(const SyncTaskResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.adv.msg.SyncTaskResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  taskinfos_.MergeFrom(from.taskinfos_);
  if (from.has_retbase()) {
    mutable_retbase()->::com::adv::msg::RetBase::MergeFrom(from.retbase());
  }
  if (from.synctype() != 0) {
    set_synctype(from.synctype());
  }
  if (from.continueflag() != 0) {
    set_continueflag(from.continueflag());
  }
  if (from.maxtaskid() != 0) {
    set_maxtaskid(from.maxtaskid());
  }
  if (from.transid() != 0) {
    set_transid(from.transid());
  }
}

void SyncTaskResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.adv.msg.SyncTaskResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncTaskResult::CopyFrom(const SyncTaskResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.adv.msg.SyncTaskResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncTaskResult::IsInitialized() const {

  return true;
}

void SyncTaskResult::Swap(SyncTaskResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncTaskResult::InternalSwap(SyncTaskResult* other) {
  std::swap(retbase_, other->retbase_);
  taskinfos_.UnsafeArenaSwap(&other->taskinfos_);
  std::swap(synctype_, other->synctype_);
  std::swap(continueflag_, other->continueflag_);
  std::swap(maxtaskid_, other->maxtaskid_);
  std::swap(transid_, other->transid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SyncTaskResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SyncTaskResult_descriptor_;
  metadata.reflection = SyncTaskResult_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SyncTaskResult

// optional .com.adv.msg.RetBase retbase = 1;
bool SyncTaskResult::has_retbase() const {
  return !_is_default_instance_ && retbase_ != NULL;
}
void SyncTaskResult::clear_retbase() {
  if (GetArenaNoVirtual() == NULL && retbase_ != NULL) delete retbase_;
  retbase_ = NULL;
}
const ::com::adv::msg::RetBase& SyncTaskResult::retbase() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.SyncTaskResult.retbase)
  return retbase_ != NULL ? *retbase_ : *default_instance_->retbase_;
}
::com::adv::msg::RetBase* SyncTaskResult::mutable_retbase() {
  
  if (retbase_ == NULL) {
    retbase_ = new ::com::adv::msg::RetBase;
  }
  // @@protoc_insertion_point(field_mutable:com.adv.msg.SyncTaskResult.retbase)
  return retbase_;
}
::com::adv::msg::RetBase* SyncTaskResult::release_retbase() {
  // @@protoc_insertion_point(field_release:com.adv.msg.SyncTaskResult.retbase)
  
  ::com::adv::msg::RetBase* temp = retbase_;
  retbase_ = NULL;
  return temp;
}
void SyncTaskResult::set_allocated_retbase(::com::adv::msg::RetBase* retbase) {
  delete retbase_;
  retbase_ = retbase;
  if (retbase) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.SyncTaskResult.retbase)
}

// repeated .com.adv.msg.TaskInfo taskinfos = 2;
int SyncTaskResult::taskinfos_size() const {
  return taskinfos_.size();
}
void SyncTaskResult::clear_taskinfos() {
  taskinfos_.Clear();
}
const ::com::adv::msg::TaskInfo& SyncTaskResult::taskinfos(int index) const {
  // @@protoc_insertion_point(field_get:com.adv.msg.SyncTaskResult.taskinfos)
  return taskinfos_.Get(index);
}
::com::adv::msg::TaskInfo* SyncTaskResult::mutable_taskinfos(int index) {
  // @@protoc_insertion_point(field_mutable:com.adv.msg.SyncTaskResult.taskinfos)
  return taskinfos_.Mutable(index);
}
::com::adv::msg::TaskInfo* SyncTaskResult::add_taskinfos() {
  // @@protoc_insertion_point(field_add:com.adv.msg.SyncTaskResult.taskinfos)
  return taskinfos_.Add();
}
::google::protobuf::RepeatedPtrField< ::com::adv::msg::TaskInfo >*
SyncTaskResult::mutable_taskinfos() {
  // @@protoc_insertion_point(field_mutable_list:com.adv.msg.SyncTaskResult.taskinfos)
  return &taskinfos_;
}
const ::google::protobuf::RepeatedPtrField< ::com::adv::msg::TaskInfo >&
SyncTaskResult::taskinfos() const {
  // @@protoc_insertion_point(field_list:com.adv.msg.SyncTaskResult.taskinfos)
  return taskinfos_;
}

// optional int32 synctype = 3;
void SyncTaskResult::clear_synctype() {
  synctype_ = 0;
}
 ::google::protobuf::int32 SyncTaskResult::synctype() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.SyncTaskResult.synctype)
  return synctype_;
}
 void SyncTaskResult::set_synctype(::google::protobuf::int32 value) {
  
  synctype_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.SyncTaskResult.synctype)
}

// optional int32 continueflag = 4;
void SyncTaskResult::clear_continueflag() {
  continueflag_ = 0;
}
 ::google::protobuf::int32 SyncTaskResult::continueflag() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.SyncTaskResult.continueflag)
  return continueflag_;
}
 void SyncTaskResult::set_continueflag(::google::protobuf::int32 value) {
  
  continueflag_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.SyncTaskResult.continueflag)
}

// optional int64 maxtaskid = 5;
void SyncTaskResult::clear_maxtaskid() {
  maxtaskid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 SyncTaskResult::maxtaskid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.SyncTaskResult.maxtaskid)
  return maxtaskid_;
}
 void SyncTaskResult::set_maxtaskid(::google::protobuf::int64 value) {
  
  maxtaskid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.SyncTaskResult.maxtaskid)
}

// optional int32 transid = 32;
void SyncTaskResult::clear_transid() {
  transid_ = 0;
}
 ::google::protobuf::int32 SyncTaskResult::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.SyncTaskResult.transid)
  return transid_;
}
 void SyncTaskResult::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.SyncTaskResult.transid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReportTaskRequest::kTaskinfoFieldNumber;
const int ReportTaskRequest::kRewardFieldNumber;
const int ReportTaskRequest::kTransidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReportTaskRequest::ReportTaskRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.adv.msg.ReportTaskRequest)
}

void ReportTaskRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  taskinfo_ = const_cast< ::com::adv::msg::TaskInfo*>(&::com::adv::msg::TaskInfo::default_instance());
}

ReportTaskRequest::ReportTaskRequest(const ReportTaskRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.adv.msg.ReportTaskRequest)
}

void ReportTaskRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  taskinfo_ = NULL;
  reward_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transid_ = 0;
}

ReportTaskRequest::~ReportTaskRequest() {
  // @@protoc_insertion_point(destructor:com.adv.msg.ReportTaskRequest)
  SharedDtor();
}

void ReportTaskRequest::SharedDtor() {
  reward_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete taskinfo_;
  }
}

void ReportTaskRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReportTaskRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReportTaskRequest_descriptor_;
}

const ReportTaskRequest& ReportTaskRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_adv_5fprotocol_2eproto();
  return *default_instance_;
}

ReportTaskRequest* ReportTaskRequest::default_instance_ = NULL;

ReportTaskRequest* ReportTaskRequest::New(::google::protobuf::Arena* arena) const {
  ReportTaskRequest* n = new ReportTaskRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReportTaskRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:com.adv.msg.ReportTaskRequest)
  if (GetArenaNoVirtual() == NULL && taskinfo_ != NULL) delete taskinfo_;
  taskinfo_ = NULL;
  reward_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transid_ = 0;
}

bool ReportTaskRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.adv.msg.ReportTaskRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.adv.msg.TaskInfo taskinfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_taskinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_reward;
        break;
      }

      // optional string reward = 2;
      case 2: {
        if (tag == 18) {
         parse_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reward()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reward().data(), this->reward().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.ReportTaskRequest.reward"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(256)) goto parse_transid;
        break;
      }

      // optional int32 transid = 32;
      case 32: {
        if (tag == 256) {
         parse_transid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.adv.msg.ReportTaskRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.adv.msg.ReportTaskRequest)
  return false;
#undef DO_
}

void ReportTaskRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.adv.msg.ReportTaskRequest)
  // optional .com.adv.msg.TaskInfo taskinfo = 1;
  if (this->has_taskinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->taskinfo_, output);
  }

  // optional string reward = 2;
  if (this->reward().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reward().data(), this->reward().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.ReportTaskRequest.reward");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->reward(), output);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->transid(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.adv.msg.ReportTaskRequest)
}

::google::protobuf::uint8* ReportTaskRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.adv.msg.ReportTaskRequest)
  // optional .com.adv.msg.TaskInfo taskinfo = 1;
  if (this->has_taskinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->taskinfo_, false, target);
  }

  // optional string reward = 2;
  if (this->reward().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reward().data(), this->reward().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.ReportTaskRequest.reward");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->reward(), target);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->transid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.adv.msg.ReportTaskRequest)
  return target;
}

int ReportTaskRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:com.adv.msg.ReportTaskRequest)
  int total_size = 0;

  // optional .com.adv.msg.TaskInfo taskinfo = 1;
  if (this->has_taskinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->taskinfo_);
  }

  // optional string reward = 2;
  if (this->reward().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reward());
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->transid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReportTaskRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.adv.msg.ReportTaskRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ReportTaskRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ReportTaskRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.adv.msg.ReportTaskRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.adv.msg.ReportTaskRequest)
    MergeFrom(*source);
  }
}

void ReportTaskRequest::MergeFrom(const ReportTaskRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.adv.msg.ReportTaskRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_taskinfo()) {
    mutable_taskinfo()->::com::adv::msg::TaskInfo::MergeFrom(from.taskinfo());
  }
  if (from.reward().size() > 0) {

    reward_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reward_);
  }
  if (from.transid() != 0) {
    set_transid(from.transid());
  }
}

void ReportTaskRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.adv.msg.ReportTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReportTaskRequest::CopyFrom(const ReportTaskRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.adv.msg.ReportTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReportTaskRequest::IsInitialized() const {

  return true;
}

void ReportTaskRequest::Swap(ReportTaskRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReportTaskRequest::InternalSwap(ReportTaskRequest* other) {
  std::swap(taskinfo_, other->taskinfo_);
  reward_.Swap(&other->reward_);
  std::swap(transid_, other->transid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReportTaskRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReportTaskRequest_descriptor_;
  metadata.reflection = ReportTaskRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReportTaskRequest

// optional .com.adv.msg.TaskInfo taskinfo = 1;
bool ReportTaskRequest::has_taskinfo() const {
  return !_is_default_instance_ && taskinfo_ != NULL;
}
void ReportTaskRequest::clear_taskinfo() {
  if (GetArenaNoVirtual() == NULL && taskinfo_ != NULL) delete taskinfo_;
  taskinfo_ = NULL;
}
const ::com::adv::msg::TaskInfo& ReportTaskRequest::taskinfo() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.ReportTaskRequest.taskinfo)
  return taskinfo_ != NULL ? *taskinfo_ : *default_instance_->taskinfo_;
}
::com::adv::msg::TaskInfo* ReportTaskRequest::mutable_taskinfo() {
  
  if (taskinfo_ == NULL) {
    taskinfo_ = new ::com::adv::msg::TaskInfo;
  }
  // @@protoc_insertion_point(field_mutable:com.adv.msg.ReportTaskRequest.taskinfo)
  return taskinfo_;
}
::com::adv::msg::TaskInfo* ReportTaskRequest::release_taskinfo() {
  // @@protoc_insertion_point(field_release:com.adv.msg.ReportTaskRequest.taskinfo)
  
  ::com::adv::msg::TaskInfo* temp = taskinfo_;
  taskinfo_ = NULL;
  return temp;
}
void ReportTaskRequest::set_allocated_taskinfo(::com::adv::msg::TaskInfo* taskinfo) {
  delete taskinfo_;
  taskinfo_ = taskinfo;
  if (taskinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.ReportTaskRequest.taskinfo)
}

// optional string reward = 2;
void ReportTaskRequest::clear_reward() {
  reward_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ReportTaskRequest::reward() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.ReportTaskRequest.reward)
  return reward_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReportTaskRequest::set_reward(const ::std::string& value) {
  
  reward_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.ReportTaskRequest.reward)
}
 void ReportTaskRequest::set_reward(const char* value) {
  
  reward_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.ReportTaskRequest.reward)
}
 void ReportTaskRequest::set_reward(const char* value, size_t size) {
  
  reward_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.ReportTaskRequest.reward)
}
 ::std::string* ReportTaskRequest::mutable_reward() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.ReportTaskRequest.reward)
  return reward_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ReportTaskRequest::release_reward() {
  // @@protoc_insertion_point(field_release:com.adv.msg.ReportTaskRequest.reward)
  
  return reward_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReportTaskRequest::set_allocated_reward(::std::string* reward) {
  if (reward != NULL) {
    
  } else {
    
  }
  reward_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reward);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.ReportTaskRequest.reward)
}

// optional int32 transid = 32;
void ReportTaskRequest::clear_transid() {
  transid_ = 0;
}
 ::google::protobuf::int32 ReportTaskRequest::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.ReportTaskRequest.transid)
  return transid_;
}
 void ReportTaskRequest::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.ReportTaskRequest.transid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReportTaskResult::kRetbaseFieldNumber;
const int ReportTaskResult::kTaskidFieldNumber;
const int ReportTaskResult::kRewardFieldNumber;
const int ReportTaskResult::kDoneStepFieldNumber;
const int ReportTaskResult::kTasktypeFieldNumber;
const int ReportTaskResult::kReportTimeFieldNumber;
const int ReportTaskResult::kTransidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReportTaskResult::ReportTaskResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.adv.msg.ReportTaskResult)
}

void ReportTaskResult::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  retbase_ = const_cast< ::com::adv::msg::RetBase*>(&::com::adv::msg::RetBase::default_instance());
}

ReportTaskResult::ReportTaskResult(const ReportTaskResult& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.adv.msg.ReportTaskResult)
}

void ReportTaskResult::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  retbase_ = NULL;
  taskid_ = GOOGLE_LONGLONG(0);
  reward_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  done_step_ = 0;
  tasktype_ = 0;
  report_time_ = 0;
  transid_ = 0;
}

ReportTaskResult::~ReportTaskResult() {
  // @@protoc_insertion_point(destructor:com.adv.msg.ReportTaskResult)
  SharedDtor();
}

void ReportTaskResult::SharedDtor() {
  reward_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete retbase_;
  }
}

void ReportTaskResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReportTaskResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReportTaskResult_descriptor_;
}

const ReportTaskResult& ReportTaskResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_adv_5fprotocol_2eproto();
  return *default_instance_;
}

ReportTaskResult* ReportTaskResult::default_instance_ = NULL;

ReportTaskResult* ReportTaskResult::New(::google::protobuf::Arena* arena) const {
  ReportTaskResult* n = new ReportTaskResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReportTaskResult::Clear() {
// @@protoc_insertion_point(message_clear_start:com.adv.msg.ReportTaskResult)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ReportTaskResult, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ReportTaskResult*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(done_step_, transid_);
  if (GetArenaNoVirtual() == NULL && retbase_ != NULL) delete retbase_;
  retbase_ = NULL;
  taskid_ = GOOGLE_LONGLONG(0);
  reward_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool ReportTaskResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.adv.msg.ReportTaskResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.adv.msg.RetBase retbase = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_retbase()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_taskid;
        break;
      }

      // optional int64 taskid = 2;
      case 2: {
        if (tag == 16) {
         parse_taskid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &taskid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_reward;
        break;
      }

      // optional string reward = 3;
      case 3: {
        if (tag == 26) {
         parse_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reward()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reward().data(), this->reward().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.ReportTaskResult.reward"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_done_step;
        break;
      }

      // optional int32 done_step = 4;
      case 4: {
        if (tag == 32) {
         parse_done_step:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &done_step_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_tasktype;
        break;
      }

      // optional int32 tasktype = 5;
      case 5: {
        if (tag == 40) {
         parse_tasktype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tasktype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_report_time;
        break;
      }

      // optional int32 report_time = 6;
      case 6: {
        if (tag == 48) {
         parse_report_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &report_time_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(256)) goto parse_transid;
        break;
      }

      // optional int32 transid = 32;
      case 32: {
        if (tag == 256) {
         parse_transid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.adv.msg.ReportTaskResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.adv.msg.ReportTaskResult)
  return false;
#undef DO_
}

void ReportTaskResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.adv.msg.ReportTaskResult)
  // optional .com.adv.msg.RetBase retbase = 1;
  if (this->has_retbase()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->retbase_, output);
  }

  // optional int64 taskid = 2;
  if (this->taskid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->taskid(), output);
  }

  // optional string reward = 3;
  if (this->reward().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reward().data(), this->reward().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.ReportTaskResult.reward");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->reward(), output);
  }

  // optional int32 done_step = 4;
  if (this->done_step() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->done_step(), output);
  }

  // optional int32 tasktype = 5;
  if (this->tasktype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->tasktype(), output);
  }

  // optional int32 report_time = 6;
  if (this->report_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->report_time(), output);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->transid(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.adv.msg.ReportTaskResult)
}

::google::protobuf::uint8* ReportTaskResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.adv.msg.ReportTaskResult)
  // optional .com.adv.msg.RetBase retbase = 1;
  if (this->has_retbase()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->retbase_, false, target);
  }

  // optional int64 taskid = 2;
  if (this->taskid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->taskid(), target);
  }

  // optional string reward = 3;
  if (this->reward().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reward().data(), this->reward().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.ReportTaskResult.reward");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->reward(), target);
  }

  // optional int32 done_step = 4;
  if (this->done_step() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->done_step(), target);
  }

  // optional int32 tasktype = 5;
  if (this->tasktype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->tasktype(), target);
  }

  // optional int32 report_time = 6;
  if (this->report_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->report_time(), target);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->transid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.adv.msg.ReportTaskResult)
  return target;
}

int ReportTaskResult::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:com.adv.msg.ReportTaskResult)
  int total_size = 0;

  // optional .com.adv.msg.RetBase retbase = 1;
  if (this->has_retbase()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->retbase_);
  }

  // optional int64 taskid = 2;
  if (this->taskid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->taskid());
  }

  // optional string reward = 3;
  if (this->reward().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reward());
  }

  // optional int32 done_step = 4;
  if (this->done_step() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->done_step());
  }

  // optional int32 tasktype = 5;
  if (this->tasktype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tasktype());
  }

  // optional int32 report_time = 6;
  if (this->report_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->report_time());
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->transid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReportTaskResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.adv.msg.ReportTaskResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ReportTaskResult* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ReportTaskResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.adv.msg.ReportTaskResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.adv.msg.ReportTaskResult)
    MergeFrom(*source);
  }
}

void ReportTaskResult::MergeFrom(const ReportTaskResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.adv.msg.ReportTaskResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_retbase()) {
    mutable_retbase()->::com::adv::msg::RetBase::MergeFrom(from.retbase());
  }
  if (from.taskid() != 0) {
    set_taskid(from.taskid());
  }
  if (from.reward().size() > 0) {

    reward_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reward_);
  }
  if (from.done_step() != 0) {
    set_done_step(from.done_step());
  }
  if (from.tasktype() != 0) {
    set_tasktype(from.tasktype());
  }
  if (from.report_time() != 0) {
    set_report_time(from.report_time());
  }
  if (from.transid() != 0) {
    set_transid(from.transid());
  }
}

void ReportTaskResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.adv.msg.ReportTaskResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReportTaskResult::CopyFrom(const ReportTaskResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.adv.msg.ReportTaskResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReportTaskResult::IsInitialized() const {

  return true;
}

void ReportTaskResult::Swap(ReportTaskResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReportTaskResult::InternalSwap(ReportTaskResult* other) {
  std::swap(retbase_, other->retbase_);
  std::swap(taskid_, other->taskid_);
  reward_.Swap(&other->reward_);
  std::swap(done_step_, other->done_step_);
  std::swap(tasktype_, other->tasktype_);
  std::swap(report_time_, other->report_time_);
  std::swap(transid_, other->transid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReportTaskResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReportTaskResult_descriptor_;
  metadata.reflection = ReportTaskResult_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReportTaskResult

// optional .com.adv.msg.RetBase retbase = 1;
bool ReportTaskResult::has_retbase() const {
  return !_is_default_instance_ && retbase_ != NULL;
}
void ReportTaskResult::clear_retbase() {
  if (GetArenaNoVirtual() == NULL && retbase_ != NULL) delete retbase_;
  retbase_ = NULL;
}
const ::com::adv::msg::RetBase& ReportTaskResult::retbase() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.ReportTaskResult.retbase)
  return retbase_ != NULL ? *retbase_ : *default_instance_->retbase_;
}
::com::adv::msg::RetBase* ReportTaskResult::mutable_retbase() {
  
  if (retbase_ == NULL) {
    retbase_ = new ::com::adv::msg::RetBase;
  }
  // @@protoc_insertion_point(field_mutable:com.adv.msg.ReportTaskResult.retbase)
  return retbase_;
}
::com::adv::msg::RetBase* ReportTaskResult::release_retbase() {
  // @@protoc_insertion_point(field_release:com.adv.msg.ReportTaskResult.retbase)
  
  ::com::adv::msg::RetBase* temp = retbase_;
  retbase_ = NULL;
  return temp;
}
void ReportTaskResult::set_allocated_retbase(::com::adv::msg::RetBase* retbase) {
  delete retbase_;
  retbase_ = retbase;
  if (retbase) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.ReportTaskResult.retbase)
}

// optional int64 taskid = 2;
void ReportTaskResult::clear_taskid() {
  taskid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 ReportTaskResult::taskid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.ReportTaskResult.taskid)
  return taskid_;
}
 void ReportTaskResult::set_taskid(::google::protobuf::int64 value) {
  
  taskid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.ReportTaskResult.taskid)
}

// optional string reward = 3;
void ReportTaskResult::clear_reward() {
  reward_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ReportTaskResult::reward() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.ReportTaskResult.reward)
  return reward_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReportTaskResult::set_reward(const ::std::string& value) {
  
  reward_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.ReportTaskResult.reward)
}
 void ReportTaskResult::set_reward(const char* value) {
  
  reward_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.ReportTaskResult.reward)
}
 void ReportTaskResult::set_reward(const char* value, size_t size) {
  
  reward_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.ReportTaskResult.reward)
}
 ::std::string* ReportTaskResult::mutable_reward() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.ReportTaskResult.reward)
  return reward_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ReportTaskResult::release_reward() {
  // @@protoc_insertion_point(field_release:com.adv.msg.ReportTaskResult.reward)
  
  return reward_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReportTaskResult::set_allocated_reward(::std::string* reward) {
  if (reward != NULL) {
    
  } else {
    
  }
  reward_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reward);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.ReportTaskResult.reward)
}

// optional int32 done_step = 4;
void ReportTaskResult::clear_done_step() {
  done_step_ = 0;
}
 ::google::protobuf::int32 ReportTaskResult::done_step() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.ReportTaskResult.done_step)
  return done_step_;
}
 void ReportTaskResult::set_done_step(::google::protobuf::int32 value) {
  
  done_step_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.ReportTaskResult.done_step)
}

// optional int32 tasktype = 5;
void ReportTaskResult::clear_tasktype() {
  tasktype_ = 0;
}
 ::google::protobuf::int32 ReportTaskResult::tasktype() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.ReportTaskResult.tasktype)
  return tasktype_;
}
 void ReportTaskResult::set_tasktype(::google::protobuf::int32 value) {
  
  tasktype_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.ReportTaskResult.tasktype)
}

// optional int32 report_time = 6;
void ReportTaskResult::clear_report_time() {
  report_time_ = 0;
}
 ::google::protobuf::int32 ReportTaskResult::report_time() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.ReportTaskResult.report_time)
  return report_time_;
}
 void ReportTaskResult::set_report_time(::google::protobuf::int32 value) {
  
  report_time_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.ReportTaskResult.report_time)
}

// optional int32 transid = 32;
void ReportTaskResult::clear_transid() {
  transid_ = 0;
}
 ::google::protobuf::int32 ReportTaskResult::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.ReportTaskResult.transid)
  return transid_;
}
 void ReportTaskResult::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.ReportTaskResult.transid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetIncomeRequest::kTransidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetIncomeRequest::GetIncomeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.adv.msg.GetIncomeRequest)
}

void GetIncomeRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetIncomeRequest::GetIncomeRequest(const GetIncomeRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.adv.msg.GetIncomeRequest)
}

void GetIncomeRequest::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  transid_ = 0;
}

GetIncomeRequest::~GetIncomeRequest() {
  // @@protoc_insertion_point(destructor:com.adv.msg.GetIncomeRequest)
  SharedDtor();
}

void GetIncomeRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetIncomeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetIncomeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetIncomeRequest_descriptor_;
}

const GetIncomeRequest& GetIncomeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_adv_5fprotocol_2eproto();
  return *default_instance_;
}

GetIncomeRequest* GetIncomeRequest::default_instance_ = NULL;

GetIncomeRequest* GetIncomeRequest::New(::google::protobuf::Arena* arena) const {
  GetIncomeRequest* n = new GetIncomeRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetIncomeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:com.adv.msg.GetIncomeRequest)
  transid_ = 0;
}

bool GetIncomeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.adv.msg.GetIncomeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 transid = 32;
      case 32: {
        if (tag == 256) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.adv.msg.GetIncomeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.adv.msg.GetIncomeRequest)
  return false;
#undef DO_
}

void GetIncomeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.adv.msg.GetIncomeRequest)
  // optional int32 transid = 32;
  if (this->transid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->transid(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.adv.msg.GetIncomeRequest)
}

::google::protobuf::uint8* GetIncomeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.adv.msg.GetIncomeRequest)
  // optional int32 transid = 32;
  if (this->transid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->transid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.adv.msg.GetIncomeRequest)
  return target;
}

int GetIncomeRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:com.adv.msg.GetIncomeRequest)
  int total_size = 0;

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->transid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetIncomeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.adv.msg.GetIncomeRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetIncomeRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetIncomeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.adv.msg.GetIncomeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.adv.msg.GetIncomeRequest)
    MergeFrom(*source);
  }
}

void GetIncomeRequest::MergeFrom(const GetIncomeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.adv.msg.GetIncomeRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.transid() != 0) {
    set_transid(from.transid());
  }
}

void GetIncomeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.adv.msg.GetIncomeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetIncomeRequest::CopyFrom(const GetIncomeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.adv.msg.GetIncomeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIncomeRequest::IsInitialized() const {

  return true;
}

void GetIncomeRequest::Swap(GetIncomeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetIncomeRequest::InternalSwap(GetIncomeRequest* other) {
  std::swap(transid_, other->transid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetIncomeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetIncomeRequest_descriptor_;
  metadata.reflection = GetIncomeRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetIncomeRequest

// optional int32 transid = 32;
void GetIncomeRequest::clear_transid() {
  transid_ = 0;
}
 ::google::protobuf::int32 GetIncomeRequest::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.GetIncomeRequest.transid)
  return transid_;
}
 void GetIncomeRequest::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.GetIncomeRequest.transid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetIncomeResult::kRetbaseFieldNumber;
const int GetIncomeResult::kPreCashFieldNumber;
const int GetIncomeResult::kUseableCashFieldNumber;
const int GetIncomeResult::kFetchedCashFieldNumber;
const int GetIncomeResult::kRankFieldNumber;
const int GetIncomeResult::kDescFieldNumber;
const int GetIncomeResult::kTransidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetIncomeResult::GetIncomeResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.adv.msg.GetIncomeResult)
}

void GetIncomeResult::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  retbase_ = const_cast< ::com::adv::msg::RetBase*>(&::com::adv::msg::RetBase::default_instance());
}

GetIncomeResult::GetIncomeResult(const GetIncomeResult& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.adv.msg.GetIncomeResult)
}

void GetIncomeResult::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  retbase_ = NULL;
  pre_cash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  useable_cash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fetched_cash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rank_ = 0;
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transid_ = 0;
}

GetIncomeResult::~GetIncomeResult() {
  // @@protoc_insertion_point(destructor:com.adv.msg.GetIncomeResult)
  SharedDtor();
}

void GetIncomeResult::SharedDtor() {
  pre_cash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  useable_cash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fetched_cash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete retbase_;
  }
}

void GetIncomeResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetIncomeResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetIncomeResult_descriptor_;
}

const GetIncomeResult& GetIncomeResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_adv_5fprotocol_2eproto();
  return *default_instance_;
}

GetIncomeResult* GetIncomeResult::default_instance_ = NULL;

GetIncomeResult* GetIncomeResult::New(::google::protobuf::Arena* arena) const {
  GetIncomeResult* n = new GetIncomeResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetIncomeResult::Clear() {
// @@protoc_insertion_point(message_clear_start:com.adv.msg.GetIncomeResult)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(GetIncomeResult, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GetIncomeResult*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(rank_, transid_);
  if (GetArenaNoVirtual() == NULL && retbase_ != NULL) delete retbase_;
  retbase_ = NULL;
  pre_cash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  useable_cash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fetched_cash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool GetIncomeResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.adv.msg.GetIncomeResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.adv.msg.RetBase retbase = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_retbase()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_pre_cash;
        break;
      }

      // optional string pre_cash = 2;
      case 2: {
        if (tag == 18) {
         parse_pre_cash:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pre_cash()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pre_cash().data(), this->pre_cash().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.GetIncomeResult.pre_cash"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_useable_cash;
        break;
      }

      // optional string useable_cash = 3;
      case 3: {
        if (tag == 26) {
         parse_useable_cash:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_useable_cash()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->useable_cash().data(), this->useable_cash().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.GetIncomeResult.useable_cash"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_fetched_cash;
        break;
      }

      // optional string fetched_cash = 4;
      case 4: {
        if (tag == 34) {
         parse_fetched_cash:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fetched_cash()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fetched_cash().data(), this->fetched_cash().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.GetIncomeResult.fetched_cash"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_rank;
        break;
      }

      // optional int32 rank = 5;
      case 5: {
        if (tag == 40) {
         parse_rank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_desc;
        break;
      }

      // optional string desc = 6;
      case 6: {
        if (tag == 50) {
         parse_desc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desc().data(), this->desc().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.GetIncomeResult.desc"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(256)) goto parse_transid;
        break;
      }

      // optional int32 transid = 32;
      case 32: {
        if (tag == 256) {
         parse_transid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.adv.msg.GetIncomeResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.adv.msg.GetIncomeResult)
  return false;
#undef DO_
}

void GetIncomeResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.adv.msg.GetIncomeResult)
  // optional .com.adv.msg.RetBase retbase = 1;
  if (this->has_retbase()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->retbase_, output);
  }

  // optional string pre_cash = 2;
  if (this->pre_cash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pre_cash().data(), this->pre_cash().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.GetIncomeResult.pre_cash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pre_cash(), output);
  }

  // optional string useable_cash = 3;
  if (this->useable_cash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->useable_cash().data(), this->useable_cash().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.GetIncomeResult.useable_cash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->useable_cash(), output);
  }

  // optional string fetched_cash = 4;
  if (this->fetched_cash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fetched_cash().data(), this->fetched_cash().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.GetIncomeResult.fetched_cash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->fetched_cash(), output);
  }

  // optional int32 rank = 5;
  if (this->rank() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->rank(), output);
  }

  // optional string desc = 6;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.GetIncomeResult.desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->desc(), output);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->transid(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.adv.msg.GetIncomeResult)
}

::google::protobuf::uint8* GetIncomeResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.adv.msg.GetIncomeResult)
  // optional .com.adv.msg.RetBase retbase = 1;
  if (this->has_retbase()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->retbase_, false, target);
  }

  // optional string pre_cash = 2;
  if (this->pre_cash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pre_cash().data(), this->pre_cash().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.GetIncomeResult.pre_cash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pre_cash(), target);
  }

  // optional string useable_cash = 3;
  if (this->useable_cash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->useable_cash().data(), this->useable_cash().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.GetIncomeResult.useable_cash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->useable_cash(), target);
  }

  // optional string fetched_cash = 4;
  if (this->fetched_cash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fetched_cash().data(), this->fetched_cash().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.GetIncomeResult.fetched_cash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->fetched_cash(), target);
  }

  // optional int32 rank = 5;
  if (this->rank() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->rank(), target);
  }

  // optional string desc = 6;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.GetIncomeResult.desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->desc(), target);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->transid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.adv.msg.GetIncomeResult)
  return target;
}

int GetIncomeResult::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:com.adv.msg.GetIncomeResult)
  int total_size = 0;

  // optional .com.adv.msg.RetBase retbase = 1;
  if (this->has_retbase()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->retbase_);
  }

  // optional string pre_cash = 2;
  if (this->pre_cash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pre_cash());
  }

  // optional string useable_cash = 3;
  if (this->useable_cash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->useable_cash());
  }

  // optional string fetched_cash = 4;
  if (this->fetched_cash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fetched_cash());
  }

  // optional int32 rank = 5;
  if (this->rank() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rank());
  }

  // optional string desc = 6;
  if (this->desc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->desc());
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->transid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetIncomeResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.adv.msg.GetIncomeResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetIncomeResult* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetIncomeResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.adv.msg.GetIncomeResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.adv.msg.GetIncomeResult)
    MergeFrom(*source);
  }
}

void GetIncomeResult::MergeFrom(const GetIncomeResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.adv.msg.GetIncomeResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_retbase()) {
    mutable_retbase()->::com::adv::msg::RetBase::MergeFrom(from.retbase());
  }
  if (from.pre_cash().size() > 0) {

    pre_cash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pre_cash_);
  }
  if (from.useable_cash().size() > 0) {

    useable_cash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.useable_cash_);
  }
  if (from.fetched_cash().size() > 0) {

    fetched_cash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fetched_cash_);
  }
  if (from.rank() != 0) {
    set_rank(from.rank());
  }
  if (from.desc().size() > 0) {

    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  if (from.transid() != 0) {
    set_transid(from.transid());
  }
}

void GetIncomeResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.adv.msg.GetIncomeResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetIncomeResult::CopyFrom(const GetIncomeResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.adv.msg.GetIncomeResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIncomeResult::IsInitialized() const {

  return true;
}

void GetIncomeResult::Swap(GetIncomeResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetIncomeResult::InternalSwap(GetIncomeResult* other) {
  std::swap(retbase_, other->retbase_);
  pre_cash_.Swap(&other->pre_cash_);
  useable_cash_.Swap(&other->useable_cash_);
  fetched_cash_.Swap(&other->fetched_cash_);
  std::swap(rank_, other->rank_);
  desc_.Swap(&other->desc_);
  std::swap(transid_, other->transid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetIncomeResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetIncomeResult_descriptor_;
  metadata.reflection = GetIncomeResult_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetIncomeResult

// optional .com.adv.msg.RetBase retbase = 1;
bool GetIncomeResult::has_retbase() const {
  return !_is_default_instance_ && retbase_ != NULL;
}
void GetIncomeResult::clear_retbase() {
  if (GetArenaNoVirtual() == NULL && retbase_ != NULL) delete retbase_;
  retbase_ = NULL;
}
const ::com::adv::msg::RetBase& GetIncomeResult::retbase() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.GetIncomeResult.retbase)
  return retbase_ != NULL ? *retbase_ : *default_instance_->retbase_;
}
::com::adv::msg::RetBase* GetIncomeResult::mutable_retbase() {
  
  if (retbase_ == NULL) {
    retbase_ = new ::com::adv::msg::RetBase;
  }
  // @@protoc_insertion_point(field_mutable:com.adv.msg.GetIncomeResult.retbase)
  return retbase_;
}
::com::adv::msg::RetBase* GetIncomeResult::release_retbase() {
  // @@protoc_insertion_point(field_release:com.adv.msg.GetIncomeResult.retbase)
  
  ::com::adv::msg::RetBase* temp = retbase_;
  retbase_ = NULL;
  return temp;
}
void GetIncomeResult::set_allocated_retbase(::com::adv::msg::RetBase* retbase) {
  delete retbase_;
  retbase_ = retbase;
  if (retbase) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.GetIncomeResult.retbase)
}

// optional string pre_cash = 2;
void GetIncomeResult::clear_pre_cash() {
  pre_cash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetIncomeResult::pre_cash() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.GetIncomeResult.pre_cash)
  return pre_cash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetIncomeResult::set_pre_cash(const ::std::string& value) {
  
  pre_cash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.GetIncomeResult.pre_cash)
}
 void GetIncomeResult::set_pre_cash(const char* value) {
  
  pre_cash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.GetIncomeResult.pre_cash)
}
 void GetIncomeResult::set_pre_cash(const char* value, size_t size) {
  
  pre_cash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.GetIncomeResult.pre_cash)
}
 ::std::string* GetIncomeResult::mutable_pre_cash() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.GetIncomeResult.pre_cash)
  return pre_cash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetIncomeResult::release_pre_cash() {
  // @@protoc_insertion_point(field_release:com.adv.msg.GetIncomeResult.pre_cash)
  
  return pre_cash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetIncomeResult::set_allocated_pre_cash(::std::string* pre_cash) {
  if (pre_cash != NULL) {
    
  } else {
    
  }
  pre_cash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pre_cash);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.GetIncomeResult.pre_cash)
}

// optional string useable_cash = 3;
void GetIncomeResult::clear_useable_cash() {
  useable_cash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetIncomeResult::useable_cash() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.GetIncomeResult.useable_cash)
  return useable_cash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetIncomeResult::set_useable_cash(const ::std::string& value) {
  
  useable_cash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.GetIncomeResult.useable_cash)
}
 void GetIncomeResult::set_useable_cash(const char* value) {
  
  useable_cash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.GetIncomeResult.useable_cash)
}
 void GetIncomeResult::set_useable_cash(const char* value, size_t size) {
  
  useable_cash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.GetIncomeResult.useable_cash)
}
 ::std::string* GetIncomeResult::mutable_useable_cash() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.GetIncomeResult.useable_cash)
  return useable_cash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetIncomeResult::release_useable_cash() {
  // @@protoc_insertion_point(field_release:com.adv.msg.GetIncomeResult.useable_cash)
  
  return useable_cash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetIncomeResult::set_allocated_useable_cash(::std::string* useable_cash) {
  if (useable_cash != NULL) {
    
  } else {
    
  }
  useable_cash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), useable_cash);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.GetIncomeResult.useable_cash)
}

// optional string fetched_cash = 4;
void GetIncomeResult::clear_fetched_cash() {
  fetched_cash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetIncomeResult::fetched_cash() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.GetIncomeResult.fetched_cash)
  return fetched_cash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetIncomeResult::set_fetched_cash(const ::std::string& value) {
  
  fetched_cash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.GetIncomeResult.fetched_cash)
}
 void GetIncomeResult::set_fetched_cash(const char* value) {
  
  fetched_cash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.GetIncomeResult.fetched_cash)
}
 void GetIncomeResult::set_fetched_cash(const char* value, size_t size) {
  
  fetched_cash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.GetIncomeResult.fetched_cash)
}
 ::std::string* GetIncomeResult::mutable_fetched_cash() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.GetIncomeResult.fetched_cash)
  return fetched_cash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetIncomeResult::release_fetched_cash() {
  // @@protoc_insertion_point(field_release:com.adv.msg.GetIncomeResult.fetched_cash)
  
  return fetched_cash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetIncomeResult::set_allocated_fetched_cash(::std::string* fetched_cash) {
  if (fetched_cash != NULL) {
    
  } else {
    
  }
  fetched_cash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fetched_cash);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.GetIncomeResult.fetched_cash)
}

// optional int32 rank = 5;
void GetIncomeResult::clear_rank() {
  rank_ = 0;
}
 ::google::protobuf::int32 GetIncomeResult::rank() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.GetIncomeResult.rank)
  return rank_;
}
 void GetIncomeResult::set_rank(::google::protobuf::int32 value) {
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.GetIncomeResult.rank)
}

// optional string desc = 6;
void GetIncomeResult::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetIncomeResult::desc() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.GetIncomeResult.desc)
  return desc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetIncomeResult::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.GetIncomeResult.desc)
}
 void GetIncomeResult::set_desc(const char* value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.GetIncomeResult.desc)
}
 void GetIncomeResult::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.GetIncomeResult.desc)
}
 ::std::string* GetIncomeResult::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.GetIncomeResult.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetIncomeResult::release_desc() {
  // @@protoc_insertion_point(field_release:com.adv.msg.GetIncomeResult.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetIncomeResult::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.GetIncomeResult.desc)
}

// optional int32 transid = 32;
void GetIncomeResult::clear_transid() {
  transid_ = 0;
}
 ::google::protobuf::int32 GetIncomeResult::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.GetIncomeResult.transid)
  return transid_;
}
 void GetIncomeResult::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.GetIncomeResult.transid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AckRequest::kTypeFieldNumber;
const int AckRequest::kIdFieldNumber;
const int AckRequest::kTimeFieldNumber;
const int AckRequest::kTransidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AckRequest::AckRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.adv.msg.AckRequest)
}

void AckRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

AckRequest::AckRequest(const AckRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.adv.msg.AckRequest)
}

void AckRequest::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  type_ = 0;
  time_ = 0;
  transid_ = 0;
}

AckRequest::~AckRequest() {
  // @@protoc_insertion_point(destructor:com.adv.msg.AckRequest)
  SharedDtor();
}

void AckRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AckRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AckRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AckRequest_descriptor_;
}

const AckRequest& AckRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_adv_5fprotocol_2eproto();
  return *default_instance_;
}

AckRequest* AckRequest::default_instance_ = NULL;

AckRequest* AckRequest::New(::google::protobuf::Arena* arena) const {
  AckRequest* n = new AckRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AckRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:com.adv.msg.AckRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(AckRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AckRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(type_, transid_);

#undef ZR_HELPER_
#undef ZR_

  id_.Clear();
}

bool AckRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.adv.msg.AckRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_id;
        break;
      }

      // repeated int64 id = 2;
      case 2: {
        if (tag == 18) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_id())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18, input, this->mutable_id())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_time;
        break;
      }

      // optional int32 time = 3;
      case 3: {
        if (tag == 24) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(256)) goto parse_transid;
        break;
      }

      // optional int32 transid = 32;
      case 32: {
        if (tag == 256) {
         parse_transid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.adv.msg.AckRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.adv.msg.AckRequest)
  return false;
#undef DO_
}

void AckRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.adv.msg.AckRequest)
  // optional int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // repeated int64 id = 2;
  if (this->id_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_id_cached_byte_size_);
  }
  for (int i = 0; i < this->id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->id(i), output);
  }

  // optional int32 time = 3;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->time(), output);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->transid(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.adv.msg.AckRequest)
}

::google::protobuf::uint8* AckRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.adv.msg.AckRequest)
  // optional int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // repeated int64 id = 2;
  if (this->id_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _id_cached_byte_size_, target);
  }
  for (int i = 0; i < this->id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->id(i), target);
  }

  // optional int32 time = 3;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->time(), target);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->transid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.adv.msg.AckRequest)
  return target;
}

int AckRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:com.adv.msg.AckRequest)
  int total_size = 0;

  // optional int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // optional int32 time = 3;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->time());
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->transid());
  }

  // repeated int64 id = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->id(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _id_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AckRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.adv.msg.AckRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AckRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AckRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.adv.msg.AckRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.adv.msg.AckRequest)
    MergeFrom(*source);
  }
}

void AckRequest::MergeFrom(const AckRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.adv.msg.AckRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  id_.MergeFrom(from.id_);
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.transid() != 0) {
    set_transid(from.transid());
  }
}

void AckRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.adv.msg.AckRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AckRequest::CopyFrom(const AckRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.adv.msg.AckRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AckRequest::IsInitialized() const {

  return true;
}

void AckRequest::Swap(AckRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AckRequest::InternalSwap(AckRequest* other) {
  std::swap(type_, other->type_);
  id_.UnsafeArenaSwap(&other->id_);
  std::swap(time_, other->time_);
  std::swap(transid_, other->transid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AckRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AckRequest_descriptor_;
  metadata.reflection = AckRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AckRequest

// optional int32 type = 1;
void AckRequest::clear_type() {
  type_ = 0;
}
 ::google::protobuf::int32 AckRequest::type() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.AckRequest.type)
  return type_;
}
 void AckRequest::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.AckRequest.type)
}

// repeated int64 id = 2;
int AckRequest::id_size() const {
  return id_.size();
}
void AckRequest::clear_id() {
  id_.Clear();
}
 ::google::protobuf::int64 AckRequest::id(int index) const {
  // @@protoc_insertion_point(field_get:com.adv.msg.AckRequest.id)
  return id_.Get(index);
}
 void AckRequest::set_id(int index, ::google::protobuf::int64 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.adv.msg.AckRequest.id)
}
 void AckRequest::add_id(::google::protobuf::int64 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:com.adv.msg.AckRequest.id)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
AckRequest::id() const {
  // @@protoc_insertion_point(field_list:com.adv.msg.AckRequest.id)
  return id_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
AckRequest::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:com.adv.msg.AckRequest.id)
  return &id_;
}

// optional int32 time = 3;
void AckRequest::clear_time() {
  time_ = 0;
}
 ::google::protobuf::int32 AckRequest::time() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.AckRequest.time)
  return time_;
}
 void AckRequest::set_time(::google::protobuf::int32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.AckRequest.time)
}

// optional int32 transid = 32;
void AckRequest::clear_transid() {
  transid_ = 0;
}
 ::google::protobuf::int32 AckRequest::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.AckRequest.transid)
  return transid_;
}
 void AckRequest::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.AckRequest.transid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SaveTaskRequest::kTaskinfoFieldNumber;
const int SaveTaskRequest::kTransidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SaveTaskRequest::SaveTaskRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.adv.msg.SaveTaskRequest)
}

void SaveTaskRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SaveTaskRequest::SaveTaskRequest(const SaveTaskRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.adv.msg.SaveTaskRequest)
}

void SaveTaskRequest::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  transid_ = 0;
}

SaveTaskRequest::~SaveTaskRequest() {
  // @@protoc_insertion_point(destructor:com.adv.msg.SaveTaskRequest)
  SharedDtor();
}

void SaveTaskRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SaveTaskRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SaveTaskRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SaveTaskRequest_descriptor_;
}

const SaveTaskRequest& SaveTaskRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_adv_5fprotocol_2eproto();
  return *default_instance_;
}

SaveTaskRequest* SaveTaskRequest::default_instance_ = NULL;

SaveTaskRequest* SaveTaskRequest::New(::google::protobuf::Arena* arena) const {
  SaveTaskRequest* n = new SaveTaskRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SaveTaskRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:com.adv.msg.SaveTaskRequest)
  transid_ = 0;
  taskinfo_.Clear();
}

bool SaveTaskRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.adv.msg.SaveTaskRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.adv.msg.TaskInfo taskinfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_taskinfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_taskinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_taskinfo;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(256)) goto parse_transid;
        break;
      }

      // optional int32 transid = 32;
      case 32: {
        if (tag == 256) {
         parse_transid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.adv.msg.SaveTaskRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.adv.msg.SaveTaskRequest)
  return false;
#undef DO_
}

void SaveTaskRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.adv.msg.SaveTaskRequest)
  // repeated .com.adv.msg.TaskInfo taskinfo = 1;
  for (unsigned int i = 0, n = this->taskinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->taskinfo(i), output);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->transid(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.adv.msg.SaveTaskRequest)
}

::google::protobuf::uint8* SaveTaskRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.adv.msg.SaveTaskRequest)
  // repeated .com.adv.msg.TaskInfo taskinfo = 1;
  for (unsigned int i = 0, n = this->taskinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->taskinfo(i), false, target);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->transid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.adv.msg.SaveTaskRequest)
  return target;
}

int SaveTaskRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:com.adv.msg.SaveTaskRequest)
  int total_size = 0;

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->transid());
  }

  // repeated .com.adv.msg.TaskInfo taskinfo = 1;
  total_size += 1 * this->taskinfo_size();
  for (int i = 0; i < this->taskinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->taskinfo(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SaveTaskRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.adv.msg.SaveTaskRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SaveTaskRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SaveTaskRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.adv.msg.SaveTaskRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.adv.msg.SaveTaskRequest)
    MergeFrom(*source);
  }
}

void SaveTaskRequest::MergeFrom(const SaveTaskRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.adv.msg.SaveTaskRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  taskinfo_.MergeFrom(from.taskinfo_);
  if (from.transid() != 0) {
    set_transid(from.transid());
  }
}

void SaveTaskRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.adv.msg.SaveTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SaveTaskRequest::CopyFrom(const SaveTaskRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.adv.msg.SaveTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveTaskRequest::IsInitialized() const {

  return true;
}

void SaveTaskRequest::Swap(SaveTaskRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SaveTaskRequest::InternalSwap(SaveTaskRequest* other) {
  taskinfo_.UnsafeArenaSwap(&other->taskinfo_);
  std::swap(transid_, other->transid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SaveTaskRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SaveTaskRequest_descriptor_;
  metadata.reflection = SaveTaskRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SaveTaskRequest

// repeated .com.adv.msg.TaskInfo taskinfo = 1;
int SaveTaskRequest::taskinfo_size() const {
  return taskinfo_.size();
}
void SaveTaskRequest::clear_taskinfo() {
  taskinfo_.Clear();
}
const ::com::adv::msg::TaskInfo& SaveTaskRequest::taskinfo(int index) const {
  // @@protoc_insertion_point(field_get:com.adv.msg.SaveTaskRequest.taskinfo)
  return taskinfo_.Get(index);
}
::com::adv::msg::TaskInfo* SaveTaskRequest::mutable_taskinfo(int index) {
  // @@protoc_insertion_point(field_mutable:com.adv.msg.SaveTaskRequest.taskinfo)
  return taskinfo_.Mutable(index);
}
::com::adv::msg::TaskInfo* SaveTaskRequest::add_taskinfo() {
  // @@protoc_insertion_point(field_add:com.adv.msg.SaveTaskRequest.taskinfo)
  return taskinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::com::adv::msg::TaskInfo >*
SaveTaskRequest::mutable_taskinfo() {
  // @@protoc_insertion_point(field_mutable_list:com.adv.msg.SaveTaskRequest.taskinfo)
  return &taskinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::com::adv::msg::TaskInfo >&
SaveTaskRequest::taskinfo() const {
  // @@protoc_insertion_point(field_list:com.adv.msg.SaveTaskRequest.taskinfo)
  return taskinfo_;
}

// optional int32 transid = 32;
void SaveTaskRequest::clear_transid() {
  transid_ = 0;
}
 ::google::protobuf::int32 SaveTaskRequest::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.SaveTaskRequest.transid)
  return transid_;
}
 void SaveTaskRequest::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.SaveTaskRequest.transid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SaveTaskResult::kRetbaseFieldNumber;
const int SaveTaskResult::kTransidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SaveTaskResult::SaveTaskResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.adv.msg.SaveTaskResult)
}

void SaveTaskResult::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  retbase_ = const_cast< ::com::adv::msg::RetBase*>(&::com::adv::msg::RetBase::default_instance());
}

SaveTaskResult::SaveTaskResult(const SaveTaskResult& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.adv.msg.SaveTaskResult)
}

void SaveTaskResult::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retbase_ = NULL;
  transid_ = 0;
}

SaveTaskResult::~SaveTaskResult() {
  // @@protoc_insertion_point(destructor:com.adv.msg.SaveTaskResult)
  SharedDtor();
}

void SaveTaskResult::SharedDtor() {
  if (this != default_instance_) {
    delete retbase_;
  }
}

void SaveTaskResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SaveTaskResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SaveTaskResult_descriptor_;
}

const SaveTaskResult& SaveTaskResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_adv_5fprotocol_2eproto();
  return *default_instance_;
}

SaveTaskResult* SaveTaskResult::default_instance_ = NULL;

SaveTaskResult* SaveTaskResult::New(::google::protobuf::Arena* arena) const {
  SaveTaskResult* n = new SaveTaskResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SaveTaskResult::Clear() {
// @@protoc_insertion_point(message_clear_start:com.adv.msg.SaveTaskResult)
  if (GetArenaNoVirtual() == NULL && retbase_ != NULL) delete retbase_;
  retbase_ = NULL;
  transid_ = 0;
}

bool SaveTaskResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.adv.msg.SaveTaskResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.adv.msg.RetBase retbase = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_retbase()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(256)) goto parse_transid;
        break;
      }

      // optional int32 transid = 32;
      case 32: {
        if (tag == 256) {
         parse_transid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.adv.msg.SaveTaskResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.adv.msg.SaveTaskResult)
  return false;
#undef DO_
}

void SaveTaskResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.adv.msg.SaveTaskResult)
  // optional .com.adv.msg.RetBase retbase = 1;
  if (this->has_retbase()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->retbase_, output);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->transid(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.adv.msg.SaveTaskResult)
}

::google::protobuf::uint8* SaveTaskResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.adv.msg.SaveTaskResult)
  // optional .com.adv.msg.RetBase retbase = 1;
  if (this->has_retbase()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->retbase_, false, target);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->transid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.adv.msg.SaveTaskResult)
  return target;
}

int SaveTaskResult::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:com.adv.msg.SaveTaskResult)
  int total_size = 0;

  // optional .com.adv.msg.RetBase retbase = 1;
  if (this->has_retbase()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->retbase_);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->transid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SaveTaskResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.adv.msg.SaveTaskResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SaveTaskResult* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SaveTaskResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.adv.msg.SaveTaskResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.adv.msg.SaveTaskResult)
    MergeFrom(*source);
  }
}

void SaveTaskResult::MergeFrom(const SaveTaskResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.adv.msg.SaveTaskResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_retbase()) {
    mutable_retbase()->::com::adv::msg::RetBase::MergeFrom(from.retbase());
  }
  if (from.transid() != 0) {
    set_transid(from.transid());
  }
}

void SaveTaskResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.adv.msg.SaveTaskResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SaveTaskResult::CopyFrom(const SaveTaskResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.adv.msg.SaveTaskResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveTaskResult::IsInitialized() const {

  return true;
}

void SaveTaskResult::Swap(SaveTaskResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SaveTaskResult::InternalSwap(SaveTaskResult* other) {
  std::swap(retbase_, other->retbase_);
  std::swap(transid_, other->transid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SaveTaskResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SaveTaskResult_descriptor_;
  metadata.reflection = SaveTaskResult_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SaveTaskResult

// optional .com.adv.msg.RetBase retbase = 1;
bool SaveTaskResult::has_retbase() const {
  return !_is_default_instance_ && retbase_ != NULL;
}
void SaveTaskResult::clear_retbase() {
  if (GetArenaNoVirtual() == NULL && retbase_ != NULL) delete retbase_;
  retbase_ = NULL;
}
const ::com::adv::msg::RetBase& SaveTaskResult::retbase() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.SaveTaskResult.retbase)
  return retbase_ != NULL ? *retbase_ : *default_instance_->retbase_;
}
::com::adv::msg::RetBase* SaveTaskResult::mutable_retbase() {
  
  if (retbase_ == NULL) {
    retbase_ = new ::com::adv::msg::RetBase;
  }
  // @@protoc_insertion_point(field_mutable:com.adv.msg.SaveTaskResult.retbase)
  return retbase_;
}
::com::adv::msg::RetBase* SaveTaskResult::release_retbase() {
  // @@protoc_insertion_point(field_release:com.adv.msg.SaveTaskResult.retbase)
  
  ::com::adv::msg::RetBase* temp = retbase_;
  retbase_ = NULL;
  return temp;
}
void SaveTaskResult::set_allocated_retbase(::com::adv::msg::RetBase* retbase) {
  delete retbase_;
  retbase_ = retbase;
  if (retbase) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.SaveTaskResult.retbase)
}

// optional int32 transid = 32;
void SaveTaskResult::clear_transid() {
  transid_ = 0;
}
 ::google::protobuf::int32 SaveTaskResult::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.SaveTaskResult.transid)
  return transid_;
}
 void SaveTaskResult::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.SaveTaskResult.transid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WithdrawRequest::kTypeFieldNumber;
const int WithdrawRequest::kWithdrawCashFieldNumber;
const int WithdrawRequest::kIdFieldNumber;
const int WithdrawRequest::kOpenIdFieldNumber;
const int WithdrawRequest::kPasswdFieldNumber;
const int WithdrawRequest::kUserNameFieldNumber;
const int WithdrawRequest::kDescFieldNumber;
const int WithdrawRequest::kTimeFieldNumber;
const int WithdrawRequest::kTransidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WithdrawRequest::WithdrawRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.adv.msg.WithdrawRequest)
}

void WithdrawRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

WithdrawRequest::WithdrawRequest(const WithdrawRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.adv.msg.WithdrawRequest)
}

void WithdrawRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 0;
  withdraw_cash_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  open_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = 0;
  transid_ = 0;
}

WithdrawRequest::~WithdrawRequest() {
  // @@protoc_insertion_point(destructor:com.adv.msg.WithdrawRequest)
  SharedDtor();
}

void WithdrawRequest::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  open_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void WithdrawRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WithdrawRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WithdrawRequest_descriptor_;
}

const WithdrawRequest& WithdrawRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_adv_5fprotocol_2eproto();
  return *default_instance_;
}

WithdrawRequest* WithdrawRequest::default_instance_ = NULL;

WithdrawRequest* WithdrawRequest::New(::google::protobuf::Arena* arena) const {
  WithdrawRequest* n = new WithdrawRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WithdrawRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:com.adv.msg.WithdrawRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(WithdrawRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<WithdrawRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(type_, withdraw_cash_);
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  open_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = 0;
  transid_ = 0;

#undef ZR_HELPER_
#undef ZR_

}

bool WithdrawRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.adv.msg.WithdrawRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_withdraw_cash;
        break;
      }

      // optional int32 withdraw_cash = 2;
      case 2: {
        if (tag == 16) {
         parse_withdraw_cash:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &withdraw_cash_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_id;
        break;
      }

      // optional string id = 3;
      case 3: {
        if (tag == 26) {
         parse_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.WithdrawRequest.id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_open_id;
        break;
      }

      // optional string open_id = 4;
      case 4: {
        if (tag == 34) {
         parse_open_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_open_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->open_id().data(), this->open_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.WithdrawRequest.open_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_passwd;
        break;
      }

      // optional string passwd = 5;
      case 5: {
        if (tag == 42) {
         parse_passwd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_passwd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->passwd().data(), this->passwd().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.WithdrawRequest.passwd"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_user_name;
        break;
      }

      // optional string user_name = 6;
      case 6: {
        if (tag == 50) {
         parse_user_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_name().data(), this->user_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.WithdrawRequest.user_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_desc;
        break;
      }

      // optional string desc = 7;
      case 7: {
        if (tag == 58) {
         parse_desc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desc().data(), this->desc().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.WithdrawRequest.desc"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_time;
        break;
      }

      // optional int32 time = 8;
      case 8: {
        if (tag == 64) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(256)) goto parse_transid;
        break;
      }

      // optional int32 transid = 32;
      case 32: {
        if (tag == 256) {
         parse_transid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.adv.msg.WithdrawRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.adv.msg.WithdrawRequest)
  return false;
#undef DO_
}

void WithdrawRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.adv.msg.WithdrawRequest)
  // optional int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional int32 withdraw_cash = 2;
  if (this->withdraw_cash() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->withdraw_cash(), output);
  }

  // optional string id = 3;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.WithdrawRequest.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->id(), output);
  }

  // optional string open_id = 4;
  if (this->open_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->open_id().data(), this->open_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.WithdrawRequest.open_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->open_id(), output);
  }

  // optional string passwd = 5;
  if (this->passwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passwd().data(), this->passwd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.WithdrawRequest.passwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->passwd(), output);
  }

  // optional string user_name = 6;
  if (this->user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.WithdrawRequest.user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->user_name(), output);
  }

  // optional string desc = 7;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.WithdrawRequest.desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->desc(), output);
  }

  // optional int32 time = 8;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->time(), output);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->transid(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.adv.msg.WithdrawRequest)
}

::google::protobuf::uint8* WithdrawRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.adv.msg.WithdrawRequest)
  // optional int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional int32 withdraw_cash = 2;
  if (this->withdraw_cash() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->withdraw_cash(), target);
  }

  // optional string id = 3;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.WithdrawRequest.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->id(), target);
  }

  // optional string open_id = 4;
  if (this->open_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->open_id().data(), this->open_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.WithdrawRequest.open_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->open_id(), target);
  }

  // optional string passwd = 5;
  if (this->passwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passwd().data(), this->passwd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.WithdrawRequest.passwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->passwd(), target);
  }

  // optional string user_name = 6;
  if (this->user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.WithdrawRequest.user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->user_name(), target);
  }

  // optional string desc = 7;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.WithdrawRequest.desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->desc(), target);
  }

  // optional int32 time = 8;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->time(), target);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->transid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.adv.msg.WithdrawRequest)
  return target;
}

int WithdrawRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:com.adv.msg.WithdrawRequest)
  int total_size = 0;

  // optional int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // optional int32 withdraw_cash = 2;
  if (this->withdraw_cash() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->withdraw_cash());
  }

  // optional string id = 3;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // optional string open_id = 4;
  if (this->open_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->open_id());
  }

  // optional string passwd = 5;
  if (this->passwd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->passwd());
  }

  // optional string user_name = 6;
  if (this->user_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_name());
  }

  // optional string desc = 7;
  if (this->desc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->desc());
  }

  // optional int32 time = 8;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->time());
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->transid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WithdrawRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.adv.msg.WithdrawRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const WithdrawRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const WithdrawRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.adv.msg.WithdrawRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.adv.msg.WithdrawRequest)
    MergeFrom(*source);
  }
}

void WithdrawRequest::MergeFrom(const WithdrawRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.adv.msg.WithdrawRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.withdraw_cash() != 0) {
    set_withdraw_cash(from.withdraw_cash());
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.open_id().size() > 0) {

    open_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.open_id_);
  }
  if (from.passwd().size() > 0) {

    passwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passwd_);
  }
  if (from.user_name().size() > 0) {

    user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
  }
  if (from.desc().size() > 0) {

    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.transid() != 0) {
    set_transid(from.transid());
  }
}

void WithdrawRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.adv.msg.WithdrawRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WithdrawRequest::CopyFrom(const WithdrawRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.adv.msg.WithdrawRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WithdrawRequest::IsInitialized() const {

  return true;
}

void WithdrawRequest::Swap(WithdrawRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WithdrawRequest::InternalSwap(WithdrawRequest* other) {
  std::swap(type_, other->type_);
  std::swap(withdraw_cash_, other->withdraw_cash_);
  id_.Swap(&other->id_);
  open_id_.Swap(&other->open_id_);
  passwd_.Swap(&other->passwd_);
  user_name_.Swap(&other->user_name_);
  desc_.Swap(&other->desc_);
  std::swap(time_, other->time_);
  std::swap(transid_, other->transid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WithdrawRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WithdrawRequest_descriptor_;
  metadata.reflection = WithdrawRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WithdrawRequest

// optional int32 type = 1;
void WithdrawRequest::clear_type() {
  type_ = 0;
}
 ::google::protobuf::int32 WithdrawRequest::type() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.WithdrawRequest.type)
  return type_;
}
 void WithdrawRequest::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.WithdrawRequest.type)
}

// optional int32 withdraw_cash = 2;
void WithdrawRequest::clear_withdraw_cash() {
  withdraw_cash_ = 0;
}
 ::google::protobuf::int32 WithdrawRequest::withdraw_cash() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.WithdrawRequest.withdraw_cash)
  return withdraw_cash_;
}
 void WithdrawRequest::set_withdraw_cash(::google::protobuf::int32 value) {
  
  withdraw_cash_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.WithdrawRequest.withdraw_cash)
}

// optional string id = 3;
void WithdrawRequest::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& WithdrawRequest::id() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.WithdrawRequest.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WithdrawRequest::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.WithdrawRequest.id)
}
 void WithdrawRequest::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.WithdrawRequest.id)
}
 void WithdrawRequest::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.WithdrawRequest.id)
}
 ::std::string* WithdrawRequest::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.WithdrawRequest.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* WithdrawRequest::release_id() {
  // @@protoc_insertion_point(field_release:com.adv.msg.WithdrawRequest.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WithdrawRequest::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.WithdrawRequest.id)
}

// optional string open_id = 4;
void WithdrawRequest::clear_open_id() {
  open_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& WithdrawRequest::open_id() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.WithdrawRequest.open_id)
  return open_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WithdrawRequest::set_open_id(const ::std::string& value) {
  
  open_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.WithdrawRequest.open_id)
}
 void WithdrawRequest::set_open_id(const char* value) {
  
  open_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.WithdrawRequest.open_id)
}
 void WithdrawRequest::set_open_id(const char* value, size_t size) {
  
  open_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.WithdrawRequest.open_id)
}
 ::std::string* WithdrawRequest::mutable_open_id() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.WithdrawRequest.open_id)
  return open_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* WithdrawRequest::release_open_id() {
  // @@protoc_insertion_point(field_release:com.adv.msg.WithdrawRequest.open_id)
  
  return open_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WithdrawRequest::set_allocated_open_id(::std::string* open_id) {
  if (open_id != NULL) {
    
  } else {
    
  }
  open_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), open_id);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.WithdrawRequest.open_id)
}

// optional string passwd = 5;
void WithdrawRequest::clear_passwd() {
  passwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& WithdrawRequest::passwd() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.WithdrawRequest.passwd)
  return passwd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WithdrawRequest::set_passwd(const ::std::string& value) {
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.WithdrawRequest.passwd)
}
 void WithdrawRequest::set_passwd(const char* value) {
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.WithdrawRequest.passwd)
}
 void WithdrawRequest::set_passwd(const char* value, size_t size) {
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.WithdrawRequest.passwd)
}
 ::std::string* WithdrawRequest::mutable_passwd() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.WithdrawRequest.passwd)
  return passwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* WithdrawRequest::release_passwd() {
  // @@protoc_insertion_point(field_release:com.adv.msg.WithdrawRequest.passwd)
  
  return passwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WithdrawRequest::set_allocated_passwd(::std::string* passwd) {
  if (passwd != NULL) {
    
  } else {
    
  }
  passwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), passwd);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.WithdrawRequest.passwd)
}

// optional string user_name = 6;
void WithdrawRequest::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& WithdrawRequest::user_name() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.WithdrawRequest.user_name)
  return user_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WithdrawRequest::set_user_name(const ::std::string& value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.WithdrawRequest.user_name)
}
 void WithdrawRequest::set_user_name(const char* value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.WithdrawRequest.user_name)
}
 void WithdrawRequest::set_user_name(const char* value, size_t size) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.WithdrawRequest.user_name)
}
 ::std::string* WithdrawRequest::mutable_user_name() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.WithdrawRequest.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* WithdrawRequest::release_user_name() {
  // @@protoc_insertion_point(field_release:com.adv.msg.WithdrawRequest.user_name)
  
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WithdrawRequest::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    
  } else {
    
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.WithdrawRequest.user_name)
}

// optional string desc = 7;
void WithdrawRequest::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& WithdrawRequest::desc() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.WithdrawRequest.desc)
  return desc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WithdrawRequest::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.WithdrawRequest.desc)
}
 void WithdrawRequest::set_desc(const char* value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.WithdrawRequest.desc)
}
 void WithdrawRequest::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.WithdrawRequest.desc)
}
 ::std::string* WithdrawRequest::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.WithdrawRequest.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* WithdrawRequest::release_desc() {
  // @@protoc_insertion_point(field_release:com.adv.msg.WithdrawRequest.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WithdrawRequest::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.WithdrawRequest.desc)
}

// optional int32 time = 8;
void WithdrawRequest::clear_time() {
  time_ = 0;
}
 ::google::protobuf::int32 WithdrawRequest::time() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.WithdrawRequest.time)
  return time_;
}
 void WithdrawRequest::set_time(::google::protobuf::int32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.WithdrawRequest.time)
}

// optional int32 transid = 32;
void WithdrawRequest::clear_transid() {
  transid_ = 0;
}
 ::google::protobuf::int32 WithdrawRequest::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.WithdrawRequest.transid)
  return transid_;
}
 void WithdrawRequest::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.WithdrawRequest.transid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WithdrawResult::kRetbaseFieldNumber;
const int WithdrawResult::kTypeFieldNumber;
const int WithdrawResult::kWithdrawCashFieldNumber;
const int WithdrawResult::kTradeIdFieldNumber;
const int WithdrawResult::kDescFieldNumber;
const int WithdrawResult::kTimeFieldNumber;
const int WithdrawResult::kPreCashFieldNumber;
const int WithdrawResult::kUseableCashFieldNumber;
const int WithdrawResult::kFetchedCashFieldNumber;
const int WithdrawResult::kTransidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WithdrawResult::WithdrawResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.adv.msg.WithdrawResult)
}

void WithdrawResult::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  retbase_ = const_cast< ::com::adv::msg::RetBase*>(&::com::adv::msg::RetBase::default_instance());
}

WithdrawResult::WithdrawResult(const WithdrawResult& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.adv.msg.WithdrawResult)
}

void WithdrawResult::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  retbase_ = NULL;
  type_ = 0;
  withdraw_cash_ = 0;
  trade_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = 0;
  pre_cash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  useable_cash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fetched_cash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transid_ = 0;
}

WithdrawResult::~WithdrawResult() {
  // @@protoc_insertion_point(destructor:com.adv.msg.WithdrawResult)
  SharedDtor();
}

void WithdrawResult::SharedDtor() {
  trade_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pre_cash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  useable_cash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fetched_cash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete retbase_;
  }
}

void WithdrawResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WithdrawResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WithdrawResult_descriptor_;
}

const WithdrawResult& WithdrawResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_adv_5fprotocol_2eproto();
  return *default_instance_;
}

WithdrawResult* WithdrawResult::default_instance_ = NULL;

WithdrawResult* WithdrawResult::New(::google::protobuf::Arena* arena) const {
  WithdrawResult* n = new WithdrawResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WithdrawResult::Clear() {
// @@protoc_insertion_point(message_clear_start:com.adv.msg.WithdrawResult)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(WithdrawResult, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<WithdrawResult*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(type_, withdraw_cash_);
  if (GetArenaNoVirtual() == NULL && retbase_ != NULL) delete retbase_;
  retbase_ = NULL;
  trade_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = 0;
  pre_cash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  useable_cash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fetched_cash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transid_ = 0;

#undef ZR_HELPER_
#undef ZR_

}

bool WithdrawResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.adv.msg.WithdrawResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.adv.msg.RetBase retbase = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_retbase()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // optional int32 type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_withdraw_cash;
        break;
      }

      // optional int32 withdraw_cash = 3;
      case 3: {
        if (tag == 24) {
         parse_withdraw_cash:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &withdraw_cash_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_trade_id;
        break;
      }

      // optional string trade_id = 4;
      case 4: {
        if (tag == 34) {
         parse_trade_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trade_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trade_id().data(), this->trade_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.WithdrawResult.trade_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_desc;
        break;
      }

      // optional string desc = 5;
      case 5: {
        if (tag == 42) {
         parse_desc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desc().data(), this->desc().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.WithdrawResult.desc"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_time;
        break;
      }

      // optional int32 time = 6;
      case 6: {
        if (tag == 48) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_pre_cash;
        break;
      }

      // optional string pre_cash = 7;
      case 7: {
        if (tag == 58) {
         parse_pre_cash:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pre_cash()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pre_cash().data(), this->pre_cash().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.WithdrawResult.pre_cash"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_useable_cash;
        break;
      }

      // optional string useable_cash = 8;
      case 8: {
        if (tag == 66) {
         parse_useable_cash:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_useable_cash()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->useable_cash().data(), this->useable_cash().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.WithdrawResult.useable_cash"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_fetched_cash;
        break;
      }

      // optional string fetched_cash = 9;
      case 9: {
        if (tag == 74) {
         parse_fetched_cash:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fetched_cash()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fetched_cash().data(), this->fetched_cash().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.WithdrawResult.fetched_cash"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(256)) goto parse_transid;
        break;
      }

      // optional int32 transid = 32;
      case 32: {
        if (tag == 256) {
         parse_transid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.adv.msg.WithdrawResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.adv.msg.WithdrawResult)
  return false;
#undef DO_
}

void WithdrawResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.adv.msg.WithdrawResult)
  // optional .com.adv.msg.RetBase retbase = 1;
  if (this->has_retbase()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->retbase_, output);
  }

  // optional int32 type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // optional int32 withdraw_cash = 3;
  if (this->withdraw_cash() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->withdraw_cash(), output);
  }

  // optional string trade_id = 4;
  if (this->trade_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trade_id().data(), this->trade_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.WithdrawResult.trade_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->trade_id(), output);
  }

  // optional string desc = 5;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.WithdrawResult.desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->desc(), output);
  }

  // optional int32 time = 6;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->time(), output);
  }

  // optional string pre_cash = 7;
  if (this->pre_cash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pre_cash().data(), this->pre_cash().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.WithdrawResult.pre_cash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->pre_cash(), output);
  }

  // optional string useable_cash = 8;
  if (this->useable_cash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->useable_cash().data(), this->useable_cash().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.WithdrawResult.useable_cash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->useable_cash(), output);
  }

  // optional string fetched_cash = 9;
  if (this->fetched_cash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fetched_cash().data(), this->fetched_cash().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.WithdrawResult.fetched_cash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->fetched_cash(), output);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->transid(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.adv.msg.WithdrawResult)
}

::google::protobuf::uint8* WithdrawResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.adv.msg.WithdrawResult)
  // optional .com.adv.msg.RetBase retbase = 1;
  if (this->has_retbase()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->retbase_, false, target);
  }

  // optional int32 type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // optional int32 withdraw_cash = 3;
  if (this->withdraw_cash() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->withdraw_cash(), target);
  }

  // optional string trade_id = 4;
  if (this->trade_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trade_id().data(), this->trade_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.WithdrawResult.trade_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->trade_id(), target);
  }

  // optional string desc = 5;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.WithdrawResult.desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->desc(), target);
  }

  // optional int32 time = 6;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->time(), target);
  }

  // optional string pre_cash = 7;
  if (this->pre_cash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pre_cash().data(), this->pre_cash().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.WithdrawResult.pre_cash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->pre_cash(), target);
  }

  // optional string useable_cash = 8;
  if (this->useable_cash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->useable_cash().data(), this->useable_cash().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.WithdrawResult.useable_cash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->useable_cash(), target);
  }

  // optional string fetched_cash = 9;
  if (this->fetched_cash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fetched_cash().data(), this->fetched_cash().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.WithdrawResult.fetched_cash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->fetched_cash(), target);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->transid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.adv.msg.WithdrawResult)
  return target;
}

int WithdrawResult::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:com.adv.msg.WithdrawResult)
  int total_size = 0;

  // optional .com.adv.msg.RetBase retbase = 1;
  if (this->has_retbase()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->retbase_);
  }

  // optional int32 type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // optional int32 withdraw_cash = 3;
  if (this->withdraw_cash() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->withdraw_cash());
  }

  // optional string trade_id = 4;
  if (this->trade_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trade_id());
  }

  // optional string desc = 5;
  if (this->desc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->desc());
  }

  // optional int32 time = 6;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->time());
  }

  // optional string pre_cash = 7;
  if (this->pre_cash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pre_cash());
  }

  // optional string useable_cash = 8;
  if (this->useable_cash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->useable_cash());
  }

  // optional string fetched_cash = 9;
  if (this->fetched_cash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fetched_cash());
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->transid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WithdrawResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.adv.msg.WithdrawResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const WithdrawResult* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const WithdrawResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.adv.msg.WithdrawResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.adv.msg.WithdrawResult)
    MergeFrom(*source);
  }
}

void WithdrawResult::MergeFrom(const WithdrawResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.adv.msg.WithdrawResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_retbase()) {
    mutable_retbase()->::com::adv::msg::RetBase::MergeFrom(from.retbase());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.withdraw_cash() != 0) {
    set_withdraw_cash(from.withdraw_cash());
  }
  if (from.trade_id().size() > 0) {

    trade_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trade_id_);
  }
  if (from.desc().size() > 0) {

    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.pre_cash().size() > 0) {

    pre_cash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pre_cash_);
  }
  if (from.useable_cash().size() > 0) {

    useable_cash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.useable_cash_);
  }
  if (from.fetched_cash().size() > 0) {

    fetched_cash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fetched_cash_);
  }
  if (from.transid() != 0) {
    set_transid(from.transid());
  }
}

void WithdrawResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.adv.msg.WithdrawResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WithdrawResult::CopyFrom(const WithdrawResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.adv.msg.WithdrawResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WithdrawResult::IsInitialized() const {

  return true;
}

void WithdrawResult::Swap(WithdrawResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WithdrawResult::InternalSwap(WithdrawResult* other) {
  std::swap(retbase_, other->retbase_);
  std::swap(type_, other->type_);
  std::swap(withdraw_cash_, other->withdraw_cash_);
  trade_id_.Swap(&other->trade_id_);
  desc_.Swap(&other->desc_);
  std::swap(time_, other->time_);
  pre_cash_.Swap(&other->pre_cash_);
  useable_cash_.Swap(&other->useable_cash_);
  fetched_cash_.Swap(&other->fetched_cash_);
  std::swap(transid_, other->transid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WithdrawResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WithdrawResult_descriptor_;
  metadata.reflection = WithdrawResult_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WithdrawResult

// optional .com.adv.msg.RetBase retbase = 1;
bool WithdrawResult::has_retbase() const {
  return !_is_default_instance_ && retbase_ != NULL;
}
void WithdrawResult::clear_retbase() {
  if (GetArenaNoVirtual() == NULL && retbase_ != NULL) delete retbase_;
  retbase_ = NULL;
}
const ::com::adv::msg::RetBase& WithdrawResult::retbase() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.WithdrawResult.retbase)
  return retbase_ != NULL ? *retbase_ : *default_instance_->retbase_;
}
::com::adv::msg::RetBase* WithdrawResult::mutable_retbase() {
  
  if (retbase_ == NULL) {
    retbase_ = new ::com::adv::msg::RetBase;
  }
  // @@protoc_insertion_point(field_mutable:com.adv.msg.WithdrawResult.retbase)
  return retbase_;
}
::com::adv::msg::RetBase* WithdrawResult::release_retbase() {
  // @@protoc_insertion_point(field_release:com.adv.msg.WithdrawResult.retbase)
  
  ::com::adv::msg::RetBase* temp = retbase_;
  retbase_ = NULL;
  return temp;
}
void WithdrawResult::set_allocated_retbase(::com::adv::msg::RetBase* retbase) {
  delete retbase_;
  retbase_ = retbase;
  if (retbase) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.WithdrawResult.retbase)
}

// optional int32 type = 2;
void WithdrawResult::clear_type() {
  type_ = 0;
}
 ::google::protobuf::int32 WithdrawResult::type() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.WithdrawResult.type)
  return type_;
}
 void WithdrawResult::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.WithdrawResult.type)
}

// optional int32 withdraw_cash = 3;
void WithdrawResult::clear_withdraw_cash() {
  withdraw_cash_ = 0;
}
 ::google::protobuf::int32 WithdrawResult::withdraw_cash() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.WithdrawResult.withdraw_cash)
  return withdraw_cash_;
}
 void WithdrawResult::set_withdraw_cash(::google::protobuf::int32 value) {
  
  withdraw_cash_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.WithdrawResult.withdraw_cash)
}

// optional string trade_id = 4;
void WithdrawResult::clear_trade_id() {
  trade_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& WithdrawResult::trade_id() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.WithdrawResult.trade_id)
  return trade_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WithdrawResult::set_trade_id(const ::std::string& value) {
  
  trade_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.WithdrawResult.trade_id)
}
 void WithdrawResult::set_trade_id(const char* value) {
  
  trade_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.WithdrawResult.trade_id)
}
 void WithdrawResult::set_trade_id(const char* value, size_t size) {
  
  trade_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.WithdrawResult.trade_id)
}
 ::std::string* WithdrawResult::mutable_trade_id() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.WithdrawResult.trade_id)
  return trade_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* WithdrawResult::release_trade_id() {
  // @@protoc_insertion_point(field_release:com.adv.msg.WithdrawResult.trade_id)
  
  return trade_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WithdrawResult::set_allocated_trade_id(::std::string* trade_id) {
  if (trade_id != NULL) {
    
  } else {
    
  }
  trade_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trade_id);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.WithdrawResult.trade_id)
}

// optional string desc = 5;
void WithdrawResult::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& WithdrawResult::desc() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.WithdrawResult.desc)
  return desc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WithdrawResult::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.WithdrawResult.desc)
}
 void WithdrawResult::set_desc(const char* value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.WithdrawResult.desc)
}
 void WithdrawResult::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.WithdrawResult.desc)
}
 ::std::string* WithdrawResult::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.WithdrawResult.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* WithdrawResult::release_desc() {
  // @@protoc_insertion_point(field_release:com.adv.msg.WithdrawResult.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WithdrawResult::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.WithdrawResult.desc)
}

// optional int32 time = 6;
void WithdrawResult::clear_time() {
  time_ = 0;
}
 ::google::protobuf::int32 WithdrawResult::time() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.WithdrawResult.time)
  return time_;
}
 void WithdrawResult::set_time(::google::protobuf::int32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.WithdrawResult.time)
}

// optional string pre_cash = 7;
void WithdrawResult::clear_pre_cash() {
  pre_cash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& WithdrawResult::pre_cash() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.WithdrawResult.pre_cash)
  return pre_cash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WithdrawResult::set_pre_cash(const ::std::string& value) {
  
  pre_cash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.WithdrawResult.pre_cash)
}
 void WithdrawResult::set_pre_cash(const char* value) {
  
  pre_cash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.WithdrawResult.pre_cash)
}
 void WithdrawResult::set_pre_cash(const char* value, size_t size) {
  
  pre_cash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.WithdrawResult.pre_cash)
}
 ::std::string* WithdrawResult::mutable_pre_cash() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.WithdrawResult.pre_cash)
  return pre_cash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* WithdrawResult::release_pre_cash() {
  // @@protoc_insertion_point(field_release:com.adv.msg.WithdrawResult.pre_cash)
  
  return pre_cash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WithdrawResult::set_allocated_pre_cash(::std::string* pre_cash) {
  if (pre_cash != NULL) {
    
  } else {
    
  }
  pre_cash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pre_cash);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.WithdrawResult.pre_cash)
}

// optional string useable_cash = 8;
void WithdrawResult::clear_useable_cash() {
  useable_cash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& WithdrawResult::useable_cash() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.WithdrawResult.useable_cash)
  return useable_cash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WithdrawResult::set_useable_cash(const ::std::string& value) {
  
  useable_cash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.WithdrawResult.useable_cash)
}
 void WithdrawResult::set_useable_cash(const char* value) {
  
  useable_cash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.WithdrawResult.useable_cash)
}
 void WithdrawResult::set_useable_cash(const char* value, size_t size) {
  
  useable_cash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.WithdrawResult.useable_cash)
}
 ::std::string* WithdrawResult::mutable_useable_cash() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.WithdrawResult.useable_cash)
  return useable_cash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* WithdrawResult::release_useable_cash() {
  // @@protoc_insertion_point(field_release:com.adv.msg.WithdrawResult.useable_cash)
  
  return useable_cash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WithdrawResult::set_allocated_useable_cash(::std::string* useable_cash) {
  if (useable_cash != NULL) {
    
  } else {
    
  }
  useable_cash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), useable_cash);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.WithdrawResult.useable_cash)
}

// optional string fetched_cash = 9;
void WithdrawResult::clear_fetched_cash() {
  fetched_cash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& WithdrawResult::fetched_cash() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.WithdrawResult.fetched_cash)
  return fetched_cash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WithdrawResult::set_fetched_cash(const ::std::string& value) {
  
  fetched_cash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.WithdrawResult.fetched_cash)
}
 void WithdrawResult::set_fetched_cash(const char* value) {
  
  fetched_cash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.WithdrawResult.fetched_cash)
}
 void WithdrawResult::set_fetched_cash(const char* value, size_t size) {
  
  fetched_cash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.WithdrawResult.fetched_cash)
}
 ::std::string* WithdrawResult::mutable_fetched_cash() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.WithdrawResult.fetched_cash)
  return fetched_cash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* WithdrawResult::release_fetched_cash() {
  // @@protoc_insertion_point(field_release:com.adv.msg.WithdrawResult.fetched_cash)
  
  return fetched_cash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WithdrawResult::set_allocated_fetched_cash(::std::string* fetched_cash) {
  if (fetched_cash != NULL) {
    
  } else {
    
  }
  fetched_cash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fetched_cash);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.WithdrawResult.fetched_cash)
}

// optional int32 transid = 32;
void WithdrawResult::clear_transid() {
  transid_ = 0;
}
 ::google::protobuf::int32 WithdrawResult::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.WithdrawResult.transid)
  return transid_;
}
 void WithdrawResult::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.WithdrawResult.transid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MysqlRequest::kSqlidFieldNumber;
const int MysqlRequest::kSqlFieldNumber;
const int MysqlRequest::kIsrequestfieldFieldNumber;
const int MysqlRequest::kLimitFieldNumber;
const int MysqlRequest::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MysqlRequest::MysqlRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.adv.msg.MysqlRequest)
}

void MysqlRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MysqlRequest::MysqlRequest(const MysqlRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.adv.msg.MysqlRequest)
}

void MysqlRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sqlid_ = 0;
  sql_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isrequestfield_ = 0;
  limit_ = 0;
  timeout_ = 0;
}

MysqlRequest::~MysqlRequest() {
  // @@protoc_insertion_point(destructor:com.adv.msg.MysqlRequest)
  SharedDtor();
}

void MysqlRequest::SharedDtor() {
  sql_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MysqlRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MysqlRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MysqlRequest_descriptor_;
}

const MysqlRequest& MysqlRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_adv_5fprotocol_2eproto();
  return *default_instance_;
}

MysqlRequest* MysqlRequest::default_instance_ = NULL;

MysqlRequest* MysqlRequest::New(::google::protobuf::Arena* arena) const {
  MysqlRequest* n = new MysqlRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MysqlRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:com.adv.msg.MysqlRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MysqlRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MysqlRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(sqlid_, timeout_);
  sql_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool MysqlRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.adv.msg.MysqlRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 sqlid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sqlid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sql;
        break;
      }

      // optional string sql = 2;
      case 2: {
        if (tag == 18) {
         parse_sql:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sql()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sql().data(), this->sql().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.MysqlRequest.sql"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_isrequestfield;
        break;
      }

      // optional int32 isrequestfield = 3;
      case 3: {
        if (tag == 24) {
         parse_isrequestfield:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isrequestfield_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_limit;
        break;
      }

      // optional int32 limit = 4;
      case 4: {
        if (tag == 32) {
         parse_limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &limit_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_timeout;
        break;
      }

      // optional int32 timeout = 5;
      case 5: {
        if (tag == 40) {
         parse_timeout:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timeout_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.adv.msg.MysqlRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.adv.msg.MysqlRequest)
  return false;
#undef DO_
}

void MysqlRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.adv.msg.MysqlRequest)
  // optional int32 sqlid = 1;
  if (this->sqlid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sqlid(), output);
  }

  // optional string sql = 2;
  if (this->sql().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sql().data(), this->sql().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.MysqlRequest.sql");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sql(), output);
  }

  // optional int32 isrequestfield = 3;
  if (this->isrequestfield() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->isrequestfield(), output);
  }

  // optional int32 limit = 4;
  if (this->limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->limit(), output);
  }

  // optional int32 timeout = 5;
  if (this->timeout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->timeout(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.adv.msg.MysqlRequest)
}

::google::protobuf::uint8* MysqlRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.adv.msg.MysqlRequest)
  // optional int32 sqlid = 1;
  if (this->sqlid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sqlid(), target);
  }

  // optional string sql = 2;
  if (this->sql().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sql().data(), this->sql().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.MysqlRequest.sql");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sql(), target);
  }

  // optional int32 isrequestfield = 3;
  if (this->isrequestfield() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->isrequestfield(), target);
  }

  // optional int32 limit = 4;
  if (this->limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->limit(), target);
  }

  // optional int32 timeout = 5;
  if (this->timeout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->timeout(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.adv.msg.MysqlRequest)
  return target;
}

int MysqlRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:com.adv.msg.MysqlRequest)
  int total_size = 0;

  // optional int32 sqlid = 1;
  if (this->sqlid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sqlid());
  }

  // optional string sql = 2;
  if (this->sql().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sql());
  }

  // optional int32 isrequestfield = 3;
  if (this->isrequestfield() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->isrequestfield());
  }

  // optional int32 limit = 4;
  if (this->limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->limit());
  }

  // optional int32 timeout = 5;
  if (this->timeout() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->timeout());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MysqlRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.adv.msg.MysqlRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MysqlRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MysqlRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.adv.msg.MysqlRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.adv.msg.MysqlRequest)
    MergeFrom(*source);
  }
}

void MysqlRequest::MergeFrom(const MysqlRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.adv.msg.MysqlRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.sqlid() != 0) {
    set_sqlid(from.sqlid());
  }
  if (from.sql().size() > 0) {

    sql_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sql_);
  }
  if (from.isrequestfield() != 0) {
    set_isrequestfield(from.isrequestfield());
  }
  if (from.limit() != 0) {
    set_limit(from.limit());
  }
  if (from.timeout() != 0) {
    set_timeout(from.timeout());
  }
}

void MysqlRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.adv.msg.MysqlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MysqlRequest::CopyFrom(const MysqlRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.adv.msg.MysqlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MysqlRequest::IsInitialized() const {

  return true;
}

void MysqlRequest::Swap(MysqlRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MysqlRequest::InternalSwap(MysqlRequest* other) {
  std::swap(sqlid_, other->sqlid_);
  sql_.Swap(&other->sql_);
  std::swap(isrequestfield_, other->isrequestfield_);
  std::swap(limit_, other->limit_);
  std::swap(timeout_, other->timeout_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MysqlRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MysqlRequest_descriptor_;
  metadata.reflection = MysqlRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MysqlRequest

// optional int32 sqlid = 1;
void MysqlRequest::clear_sqlid() {
  sqlid_ = 0;
}
 ::google::protobuf::int32 MysqlRequest::sqlid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.MysqlRequest.sqlid)
  return sqlid_;
}
 void MysqlRequest::set_sqlid(::google::protobuf::int32 value) {
  
  sqlid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.MysqlRequest.sqlid)
}

// optional string sql = 2;
void MysqlRequest::clear_sql() {
  sql_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MysqlRequest::sql() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.MysqlRequest.sql)
  return sql_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MysqlRequest::set_sql(const ::std::string& value) {
  
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.MysqlRequest.sql)
}
 void MysqlRequest::set_sql(const char* value) {
  
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.MysqlRequest.sql)
}
 void MysqlRequest::set_sql(const char* value, size_t size) {
  
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.MysqlRequest.sql)
}
 ::std::string* MysqlRequest::mutable_sql() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.MysqlRequest.sql)
  return sql_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MysqlRequest::release_sql() {
  // @@protoc_insertion_point(field_release:com.adv.msg.MysqlRequest.sql)
  
  return sql_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MysqlRequest::set_allocated_sql(::std::string* sql) {
  if (sql != NULL) {
    
  } else {
    
  }
  sql_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sql);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.MysqlRequest.sql)
}

// optional int32 isrequestfield = 3;
void MysqlRequest::clear_isrequestfield() {
  isrequestfield_ = 0;
}
 ::google::protobuf::int32 MysqlRequest::isrequestfield() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.MysqlRequest.isrequestfield)
  return isrequestfield_;
}
 void MysqlRequest::set_isrequestfield(::google::protobuf::int32 value) {
  
  isrequestfield_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.MysqlRequest.isrequestfield)
}

// optional int32 limit = 4;
void MysqlRequest::clear_limit() {
  limit_ = 0;
}
 ::google::protobuf::int32 MysqlRequest::limit() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.MysqlRequest.limit)
  return limit_;
}
 void MysqlRequest::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.MysqlRequest.limit)
}

// optional int32 timeout = 5;
void MysqlRequest::clear_timeout() {
  timeout_ = 0;
}
 ::google::protobuf::int32 MysqlRequest::timeout() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.MysqlRequest.timeout)
  return timeout_;
}
 void MysqlRequest::set_timeout(::google::protobuf::int32 value) {
  
  timeout_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.MysqlRequest.timeout)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MysqlResult::kRetbaseFieldNumber;
const int MysqlResult::kAffectedrowsFieldNumber;
const int MysqlResult::kInsertidFieldNumber;
const int MysqlResult::kRowsFieldNumber;
const int MysqlResult::kSqlidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MysqlResult::MysqlResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.adv.msg.MysqlResult)
}

void MysqlResult::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  retbase_ = const_cast< ::com::adv::msg::RetBase*>(&::com::adv::msg::RetBase::default_instance());
}

MysqlResult::MysqlResult(const MysqlResult& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.adv.msg.MysqlResult)
}

void MysqlResult::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retbase_ = NULL;
  affectedrows_ = 0;
  insertid_ = 0;
  sqlid_ = 0;
}

MysqlResult::~MysqlResult() {
  // @@protoc_insertion_point(destructor:com.adv.msg.MysqlResult)
  SharedDtor();
}

void MysqlResult::SharedDtor() {
  if (this != default_instance_) {
    delete retbase_;
  }
}

void MysqlResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MysqlResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MysqlResult_descriptor_;
}

const MysqlResult& MysqlResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_adv_5fprotocol_2eproto();
  return *default_instance_;
}

MysqlResult* MysqlResult::default_instance_ = NULL;

MysqlResult* MysqlResult::New(::google::protobuf::Arena* arena) const {
  MysqlResult* n = new MysqlResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MysqlResult::Clear() {
// @@protoc_insertion_point(message_clear_start:com.adv.msg.MysqlResult)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MysqlResult, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MysqlResult*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(affectedrows_, insertid_);
  if (GetArenaNoVirtual() == NULL && retbase_ != NULL) delete retbase_;
  retbase_ = NULL;
  sqlid_ = 0;

#undef ZR_HELPER_
#undef ZR_

  rows_.Clear();
}

bool MysqlResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.adv.msg.MysqlResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.adv.msg.RetBase retbase = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_retbase()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_affectedrows;
        break;
      }

      // optional int32 affectedrows = 2;
      case 2: {
        if (tag == 16) {
         parse_affectedrows:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &affectedrows_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_insertid;
        break;
      }

      // optional int32 insertid = 3;
      case 3: {
        if (tag == 24) {
         parse_insertid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &insertid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_rows;
        break;
      }

      // repeated .com.adv.msg.PRow rows = 4;
      case 4: {
        if (tag == 34) {
         parse_rows:
          DO_(input->IncrementRecursionDepth());
         parse_loop_rows:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_rows()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_rows;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(40)) goto parse_sqlid;
        break;
      }

      // optional int32 sqlid = 5;
      case 5: {
        if (tag == 40) {
         parse_sqlid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sqlid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.adv.msg.MysqlResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.adv.msg.MysqlResult)
  return false;
#undef DO_
}

void MysqlResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.adv.msg.MysqlResult)
  // optional .com.adv.msg.RetBase retbase = 1;
  if (this->has_retbase()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->retbase_, output);
  }

  // optional int32 affectedrows = 2;
  if (this->affectedrows() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->affectedrows(), output);
  }

  // optional int32 insertid = 3;
  if (this->insertid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->insertid(), output);
  }

  // repeated .com.adv.msg.PRow rows = 4;
  for (unsigned int i = 0, n = this->rows_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->rows(i), output);
  }

  // optional int32 sqlid = 5;
  if (this->sqlid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->sqlid(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.adv.msg.MysqlResult)
}

::google::protobuf::uint8* MysqlResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.adv.msg.MysqlResult)
  // optional .com.adv.msg.RetBase retbase = 1;
  if (this->has_retbase()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->retbase_, false, target);
  }

  // optional int32 affectedrows = 2;
  if (this->affectedrows() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->affectedrows(), target);
  }

  // optional int32 insertid = 3;
  if (this->insertid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->insertid(), target);
  }

  // repeated .com.adv.msg.PRow rows = 4;
  for (unsigned int i = 0, n = this->rows_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->rows(i), false, target);
  }

  // optional int32 sqlid = 5;
  if (this->sqlid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->sqlid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.adv.msg.MysqlResult)
  return target;
}

int MysqlResult::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:com.adv.msg.MysqlResult)
  int total_size = 0;

  // optional .com.adv.msg.RetBase retbase = 1;
  if (this->has_retbase()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->retbase_);
  }

  // optional int32 affectedrows = 2;
  if (this->affectedrows() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->affectedrows());
  }

  // optional int32 insertid = 3;
  if (this->insertid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->insertid());
  }

  // optional int32 sqlid = 5;
  if (this->sqlid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sqlid());
  }

  // repeated .com.adv.msg.PRow rows = 4;
  total_size += 1 * this->rows_size();
  for (int i = 0; i < this->rows_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rows(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MysqlResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.adv.msg.MysqlResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MysqlResult* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MysqlResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.adv.msg.MysqlResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.adv.msg.MysqlResult)
    MergeFrom(*source);
  }
}

void MysqlResult::MergeFrom(const MysqlResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.adv.msg.MysqlResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  rows_.MergeFrom(from.rows_);
  if (from.has_retbase()) {
    mutable_retbase()->::com::adv::msg::RetBase::MergeFrom(from.retbase());
  }
  if (from.affectedrows() != 0) {
    set_affectedrows(from.affectedrows());
  }
  if (from.insertid() != 0) {
    set_insertid(from.insertid());
  }
  if (from.sqlid() != 0) {
    set_sqlid(from.sqlid());
  }
}

void MysqlResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.adv.msg.MysqlResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MysqlResult::CopyFrom(const MysqlResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.adv.msg.MysqlResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MysqlResult::IsInitialized() const {

  return true;
}

void MysqlResult::Swap(MysqlResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MysqlResult::InternalSwap(MysqlResult* other) {
  std::swap(retbase_, other->retbase_);
  std::swap(affectedrows_, other->affectedrows_);
  std::swap(insertid_, other->insertid_);
  rows_.UnsafeArenaSwap(&other->rows_);
  std::swap(sqlid_, other->sqlid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MysqlResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MysqlResult_descriptor_;
  metadata.reflection = MysqlResult_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MysqlResult

// optional .com.adv.msg.RetBase retbase = 1;
bool MysqlResult::has_retbase() const {
  return !_is_default_instance_ && retbase_ != NULL;
}
void MysqlResult::clear_retbase() {
  if (GetArenaNoVirtual() == NULL && retbase_ != NULL) delete retbase_;
  retbase_ = NULL;
}
const ::com::adv::msg::RetBase& MysqlResult::retbase() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.MysqlResult.retbase)
  return retbase_ != NULL ? *retbase_ : *default_instance_->retbase_;
}
::com::adv::msg::RetBase* MysqlResult::mutable_retbase() {
  
  if (retbase_ == NULL) {
    retbase_ = new ::com::adv::msg::RetBase;
  }
  // @@protoc_insertion_point(field_mutable:com.adv.msg.MysqlResult.retbase)
  return retbase_;
}
::com::adv::msg::RetBase* MysqlResult::release_retbase() {
  // @@protoc_insertion_point(field_release:com.adv.msg.MysqlResult.retbase)
  
  ::com::adv::msg::RetBase* temp = retbase_;
  retbase_ = NULL;
  return temp;
}
void MysqlResult::set_allocated_retbase(::com::adv::msg::RetBase* retbase) {
  delete retbase_;
  retbase_ = retbase;
  if (retbase) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.MysqlResult.retbase)
}

// optional int32 affectedrows = 2;
void MysqlResult::clear_affectedrows() {
  affectedrows_ = 0;
}
 ::google::protobuf::int32 MysqlResult::affectedrows() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.MysqlResult.affectedrows)
  return affectedrows_;
}
 void MysqlResult::set_affectedrows(::google::protobuf::int32 value) {
  
  affectedrows_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.MysqlResult.affectedrows)
}

// optional int32 insertid = 3;
void MysqlResult::clear_insertid() {
  insertid_ = 0;
}
 ::google::protobuf::int32 MysqlResult::insertid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.MysqlResult.insertid)
  return insertid_;
}
 void MysqlResult::set_insertid(::google::protobuf::int32 value) {
  
  insertid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.MysqlResult.insertid)
}

// repeated .com.adv.msg.PRow rows = 4;
int MysqlResult::rows_size() const {
  return rows_.size();
}
void MysqlResult::clear_rows() {
  rows_.Clear();
}
const ::com::adv::msg::PRow& MysqlResult::rows(int index) const {
  // @@protoc_insertion_point(field_get:com.adv.msg.MysqlResult.rows)
  return rows_.Get(index);
}
::com::adv::msg::PRow* MysqlResult::mutable_rows(int index) {
  // @@protoc_insertion_point(field_mutable:com.adv.msg.MysqlResult.rows)
  return rows_.Mutable(index);
}
::com::adv::msg::PRow* MysqlResult::add_rows() {
  // @@protoc_insertion_point(field_add:com.adv.msg.MysqlResult.rows)
  return rows_.Add();
}
::google::protobuf::RepeatedPtrField< ::com::adv::msg::PRow >*
MysqlResult::mutable_rows() {
  // @@protoc_insertion_point(field_mutable_list:com.adv.msg.MysqlResult.rows)
  return &rows_;
}
const ::google::protobuf::RepeatedPtrField< ::com::adv::msg::PRow >&
MysqlResult::rows() const {
  // @@protoc_insertion_point(field_list:com.adv.msg.MysqlResult.rows)
  return rows_;
}

// optional int32 sqlid = 5;
void MysqlResult::clear_sqlid() {
  sqlid_ = 0;
}
 ::google::protobuf::int32 MysqlResult::sqlid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.MysqlResult.sqlid)
  return sqlid_;
}
 void MysqlResult::set_sqlid(::google::protobuf::int32 value) {
  
  sqlid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.MysqlResult.sqlid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RedispRequest::kSqlidFieldNumber;
const int RedispRequest::kKeyFieldNumber;
const int RedispRequest::kParamFieldNumber;
const int RedispRequest::kLimitFieldNumber;
const int RedispRequest::kTimeoutFieldNumber;
const int RedispRequest::kTransidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RedispRequest::RedispRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.adv.msg.RedispRequest)
}

void RedispRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RedispRequest::RedispRequest(const RedispRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.adv.msg.RedispRequest)
}

void RedispRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sqlid_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param_ = 0;
  limit_ = 0;
  timeout_ = 0;
  transid_ = 0;
}

RedispRequest::~RedispRequest() {
  // @@protoc_insertion_point(destructor:com.adv.msg.RedispRequest)
  SharedDtor();
}

void RedispRequest::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void RedispRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RedispRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RedispRequest_descriptor_;
}

const RedispRequest& RedispRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_adv_5fprotocol_2eproto();
  return *default_instance_;
}

RedispRequest* RedispRequest::default_instance_ = NULL;

RedispRequest* RedispRequest::New(::google::protobuf::Arena* arena) const {
  RedispRequest* n = new RedispRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RedispRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:com.adv.msg.RedispRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RedispRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RedispRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(sqlid_, transid_);
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool RedispRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.adv.msg.RedispRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 sqlid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sqlid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_key;
        break;
      }

      // optional string key = 2;
      case 2: {
        if (tag == 18) {
         parse_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.RedispRequest.key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_param;
        break;
      }

      // optional int32 param = 3;
      case 3: {
        if (tag == 24) {
         parse_param:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &param_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_limit;
        break;
      }

      // optional int32 limit = 4;
      case 4: {
        if (tag == 32) {
         parse_limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &limit_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_timeout;
        break;
      }

      // optional int32 timeout = 5;
      case 5: {
        if (tag == 40) {
         parse_timeout:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timeout_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(256)) goto parse_transid;
        break;
      }

      // optional int32 transid = 32;
      case 32: {
        if (tag == 256) {
         parse_transid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.adv.msg.RedispRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.adv.msg.RedispRequest)
  return false;
#undef DO_
}

void RedispRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.adv.msg.RedispRequest)
  // optional int32 sqlid = 1;
  if (this->sqlid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sqlid(), output);
  }

  // optional string key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.RedispRequest.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->key(), output);
  }

  // optional int32 param = 3;
  if (this->param() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->param(), output);
  }

  // optional int32 limit = 4;
  if (this->limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->limit(), output);
  }

  // optional int32 timeout = 5;
  if (this->timeout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->timeout(), output);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->transid(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.adv.msg.RedispRequest)
}

::google::protobuf::uint8* RedispRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.adv.msg.RedispRequest)
  // optional int32 sqlid = 1;
  if (this->sqlid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sqlid(), target);
  }

  // optional string key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.RedispRequest.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->key(), target);
  }

  // optional int32 param = 3;
  if (this->param() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->param(), target);
  }

  // optional int32 limit = 4;
  if (this->limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->limit(), target);
  }

  // optional int32 timeout = 5;
  if (this->timeout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->timeout(), target);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->transid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.adv.msg.RedispRequest)
  return target;
}

int RedispRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:com.adv.msg.RedispRequest)
  int total_size = 0;

  // optional int32 sqlid = 1;
  if (this->sqlid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sqlid());
  }

  // optional string key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // optional int32 param = 3;
  if (this->param() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->param());
  }

  // optional int32 limit = 4;
  if (this->limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->limit());
  }

  // optional int32 timeout = 5;
  if (this->timeout() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->timeout());
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->transid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RedispRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.adv.msg.RedispRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RedispRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RedispRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.adv.msg.RedispRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.adv.msg.RedispRequest)
    MergeFrom(*source);
  }
}

void RedispRequest::MergeFrom(const RedispRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.adv.msg.RedispRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.sqlid() != 0) {
    set_sqlid(from.sqlid());
  }
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.param() != 0) {
    set_param(from.param());
  }
  if (from.limit() != 0) {
    set_limit(from.limit());
  }
  if (from.timeout() != 0) {
    set_timeout(from.timeout());
  }
  if (from.transid() != 0) {
    set_transid(from.transid());
  }
}

void RedispRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.adv.msg.RedispRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RedispRequest::CopyFrom(const RedispRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.adv.msg.RedispRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RedispRequest::IsInitialized() const {

  return true;
}

void RedispRequest::Swap(RedispRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RedispRequest::InternalSwap(RedispRequest* other) {
  std::swap(sqlid_, other->sqlid_);
  key_.Swap(&other->key_);
  std::swap(param_, other->param_);
  std::swap(limit_, other->limit_);
  std::swap(timeout_, other->timeout_);
  std::swap(transid_, other->transid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RedispRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RedispRequest_descriptor_;
  metadata.reflection = RedispRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RedispRequest

// optional int32 sqlid = 1;
void RedispRequest::clear_sqlid() {
  sqlid_ = 0;
}
 ::google::protobuf::int32 RedispRequest::sqlid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.RedispRequest.sqlid)
  return sqlid_;
}
 void RedispRequest::set_sqlid(::google::protobuf::int32 value) {
  
  sqlid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.RedispRequest.sqlid)
}

// optional string key = 2;
void RedispRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& RedispRequest::key() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.RedispRequest.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RedispRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.RedispRequest.key)
}
 void RedispRequest::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.RedispRequest.key)
}
 void RedispRequest::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.RedispRequest.key)
}
 ::std::string* RedispRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.RedispRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RedispRequest::release_key() {
  // @@protoc_insertion_point(field_release:com.adv.msg.RedispRequest.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RedispRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.RedispRequest.key)
}

// optional int32 param = 3;
void RedispRequest::clear_param() {
  param_ = 0;
}
 ::google::protobuf::int32 RedispRequest::param() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.RedispRequest.param)
  return param_;
}
 void RedispRequest::set_param(::google::protobuf::int32 value) {
  
  param_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.RedispRequest.param)
}

// optional int32 limit = 4;
void RedispRequest::clear_limit() {
  limit_ = 0;
}
 ::google::protobuf::int32 RedispRequest::limit() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.RedispRequest.limit)
  return limit_;
}
 void RedispRequest::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.RedispRequest.limit)
}

// optional int32 timeout = 5;
void RedispRequest::clear_timeout() {
  timeout_ = 0;
}
 ::google::protobuf::int32 RedispRequest::timeout() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.RedispRequest.timeout)
  return timeout_;
}
 void RedispRequest::set_timeout(::google::protobuf::int32 value) {
  
  timeout_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.RedispRequest.timeout)
}

// optional int32 transid = 32;
void RedispRequest::clear_transid() {
  transid_ = 0;
}
 ::google::protobuf::int32 RedispRequest::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.RedispRequest.transid)
  return transid_;
}
 void RedispRequest::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.RedispRequest.transid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RedispResult::kRetbaseFieldNumber;
const int RedispResult::kAffectedrowsFieldNumber;
const int RedispResult::kInsertidFieldNumber;
const int RedispResult::kRowsFieldNumber;
const int RedispResult::kSqlidFieldNumber;
const int RedispResult::kTransidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RedispResult::RedispResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.adv.msg.RedispResult)
}

void RedispResult::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  retbase_ = const_cast< ::com::adv::msg::RetBase*>(&::com::adv::msg::RetBase::default_instance());
}

RedispResult::RedispResult(const RedispResult& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.adv.msg.RedispResult)
}

void RedispResult::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retbase_ = NULL;
  affectedrows_ = 0;
  insertid_ = 0;
  sqlid_ = 0;
  transid_ = 0;
}

RedispResult::~RedispResult() {
  // @@protoc_insertion_point(destructor:com.adv.msg.RedispResult)
  SharedDtor();
}

void RedispResult::SharedDtor() {
  if (this != default_instance_) {
    delete retbase_;
  }
}

void RedispResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RedispResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RedispResult_descriptor_;
}

const RedispResult& RedispResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_adv_5fprotocol_2eproto();
  return *default_instance_;
}

RedispResult* RedispResult::default_instance_ = NULL;

RedispResult* RedispResult::New(::google::protobuf::Arena* arena) const {
  RedispResult* n = new RedispResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RedispResult::Clear() {
// @@protoc_insertion_point(message_clear_start:com.adv.msg.RedispResult)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RedispResult, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RedispResult*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(affectedrows_, insertid_);
  ZR_(sqlid_, transid_);
  if (GetArenaNoVirtual() == NULL && retbase_ != NULL) delete retbase_;
  retbase_ = NULL;

#undef ZR_HELPER_
#undef ZR_

  rows_.Clear();
}

bool RedispResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.adv.msg.RedispResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.adv.msg.RetBase retbase = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_retbase()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_affectedrows;
        break;
      }

      // optional int32 affectedrows = 2;
      case 2: {
        if (tag == 16) {
         parse_affectedrows:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &affectedrows_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_insertid;
        break;
      }

      // optional int32 insertid = 3;
      case 3: {
        if (tag == 24) {
         parse_insertid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &insertid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_rows;
        break;
      }

      // repeated .com.adv.msg.PRow rows = 4;
      case 4: {
        if (tag == 34) {
         parse_rows:
          DO_(input->IncrementRecursionDepth());
         parse_loop_rows:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_rows()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_rows;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(40)) goto parse_sqlid;
        break;
      }

      // optional int32 sqlid = 5;
      case 5: {
        if (tag == 40) {
         parse_sqlid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sqlid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(256)) goto parse_transid;
        break;
      }

      // optional int32 transid = 32;
      case 32: {
        if (tag == 256) {
         parse_transid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.adv.msg.RedispResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.adv.msg.RedispResult)
  return false;
#undef DO_
}

void RedispResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.adv.msg.RedispResult)
  // optional .com.adv.msg.RetBase retbase = 1;
  if (this->has_retbase()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->retbase_, output);
  }

  // optional int32 affectedrows = 2;
  if (this->affectedrows() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->affectedrows(), output);
  }

  // optional int32 insertid = 3;
  if (this->insertid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->insertid(), output);
  }

  // repeated .com.adv.msg.PRow rows = 4;
  for (unsigned int i = 0, n = this->rows_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->rows(i), output);
  }

  // optional int32 sqlid = 5;
  if (this->sqlid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->sqlid(), output);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->transid(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.adv.msg.RedispResult)
}

::google::protobuf::uint8* RedispResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.adv.msg.RedispResult)
  // optional .com.adv.msg.RetBase retbase = 1;
  if (this->has_retbase()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->retbase_, false, target);
  }

  // optional int32 affectedrows = 2;
  if (this->affectedrows() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->affectedrows(), target);
  }

  // optional int32 insertid = 3;
  if (this->insertid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->insertid(), target);
  }

  // repeated .com.adv.msg.PRow rows = 4;
  for (unsigned int i = 0, n = this->rows_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->rows(i), false, target);
  }

  // optional int32 sqlid = 5;
  if (this->sqlid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->sqlid(), target);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->transid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.adv.msg.RedispResult)
  return target;
}

int RedispResult::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:com.adv.msg.RedispResult)
  int total_size = 0;

  // optional .com.adv.msg.RetBase retbase = 1;
  if (this->has_retbase()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->retbase_);
  }

  // optional int32 affectedrows = 2;
  if (this->affectedrows() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->affectedrows());
  }

  // optional int32 insertid = 3;
  if (this->insertid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->insertid());
  }

  // optional int32 sqlid = 5;
  if (this->sqlid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sqlid());
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->transid());
  }

  // repeated .com.adv.msg.PRow rows = 4;
  total_size += 1 * this->rows_size();
  for (int i = 0; i < this->rows_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rows(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RedispResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.adv.msg.RedispResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RedispResult* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RedispResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.adv.msg.RedispResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.adv.msg.RedispResult)
    MergeFrom(*source);
  }
}

void RedispResult::MergeFrom(const RedispResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.adv.msg.RedispResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  rows_.MergeFrom(from.rows_);
  if (from.has_retbase()) {
    mutable_retbase()->::com::adv::msg::RetBase::MergeFrom(from.retbase());
  }
  if (from.affectedrows() != 0) {
    set_affectedrows(from.affectedrows());
  }
  if (from.insertid() != 0) {
    set_insertid(from.insertid());
  }
  if (from.sqlid() != 0) {
    set_sqlid(from.sqlid());
  }
  if (from.transid() != 0) {
    set_transid(from.transid());
  }
}

void RedispResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.adv.msg.RedispResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RedispResult::CopyFrom(const RedispResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.adv.msg.RedispResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RedispResult::IsInitialized() const {

  return true;
}

void RedispResult::Swap(RedispResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RedispResult::InternalSwap(RedispResult* other) {
  std::swap(retbase_, other->retbase_);
  std::swap(affectedrows_, other->affectedrows_);
  std::swap(insertid_, other->insertid_);
  rows_.UnsafeArenaSwap(&other->rows_);
  std::swap(sqlid_, other->sqlid_);
  std::swap(transid_, other->transid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RedispResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RedispResult_descriptor_;
  metadata.reflection = RedispResult_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RedispResult

// optional .com.adv.msg.RetBase retbase = 1;
bool RedispResult::has_retbase() const {
  return !_is_default_instance_ && retbase_ != NULL;
}
void RedispResult::clear_retbase() {
  if (GetArenaNoVirtual() == NULL && retbase_ != NULL) delete retbase_;
  retbase_ = NULL;
}
const ::com::adv::msg::RetBase& RedispResult::retbase() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.RedispResult.retbase)
  return retbase_ != NULL ? *retbase_ : *default_instance_->retbase_;
}
::com::adv::msg::RetBase* RedispResult::mutable_retbase() {
  
  if (retbase_ == NULL) {
    retbase_ = new ::com::adv::msg::RetBase;
  }
  // @@protoc_insertion_point(field_mutable:com.adv.msg.RedispResult.retbase)
  return retbase_;
}
::com::adv::msg::RetBase* RedispResult::release_retbase() {
  // @@protoc_insertion_point(field_release:com.adv.msg.RedispResult.retbase)
  
  ::com::adv::msg::RetBase* temp = retbase_;
  retbase_ = NULL;
  return temp;
}
void RedispResult::set_allocated_retbase(::com::adv::msg::RetBase* retbase) {
  delete retbase_;
  retbase_ = retbase;
  if (retbase) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.RedispResult.retbase)
}

// optional int32 affectedrows = 2;
void RedispResult::clear_affectedrows() {
  affectedrows_ = 0;
}
 ::google::protobuf::int32 RedispResult::affectedrows() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.RedispResult.affectedrows)
  return affectedrows_;
}
 void RedispResult::set_affectedrows(::google::protobuf::int32 value) {
  
  affectedrows_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.RedispResult.affectedrows)
}

// optional int32 insertid = 3;
void RedispResult::clear_insertid() {
  insertid_ = 0;
}
 ::google::protobuf::int32 RedispResult::insertid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.RedispResult.insertid)
  return insertid_;
}
 void RedispResult::set_insertid(::google::protobuf::int32 value) {
  
  insertid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.RedispResult.insertid)
}

// repeated .com.adv.msg.PRow rows = 4;
int RedispResult::rows_size() const {
  return rows_.size();
}
void RedispResult::clear_rows() {
  rows_.Clear();
}
const ::com::adv::msg::PRow& RedispResult::rows(int index) const {
  // @@protoc_insertion_point(field_get:com.adv.msg.RedispResult.rows)
  return rows_.Get(index);
}
::com::adv::msg::PRow* RedispResult::mutable_rows(int index) {
  // @@protoc_insertion_point(field_mutable:com.adv.msg.RedispResult.rows)
  return rows_.Mutable(index);
}
::com::adv::msg::PRow* RedispResult::add_rows() {
  // @@protoc_insertion_point(field_add:com.adv.msg.RedispResult.rows)
  return rows_.Add();
}
::google::protobuf::RepeatedPtrField< ::com::adv::msg::PRow >*
RedispResult::mutable_rows() {
  // @@protoc_insertion_point(field_mutable_list:com.adv.msg.RedispResult.rows)
  return &rows_;
}
const ::google::protobuf::RepeatedPtrField< ::com::adv::msg::PRow >&
RedispResult::rows() const {
  // @@protoc_insertion_point(field_list:com.adv.msg.RedispResult.rows)
  return rows_;
}

// optional int32 sqlid = 5;
void RedispResult::clear_sqlid() {
  sqlid_ = 0;
}
 ::google::protobuf::int32 RedispResult::sqlid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.RedispResult.sqlid)
  return sqlid_;
}
 void RedispResult::set_sqlid(::google::protobuf::int32 value) {
  
  sqlid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.RedispResult.sqlid)
}

// optional int32 transid = 32;
void RedispResult::clear_transid() {
  transid_ = 0;
}
 ::google::protobuf::int32 RedispResult::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.RedispResult.transid)
  return transid_;
}
 void RedispResult::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.RedispResult.transid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InnerCommonMsg::kItemsFieldNumber;
const int InnerCommonMsg::kTransferFieldNumber;
const int InnerCommonMsg::kTimeFieldNumber;
const int InnerCommonMsg::kTransidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InnerCommonMsg::InnerCommonMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.adv.msg.InnerCommonMsg)
}

void InnerCommonMsg::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

InnerCommonMsg::InnerCommonMsg(const InnerCommonMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.adv.msg.InnerCommonMsg)
}

void InnerCommonMsg::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  transfer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = 0;
  transid_ = 0;
}

InnerCommonMsg::~InnerCommonMsg() {
  // @@protoc_insertion_point(destructor:com.adv.msg.InnerCommonMsg)
  SharedDtor();
}

void InnerCommonMsg::SharedDtor() {
  transfer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void InnerCommonMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InnerCommonMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InnerCommonMsg_descriptor_;
}

const InnerCommonMsg& InnerCommonMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_adv_5fprotocol_2eproto();
  return *default_instance_;
}

InnerCommonMsg* InnerCommonMsg::default_instance_ = NULL;

InnerCommonMsg* InnerCommonMsg::New(::google::protobuf::Arena* arena) const {
  InnerCommonMsg* n = new InnerCommonMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InnerCommonMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:com.adv.msg.InnerCommonMsg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(InnerCommonMsg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<InnerCommonMsg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(time_, transid_);
  transfer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  items_.Clear();
}

bool InnerCommonMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.adv.msg.InnerCommonMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.adv.msg.PDataCell items = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_items;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_transfer;
        break;
      }

      // optional string transfer = 2;
      case 2: {
        if (tag == 18) {
         parse_transfer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transfer()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->transfer().data(), this->transfer().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.InnerCommonMsg.transfer"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_time;
        break;
      }

      // optional int32 time = 3;
      case 3: {
        if (tag == 24) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(256)) goto parse_transid;
        break;
      }

      // optional int32 transid = 32;
      case 32: {
        if (tag == 256) {
         parse_transid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.adv.msg.InnerCommonMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.adv.msg.InnerCommonMsg)
  return false;
#undef DO_
}

void InnerCommonMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.adv.msg.InnerCommonMsg)
  // repeated .com.adv.msg.PDataCell items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }

  // optional string transfer = 2;
  if (this->transfer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transfer().data(), this->transfer().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.InnerCommonMsg.transfer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->transfer(), output);
  }

  // optional int32 time = 3;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->time(), output);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->transid(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.adv.msg.InnerCommonMsg)
}

::google::protobuf::uint8* InnerCommonMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.adv.msg.InnerCommonMsg)
  // repeated .com.adv.msg.PDataCell items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->items(i), false, target);
  }

  // optional string transfer = 2;
  if (this->transfer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transfer().data(), this->transfer().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.InnerCommonMsg.transfer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->transfer(), target);
  }

  // optional int32 time = 3;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->time(), target);
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->transid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.adv.msg.InnerCommonMsg)
  return target;
}

int InnerCommonMsg::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:com.adv.msg.InnerCommonMsg)
  int total_size = 0;

  // optional string transfer = 2;
  if (this->transfer().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->transfer());
  }

  // optional int32 time = 3;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->time());
  }

  // optional int32 transid = 32;
  if (this->transid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->transid());
  }

  // repeated .com.adv.msg.PDataCell items = 1;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InnerCommonMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.adv.msg.InnerCommonMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const InnerCommonMsg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const InnerCommonMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.adv.msg.InnerCommonMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.adv.msg.InnerCommonMsg)
    MergeFrom(*source);
  }
}

void InnerCommonMsg::MergeFrom(const InnerCommonMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.adv.msg.InnerCommonMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  items_.MergeFrom(from.items_);
  if (from.transfer().size() > 0) {

    transfer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transfer_);
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.transid() != 0) {
    set_transid(from.transid());
  }
}

void InnerCommonMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.adv.msg.InnerCommonMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InnerCommonMsg::CopyFrom(const InnerCommonMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.adv.msg.InnerCommonMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InnerCommonMsg::IsInitialized() const {

  return true;
}

void InnerCommonMsg::Swap(InnerCommonMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InnerCommonMsg::InternalSwap(InnerCommonMsg* other) {
  items_.UnsafeArenaSwap(&other->items_);
  transfer_.Swap(&other->transfer_);
  std::swap(time_, other->time_);
  std::swap(transid_, other->transid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InnerCommonMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InnerCommonMsg_descriptor_;
  metadata.reflection = InnerCommonMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InnerCommonMsg

// repeated .com.adv.msg.PDataCell items = 1;
int InnerCommonMsg::items_size() const {
  return items_.size();
}
void InnerCommonMsg::clear_items() {
  items_.Clear();
}
const ::com::adv::msg::PDataCell& InnerCommonMsg::items(int index) const {
  // @@protoc_insertion_point(field_get:com.adv.msg.InnerCommonMsg.items)
  return items_.Get(index);
}
::com::adv::msg::PDataCell* InnerCommonMsg::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:com.adv.msg.InnerCommonMsg.items)
  return items_.Mutable(index);
}
::com::adv::msg::PDataCell* InnerCommonMsg::add_items() {
  // @@protoc_insertion_point(field_add:com.adv.msg.InnerCommonMsg.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::com::adv::msg::PDataCell >*
InnerCommonMsg::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:com.adv.msg.InnerCommonMsg.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::com::adv::msg::PDataCell >&
InnerCommonMsg::items() const {
  // @@protoc_insertion_point(field_list:com.adv.msg.InnerCommonMsg.items)
  return items_;
}

// optional string transfer = 2;
void InnerCommonMsg::clear_transfer() {
  transfer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& InnerCommonMsg::transfer() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.InnerCommonMsg.transfer)
  return transfer_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InnerCommonMsg::set_transfer(const ::std::string& value) {
  
  transfer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.InnerCommonMsg.transfer)
}
 void InnerCommonMsg::set_transfer(const char* value) {
  
  transfer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.InnerCommonMsg.transfer)
}
 void InnerCommonMsg::set_transfer(const char* value, size_t size) {
  
  transfer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.InnerCommonMsg.transfer)
}
 ::std::string* InnerCommonMsg::mutable_transfer() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.InnerCommonMsg.transfer)
  return transfer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InnerCommonMsg::release_transfer() {
  // @@protoc_insertion_point(field_release:com.adv.msg.InnerCommonMsg.transfer)
  
  return transfer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InnerCommonMsg::set_allocated_transfer(::std::string* transfer) {
  if (transfer != NULL) {
    
  } else {
    
  }
  transfer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), transfer);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.InnerCommonMsg.transfer)
}

// optional int32 time = 3;
void InnerCommonMsg::clear_time() {
  time_ = 0;
}
 ::google::protobuf::int32 InnerCommonMsg::time() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.InnerCommonMsg.time)
  return time_;
}
 void InnerCommonMsg::set_time(::google::protobuf::int32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.InnerCommonMsg.time)
}

// optional int32 transid = 32;
void InnerCommonMsg::clear_transid() {
  transid_ = 0;
}
 ::google::protobuf::int32 InnerCommonMsg::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.InnerCommonMsg.transid)
  return transid_;
}
 void InnerCommonMsg::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.InnerCommonMsg.transid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace msg
}  // namespace adv
}  // namespace com

// @@protoc_insertion_point(global_scope)
