// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: adv_base.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "adv_base.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace adv {
namespace msg {

namespace {

const ::google::protobuf::Descriptor* RetBase_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RetBase_reflection_ = NULL;
const ::google::protobuf::Descriptor* TaskInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TaskInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* PField_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PField_reflection_ = NULL;
const ::google::protobuf::Descriptor* PRow_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PRow_reflection_ = NULL;
const ::google::protobuf::Descriptor* PDataCell_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PDataCell_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_adv_5fbase_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_adv_5fbase_2eproto() {
  protobuf_AddDesc_adv_5fbase_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "adv_base.proto");
  GOOGLE_CHECK(file != NULL);
  RetBase_descriptor_ = file->message_type(0);
  static const int RetBase_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetBase, retcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetBase, retmsg_),
  };
  RetBase_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RetBase_descriptor_,
      RetBase::default_instance_,
      RetBase_offsets_,
      -1,
      -1,
      -1,
      sizeof(RetBase),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetBase, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetBase, _is_default_instance_));
  TaskInfo_descriptor_ = file->message_type(1);
  static const int TaskInfo_offsets_[17] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskInfo, taskid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskInfo, tasktype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskInfo, taskname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskInfo, tasklink_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskInfo, taskdesc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskInfo, tasksize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskInfo, taskprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskInfo, taskptstep_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskInfo, taskpcstep_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskInfo, taskpublisher_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskInfo, tasktotalnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskInfo, taskusednum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskInfo, taskstime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskInfo, tasketime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskInfo, taskstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskInfo, taskicon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskInfo, taskpkgname_),
  };
  TaskInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TaskInfo_descriptor_,
      TaskInfo::default_instance_,
      TaskInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(TaskInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskInfo, _is_default_instance_));
  PField_descriptor_ = file->message_type(2);
  static const int PField_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PField, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PField, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PField, valuetype_),
  };
  PField_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PField_descriptor_,
      PField::default_instance_,
      PField_offsets_,
      -1,
      -1,
      -1,
      sizeof(PField),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PField, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PField, _is_default_instance_));
  PRow_descriptor_ = file->message_type(3);
  static const int PRow_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRow, fieldnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRow, field_),
  };
  PRow_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PRow_descriptor_,
      PRow::default_instance_,
      PRow_offsets_,
      -1,
      -1,
      -1,
      sizeof(PRow),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRow, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRow, _is_default_instance_));
  PDataCell_descriptor_ = file->message_type(4);
  static const int PDataCell_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PDataCell, tag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PDataCell, str_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PDataCell, i32_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PDataCell, i64_value_),
  };
  PDataCell_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PDataCell_descriptor_,
      PDataCell::default_instance_,
      PDataCell_offsets_,
      -1,
      -1,
      -1,
      sizeof(PDataCell),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PDataCell, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PDataCell, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_adv_5fbase_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RetBase_descriptor_, &RetBase::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TaskInfo_descriptor_, &TaskInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PField_descriptor_, &PField::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PRow_descriptor_, &PRow::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PDataCell_descriptor_, &PDataCell::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_adv_5fbase_2eproto() {
  delete RetBase::default_instance_;
  delete RetBase_reflection_;
  delete TaskInfo::default_instance_;
  delete TaskInfo_reflection_;
  delete PField::default_instance_;
  delete PField_reflection_;
  delete PRow::default_instance_;
  delete PRow_reflection_;
  delete PDataCell::default_instance_;
  delete PDataCell_reflection_;
}

void protobuf_AddDesc_adv_5fbase_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_adv_5fbase_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016adv_base.proto\022\013com.adv.msg\"*\n\007RetBase"
    "\022\017\n\007retcode\030\001 \001(\005\022\016\n\006retmsg\030\002 \001(\t\"\322\002\n\010Ta"
    "skInfo\022\016\n\006taskid\030\001 \001(\003\022\020\n\010tasktype\030\002 \001(\005"
    "\022\020\n\010taskname\030\003 \001(\t\022\020\n\010tasklink\030\004 \001(\t\022\020\n\010"
    "taskdesc\030\005 \001(\t\022\020\n\010tasksize\030\006 \001(\005\022\021\n\ttask"
    "price\030\007 \001(\t\022\022\n\ntaskptstep\030\010 \001(\005\022\022\n\ntaskp"
    "cstep\030\t \001(\005\022\025\n\rtaskpublisher\030\n \001(\t\022\024\n\014ta"
    "sktotalnum\030\013 \001(\005\022\023\n\013taskusednum\030\014 \001(\005\022\021\n"
    "\ttaskstime\030\r \001(\003\022\021\n\ttasketime\030\016 \001(\003\022\022\n\nt"
    "askstatus\030\017 \001(\005\022\020\n\010taskicon\030\020 \001(\t\022\023\n\013tas"
    "kpkgname\030\021 \001(\t\"8\n\006PField\022\014\n\004name\030\001 \001(\t\022\r"
    "\n\005value\030\002 \001(\t\022\021\n\tvaluetype\030\003 \001(\005\"<\n\004PRow"
    "\022\020\n\010fieldnum\030\001 \001(\005\022\"\n\005field\030\002 \003(\0132\023.com."
    "adv.msg.PField\"Q\n\tPDataCell\022\013\n\003tag\030\001 \001(\t"
    "\022\021\n\tstr_value\030\002 \001(\t\022\021\n\ti32_value\030\003 \001(\005\022\021"
    "\n\ti64_value\030\004 \001(\003b\006proto3", 625);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "adv_base.proto", &protobuf_RegisterTypes);
  RetBase::default_instance_ = new RetBase();
  TaskInfo::default_instance_ = new TaskInfo();
  PField::default_instance_ = new PField();
  PRow::default_instance_ = new PRow();
  PDataCell::default_instance_ = new PDataCell();
  RetBase::default_instance_->InitAsDefaultInstance();
  TaskInfo::default_instance_->InitAsDefaultInstance();
  PField::default_instance_->InitAsDefaultInstance();
  PRow::default_instance_->InitAsDefaultInstance();
  PDataCell::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_adv_5fbase_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_adv_5fbase_2eproto {
  StaticDescriptorInitializer_adv_5fbase_2eproto() {
    protobuf_AddDesc_adv_5fbase_2eproto();
  }
} static_descriptor_initializer_adv_5fbase_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RetBase::kRetcodeFieldNumber;
const int RetBase::kRetmsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RetBase::RetBase()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.adv.msg.RetBase)
}

void RetBase::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RetBase::RetBase(const RetBase& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.adv.msg.RetBase)
}

void RetBase::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  retcode_ = 0;
  retmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RetBase::~RetBase() {
  // @@protoc_insertion_point(destructor:com.adv.msg.RetBase)
  SharedDtor();
}

void RetBase::SharedDtor() {
  retmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void RetBase::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RetBase::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RetBase_descriptor_;
}

const RetBase& RetBase::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_adv_5fbase_2eproto();
  return *default_instance_;
}

RetBase* RetBase::default_instance_ = NULL;

RetBase* RetBase::New(::google::protobuf::Arena* arena) const {
  RetBase* n = new RetBase;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RetBase::Clear() {
// @@protoc_insertion_point(message_clear_start:com.adv.msg.RetBase)
  retcode_ = 0;
  retmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool RetBase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.adv.msg.RetBase)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 retcode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_retmsg;
        break;
      }

      // optional string retmsg = 2;
      case 2: {
        if (tag == 18) {
         parse_retmsg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->retmsg().data(), this->retmsg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.RetBase.retmsg"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.adv.msg.RetBase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.adv.msg.RetBase)
  return false;
#undef DO_
}

void RetBase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.adv.msg.RetBase)
  // optional int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // optional string retmsg = 2;
  if (this->retmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->retmsg().data(), this->retmsg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.RetBase.retmsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->retmsg(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.adv.msg.RetBase)
}

::google::protobuf::uint8* RetBase::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.adv.msg.RetBase)
  // optional int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // optional string retmsg = 2;
  if (this->retmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->retmsg().data(), this->retmsg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.RetBase.retmsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->retmsg(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.adv.msg.RetBase)
  return target;
}

int RetBase::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:com.adv.msg.RetBase)
  int total_size = 0;

  // optional int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // optional string retmsg = 2;
  if (this->retmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->retmsg());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RetBase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.adv.msg.RetBase)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RetBase* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RetBase>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.adv.msg.RetBase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.adv.msg.RetBase)
    MergeFrom(*source);
  }
}

void RetBase::MergeFrom(const RetBase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.adv.msg.RetBase)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.retmsg().size() > 0) {

    retmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retmsg_);
  }
}

void RetBase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.adv.msg.RetBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RetBase::CopyFrom(const RetBase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.adv.msg.RetBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RetBase::IsInitialized() const {

  return true;
}

void RetBase::Swap(RetBase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RetBase::InternalSwap(RetBase* other) {
  std::swap(retcode_, other->retcode_);
  retmsg_.Swap(&other->retmsg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RetBase::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RetBase_descriptor_;
  metadata.reflection = RetBase_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RetBase

// optional int32 retcode = 1;
void RetBase::clear_retcode() {
  retcode_ = 0;
}
 ::google::protobuf::int32 RetBase::retcode() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.RetBase.retcode)
  return retcode_;
}
 void RetBase::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.RetBase.retcode)
}

// optional string retmsg = 2;
void RetBase::clear_retmsg() {
  retmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& RetBase::retmsg() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.RetBase.retmsg)
  return retmsg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RetBase::set_retmsg(const ::std::string& value) {
  
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.RetBase.retmsg)
}
 void RetBase::set_retmsg(const char* value) {
  
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.RetBase.retmsg)
}
 void RetBase::set_retmsg(const char* value, size_t size) {
  
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.RetBase.retmsg)
}
 ::std::string* RetBase::mutable_retmsg() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.RetBase.retmsg)
  return retmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RetBase::release_retmsg() {
  // @@protoc_insertion_point(field_release:com.adv.msg.RetBase.retmsg)
  
  return retmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RetBase::set_allocated_retmsg(::std::string* retmsg) {
  if (retmsg != NULL) {
    
  } else {
    
  }
  retmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), retmsg);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.RetBase.retmsg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskInfo::kTaskidFieldNumber;
const int TaskInfo::kTasktypeFieldNumber;
const int TaskInfo::kTasknameFieldNumber;
const int TaskInfo::kTasklinkFieldNumber;
const int TaskInfo::kTaskdescFieldNumber;
const int TaskInfo::kTasksizeFieldNumber;
const int TaskInfo::kTaskpriceFieldNumber;
const int TaskInfo::kTaskptstepFieldNumber;
const int TaskInfo::kTaskpcstepFieldNumber;
const int TaskInfo::kTaskpublisherFieldNumber;
const int TaskInfo::kTasktotalnumFieldNumber;
const int TaskInfo::kTaskusednumFieldNumber;
const int TaskInfo::kTaskstimeFieldNumber;
const int TaskInfo::kTasketimeFieldNumber;
const int TaskInfo::kTaskstatusFieldNumber;
const int TaskInfo::kTaskiconFieldNumber;
const int TaskInfo::kTaskpkgnameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskInfo::TaskInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.adv.msg.TaskInfo)
}

void TaskInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

TaskInfo::TaskInfo(const TaskInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.adv.msg.TaskInfo)
}

void TaskInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  taskid_ = GOOGLE_LONGLONG(0);
  tasktype_ = 0;
  taskname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tasklink_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taskdesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tasksize_ = 0;
  taskprice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taskptstep_ = 0;
  taskpcstep_ = 0;
  taskpublisher_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tasktotalnum_ = 0;
  taskusednum_ = 0;
  taskstime_ = GOOGLE_LONGLONG(0);
  tasketime_ = GOOGLE_LONGLONG(0);
  taskstatus_ = 0;
  taskicon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taskpkgname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TaskInfo::~TaskInfo() {
  // @@protoc_insertion_point(destructor:com.adv.msg.TaskInfo)
  SharedDtor();
}

void TaskInfo::SharedDtor() {
  taskname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tasklink_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taskdesc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taskprice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taskpublisher_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taskicon_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taskpkgname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void TaskInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TaskInfo_descriptor_;
}

const TaskInfo& TaskInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_adv_5fbase_2eproto();
  return *default_instance_;
}

TaskInfo* TaskInfo::default_instance_ = NULL;

TaskInfo* TaskInfo::New(::google::protobuf::Arena* arena) const {
  TaskInfo* n = new TaskInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TaskInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:com.adv.msg.TaskInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TaskInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TaskInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(tasktype_, tasksize_);
  taskid_ = GOOGLE_LONGLONG(0);
  taskname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tasklink_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taskdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taskprice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taskptstep_ = 0;
  ZR_(tasktotalnum_, tasketime_);
  taskpcstep_ = 0;
  taskpublisher_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taskstatus_ = 0;
  taskicon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taskpkgname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool TaskInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.adv.msg.TaskInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 taskid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &taskid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_tasktype;
        break;
      }

      // optional int32 tasktype = 2;
      case 2: {
        if (tag == 16) {
         parse_tasktype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tasktype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_taskname;
        break;
      }

      // optional string taskname = 3;
      case 3: {
        if (tag == 26) {
         parse_taskname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_taskname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->taskname().data(), this->taskname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.TaskInfo.taskname"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_tasklink;
        break;
      }

      // optional string tasklink = 4;
      case 4: {
        if (tag == 34) {
         parse_tasklink:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tasklink()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tasklink().data(), this->tasklink().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.TaskInfo.tasklink"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_taskdesc;
        break;
      }

      // optional string taskdesc = 5;
      case 5: {
        if (tag == 42) {
         parse_taskdesc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_taskdesc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->taskdesc().data(), this->taskdesc().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.TaskInfo.taskdesc"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_tasksize;
        break;
      }

      // optional int32 tasksize = 6;
      case 6: {
        if (tag == 48) {
         parse_tasksize:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tasksize_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_taskprice;
        break;
      }

      // optional string taskprice = 7;
      case 7: {
        if (tag == 58) {
         parse_taskprice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_taskprice()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->taskprice().data(), this->taskprice().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.TaskInfo.taskprice"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_taskptstep;
        break;
      }

      // optional int32 taskptstep = 8;
      case 8: {
        if (tag == 64) {
         parse_taskptstep:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &taskptstep_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_taskpcstep;
        break;
      }

      // optional int32 taskpcstep = 9;
      case 9: {
        if (tag == 72) {
         parse_taskpcstep:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &taskpcstep_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_taskpublisher;
        break;
      }

      // optional string taskpublisher = 10;
      case 10: {
        if (tag == 82) {
         parse_taskpublisher:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_taskpublisher()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->taskpublisher().data(), this->taskpublisher().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.TaskInfo.taskpublisher"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_tasktotalnum;
        break;
      }

      // optional int32 tasktotalnum = 11;
      case 11: {
        if (tag == 88) {
         parse_tasktotalnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tasktotalnum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_taskusednum;
        break;
      }

      // optional int32 taskusednum = 12;
      case 12: {
        if (tag == 96) {
         parse_taskusednum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &taskusednum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_taskstime;
        break;
      }

      // optional int64 taskstime = 13;
      case 13: {
        if (tag == 104) {
         parse_taskstime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &taskstime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_tasketime;
        break;
      }

      // optional int64 tasketime = 14;
      case 14: {
        if (tag == 112) {
         parse_tasketime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tasketime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_taskstatus;
        break;
      }

      // optional int32 taskstatus = 15;
      case 15: {
        if (tag == 120) {
         parse_taskstatus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &taskstatus_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_taskicon;
        break;
      }

      // optional string taskicon = 16;
      case 16: {
        if (tag == 130) {
         parse_taskicon:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_taskicon()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->taskicon().data(), this->taskicon().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.TaskInfo.taskicon"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_taskpkgname;
        break;
      }

      // optional string taskpkgname = 17;
      case 17: {
        if (tag == 138) {
         parse_taskpkgname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_taskpkgname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->taskpkgname().data(), this->taskpkgname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.TaskInfo.taskpkgname"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.adv.msg.TaskInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.adv.msg.TaskInfo)
  return false;
#undef DO_
}

void TaskInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.adv.msg.TaskInfo)
  // optional int64 taskid = 1;
  if (this->taskid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->taskid(), output);
  }

  // optional int32 tasktype = 2;
  if (this->tasktype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->tasktype(), output);
  }

  // optional string taskname = 3;
  if (this->taskname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskname().data(), this->taskname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.TaskInfo.taskname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->taskname(), output);
  }

  // optional string tasklink = 4;
  if (this->tasklink().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tasklink().data(), this->tasklink().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.TaskInfo.tasklink");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->tasklink(), output);
  }

  // optional string taskdesc = 5;
  if (this->taskdesc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskdesc().data(), this->taskdesc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.TaskInfo.taskdesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->taskdesc(), output);
  }

  // optional int32 tasksize = 6;
  if (this->tasksize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->tasksize(), output);
  }

  // optional string taskprice = 7;
  if (this->taskprice().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskprice().data(), this->taskprice().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.TaskInfo.taskprice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->taskprice(), output);
  }

  // optional int32 taskptstep = 8;
  if (this->taskptstep() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->taskptstep(), output);
  }

  // optional int32 taskpcstep = 9;
  if (this->taskpcstep() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->taskpcstep(), output);
  }

  // optional string taskpublisher = 10;
  if (this->taskpublisher().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskpublisher().data(), this->taskpublisher().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.TaskInfo.taskpublisher");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->taskpublisher(), output);
  }

  // optional int32 tasktotalnum = 11;
  if (this->tasktotalnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->tasktotalnum(), output);
  }

  // optional int32 taskusednum = 12;
  if (this->taskusednum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->taskusednum(), output);
  }

  // optional int64 taskstime = 13;
  if (this->taskstime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->taskstime(), output);
  }

  // optional int64 tasketime = 14;
  if (this->tasketime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(14, this->tasketime(), output);
  }

  // optional int32 taskstatus = 15;
  if (this->taskstatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->taskstatus(), output);
  }

  // optional string taskicon = 16;
  if (this->taskicon().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskicon().data(), this->taskicon().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.TaskInfo.taskicon");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->taskicon(), output);
  }

  // optional string taskpkgname = 17;
  if (this->taskpkgname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskpkgname().data(), this->taskpkgname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.TaskInfo.taskpkgname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->taskpkgname(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.adv.msg.TaskInfo)
}

::google::protobuf::uint8* TaskInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.adv.msg.TaskInfo)
  // optional int64 taskid = 1;
  if (this->taskid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->taskid(), target);
  }

  // optional int32 tasktype = 2;
  if (this->tasktype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->tasktype(), target);
  }

  // optional string taskname = 3;
  if (this->taskname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskname().data(), this->taskname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.TaskInfo.taskname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->taskname(), target);
  }

  // optional string tasklink = 4;
  if (this->tasklink().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tasklink().data(), this->tasklink().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.TaskInfo.tasklink");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->tasklink(), target);
  }

  // optional string taskdesc = 5;
  if (this->taskdesc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskdesc().data(), this->taskdesc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.TaskInfo.taskdesc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->taskdesc(), target);
  }

  // optional int32 tasksize = 6;
  if (this->tasksize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->tasksize(), target);
  }

  // optional string taskprice = 7;
  if (this->taskprice().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskprice().data(), this->taskprice().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.TaskInfo.taskprice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->taskprice(), target);
  }

  // optional int32 taskptstep = 8;
  if (this->taskptstep() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->taskptstep(), target);
  }

  // optional int32 taskpcstep = 9;
  if (this->taskpcstep() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->taskpcstep(), target);
  }

  // optional string taskpublisher = 10;
  if (this->taskpublisher().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskpublisher().data(), this->taskpublisher().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.TaskInfo.taskpublisher");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->taskpublisher(), target);
  }

  // optional int32 tasktotalnum = 11;
  if (this->tasktotalnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->tasktotalnum(), target);
  }

  // optional int32 taskusednum = 12;
  if (this->taskusednum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->taskusednum(), target);
  }

  // optional int64 taskstime = 13;
  if (this->taskstime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(13, this->taskstime(), target);
  }

  // optional int64 tasketime = 14;
  if (this->tasketime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(14, this->tasketime(), target);
  }

  // optional int32 taskstatus = 15;
  if (this->taskstatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->taskstatus(), target);
  }

  // optional string taskicon = 16;
  if (this->taskicon().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskicon().data(), this->taskicon().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.TaskInfo.taskicon");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->taskicon(), target);
  }

  // optional string taskpkgname = 17;
  if (this->taskpkgname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskpkgname().data(), this->taskpkgname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.TaskInfo.taskpkgname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->taskpkgname(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.adv.msg.TaskInfo)
  return target;
}

int TaskInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:com.adv.msg.TaskInfo)
  int total_size = 0;

  // optional int64 taskid = 1;
  if (this->taskid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->taskid());
  }

  // optional int32 tasktype = 2;
  if (this->tasktype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tasktype());
  }

  // optional string taskname = 3;
  if (this->taskname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->taskname());
  }

  // optional string tasklink = 4;
  if (this->tasklink().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tasklink());
  }

  // optional string taskdesc = 5;
  if (this->taskdesc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->taskdesc());
  }

  // optional int32 tasksize = 6;
  if (this->tasksize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tasksize());
  }

  // optional string taskprice = 7;
  if (this->taskprice().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->taskprice());
  }

  // optional int32 taskptstep = 8;
  if (this->taskptstep() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->taskptstep());
  }

  // optional int32 taskpcstep = 9;
  if (this->taskpcstep() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->taskpcstep());
  }

  // optional string taskpublisher = 10;
  if (this->taskpublisher().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->taskpublisher());
  }

  // optional int32 tasktotalnum = 11;
  if (this->tasktotalnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tasktotalnum());
  }

  // optional int32 taskusednum = 12;
  if (this->taskusednum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->taskusednum());
  }

  // optional int64 taskstime = 13;
  if (this->taskstime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->taskstime());
  }

  // optional int64 tasketime = 14;
  if (this->tasketime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->tasketime());
  }

  // optional int32 taskstatus = 15;
  if (this->taskstatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->taskstatus());
  }

  // optional string taskicon = 16;
  if (this->taskicon().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->taskicon());
  }

  // optional string taskpkgname = 17;
  if (this->taskpkgname().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->taskpkgname());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.adv.msg.TaskInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TaskInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TaskInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.adv.msg.TaskInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.adv.msg.TaskInfo)
    MergeFrom(*source);
  }
}

void TaskInfo::MergeFrom(const TaskInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.adv.msg.TaskInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.taskid() != 0) {
    set_taskid(from.taskid());
  }
  if (from.tasktype() != 0) {
    set_tasktype(from.tasktype());
  }
  if (from.taskname().size() > 0) {

    taskname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskname_);
  }
  if (from.tasklink().size() > 0) {

    tasklink_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tasklink_);
  }
  if (from.taskdesc().size() > 0) {

    taskdesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskdesc_);
  }
  if (from.tasksize() != 0) {
    set_tasksize(from.tasksize());
  }
  if (from.taskprice().size() > 0) {

    taskprice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskprice_);
  }
  if (from.taskptstep() != 0) {
    set_taskptstep(from.taskptstep());
  }
  if (from.taskpcstep() != 0) {
    set_taskpcstep(from.taskpcstep());
  }
  if (from.taskpublisher().size() > 0) {

    taskpublisher_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskpublisher_);
  }
  if (from.tasktotalnum() != 0) {
    set_tasktotalnum(from.tasktotalnum());
  }
  if (from.taskusednum() != 0) {
    set_taskusednum(from.taskusednum());
  }
  if (from.taskstime() != 0) {
    set_taskstime(from.taskstime());
  }
  if (from.tasketime() != 0) {
    set_tasketime(from.tasketime());
  }
  if (from.taskstatus() != 0) {
    set_taskstatus(from.taskstatus());
  }
  if (from.taskicon().size() > 0) {

    taskicon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskicon_);
  }
  if (from.taskpkgname().size() > 0) {

    taskpkgname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskpkgname_);
  }
}

void TaskInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.adv.msg.TaskInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskInfo::CopyFrom(const TaskInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.adv.msg.TaskInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskInfo::IsInitialized() const {

  return true;
}

void TaskInfo::Swap(TaskInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskInfo::InternalSwap(TaskInfo* other) {
  std::swap(taskid_, other->taskid_);
  std::swap(tasktype_, other->tasktype_);
  taskname_.Swap(&other->taskname_);
  tasklink_.Swap(&other->tasklink_);
  taskdesc_.Swap(&other->taskdesc_);
  std::swap(tasksize_, other->tasksize_);
  taskprice_.Swap(&other->taskprice_);
  std::swap(taskptstep_, other->taskptstep_);
  std::swap(taskpcstep_, other->taskpcstep_);
  taskpublisher_.Swap(&other->taskpublisher_);
  std::swap(tasktotalnum_, other->tasktotalnum_);
  std::swap(taskusednum_, other->taskusednum_);
  std::swap(taskstime_, other->taskstime_);
  std::swap(tasketime_, other->tasketime_);
  std::swap(taskstatus_, other->taskstatus_);
  taskicon_.Swap(&other->taskicon_);
  taskpkgname_.Swap(&other->taskpkgname_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TaskInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TaskInfo_descriptor_;
  metadata.reflection = TaskInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TaskInfo

// optional int64 taskid = 1;
void TaskInfo::clear_taskid() {
  taskid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 TaskInfo::taskid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.TaskInfo.taskid)
  return taskid_;
}
 void TaskInfo::set_taskid(::google::protobuf::int64 value) {
  
  taskid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.TaskInfo.taskid)
}

// optional int32 tasktype = 2;
void TaskInfo::clear_tasktype() {
  tasktype_ = 0;
}
 ::google::protobuf::int32 TaskInfo::tasktype() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.TaskInfo.tasktype)
  return tasktype_;
}
 void TaskInfo::set_tasktype(::google::protobuf::int32 value) {
  
  tasktype_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.TaskInfo.tasktype)
}

// optional string taskname = 3;
void TaskInfo::clear_taskname() {
  taskname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& TaskInfo::taskname() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.TaskInfo.taskname)
  return taskname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TaskInfo::set_taskname(const ::std::string& value) {
  
  taskname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.TaskInfo.taskname)
}
 void TaskInfo::set_taskname(const char* value) {
  
  taskname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.TaskInfo.taskname)
}
 void TaskInfo::set_taskname(const char* value, size_t size) {
  
  taskname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.TaskInfo.taskname)
}
 ::std::string* TaskInfo::mutable_taskname() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.TaskInfo.taskname)
  return taskname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TaskInfo::release_taskname() {
  // @@protoc_insertion_point(field_release:com.adv.msg.TaskInfo.taskname)
  
  return taskname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TaskInfo::set_allocated_taskname(::std::string* taskname) {
  if (taskname != NULL) {
    
  } else {
    
  }
  taskname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), taskname);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.TaskInfo.taskname)
}

// optional string tasklink = 4;
void TaskInfo::clear_tasklink() {
  tasklink_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& TaskInfo::tasklink() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.TaskInfo.tasklink)
  return tasklink_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TaskInfo::set_tasklink(const ::std::string& value) {
  
  tasklink_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.TaskInfo.tasklink)
}
 void TaskInfo::set_tasklink(const char* value) {
  
  tasklink_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.TaskInfo.tasklink)
}
 void TaskInfo::set_tasklink(const char* value, size_t size) {
  
  tasklink_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.TaskInfo.tasklink)
}
 ::std::string* TaskInfo::mutable_tasklink() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.TaskInfo.tasklink)
  return tasklink_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TaskInfo::release_tasklink() {
  // @@protoc_insertion_point(field_release:com.adv.msg.TaskInfo.tasklink)
  
  return tasklink_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TaskInfo::set_allocated_tasklink(::std::string* tasklink) {
  if (tasklink != NULL) {
    
  } else {
    
  }
  tasklink_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tasklink);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.TaskInfo.tasklink)
}

// optional string taskdesc = 5;
void TaskInfo::clear_taskdesc() {
  taskdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& TaskInfo::taskdesc() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.TaskInfo.taskdesc)
  return taskdesc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TaskInfo::set_taskdesc(const ::std::string& value) {
  
  taskdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.TaskInfo.taskdesc)
}
 void TaskInfo::set_taskdesc(const char* value) {
  
  taskdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.TaskInfo.taskdesc)
}
 void TaskInfo::set_taskdesc(const char* value, size_t size) {
  
  taskdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.TaskInfo.taskdesc)
}
 ::std::string* TaskInfo::mutable_taskdesc() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.TaskInfo.taskdesc)
  return taskdesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TaskInfo::release_taskdesc() {
  // @@protoc_insertion_point(field_release:com.adv.msg.TaskInfo.taskdesc)
  
  return taskdesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TaskInfo::set_allocated_taskdesc(::std::string* taskdesc) {
  if (taskdesc != NULL) {
    
  } else {
    
  }
  taskdesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), taskdesc);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.TaskInfo.taskdesc)
}

// optional int32 tasksize = 6;
void TaskInfo::clear_tasksize() {
  tasksize_ = 0;
}
 ::google::protobuf::int32 TaskInfo::tasksize() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.TaskInfo.tasksize)
  return tasksize_;
}
 void TaskInfo::set_tasksize(::google::protobuf::int32 value) {
  
  tasksize_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.TaskInfo.tasksize)
}

// optional string taskprice = 7;
void TaskInfo::clear_taskprice() {
  taskprice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& TaskInfo::taskprice() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.TaskInfo.taskprice)
  return taskprice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TaskInfo::set_taskprice(const ::std::string& value) {
  
  taskprice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.TaskInfo.taskprice)
}
 void TaskInfo::set_taskprice(const char* value) {
  
  taskprice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.TaskInfo.taskprice)
}
 void TaskInfo::set_taskprice(const char* value, size_t size) {
  
  taskprice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.TaskInfo.taskprice)
}
 ::std::string* TaskInfo::mutable_taskprice() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.TaskInfo.taskprice)
  return taskprice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TaskInfo::release_taskprice() {
  // @@protoc_insertion_point(field_release:com.adv.msg.TaskInfo.taskprice)
  
  return taskprice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TaskInfo::set_allocated_taskprice(::std::string* taskprice) {
  if (taskprice != NULL) {
    
  } else {
    
  }
  taskprice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), taskprice);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.TaskInfo.taskprice)
}

// optional int32 taskptstep = 8;
void TaskInfo::clear_taskptstep() {
  taskptstep_ = 0;
}
 ::google::protobuf::int32 TaskInfo::taskptstep() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.TaskInfo.taskptstep)
  return taskptstep_;
}
 void TaskInfo::set_taskptstep(::google::protobuf::int32 value) {
  
  taskptstep_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.TaskInfo.taskptstep)
}

// optional int32 taskpcstep = 9;
void TaskInfo::clear_taskpcstep() {
  taskpcstep_ = 0;
}
 ::google::protobuf::int32 TaskInfo::taskpcstep() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.TaskInfo.taskpcstep)
  return taskpcstep_;
}
 void TaskInfo::set_taskpcstep(::google::protobuf::int32 value) {
  
  taskpcstep_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.TaskInfo.taskpcstep)
}

// optional string taskpublisher = 10;
void TaskInfo::clear_taskpublisher() {
  taskpublisher_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& TaskInfo::taskpublisher() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.TaskInfo.taskpublisher)
  return taskpublisher_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TaskInfo::set_taskpublisher(const ::std::string& value) {
  
  taskpublisher_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.TaskInfo.taskpublisher)
}
 void TaskInfo::set_taskpublisher(const char* value) {
  
  taskpublisher_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.TaskInfo.taskpublisher)
}
 void TaskInfo::set_taskpublisher(const char* value, size_t size) {
  
  taskpublisher_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.TaskInfo.taskpublisher)
}
 ::std::string* TaskInfo::mutable_taskpublisher() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.TaskInfo.taskpublisher)
  return taskpublisher_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TaskInfo::release_taskpublisher() {
  // @@protoc_insertion_point(field_release:com.adv.msg.TaskInfo.taskpublisher)
  
  return taskpublisher_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TaskInfo::set_allocated_taskpublisher(::std::string* taskpublisher) {
  if (taskpublisher != NULL) {
    
  } else {
    
  }
  taskpublisher_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), taskpublisher);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.TaskInfo.taskpublisher)
}

// optional int32 tasktotalnum = 11;
void TaskInfo::clear_tasktotalnum() {
  tasktotalnum_ = 0;
}
 ::google::protobuf::int32 TaskInfo::tasktotalnum() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.TaskInfo.tasktotalnum)
  return tasktotalnum_;
}
 void TaskInfo::set_tasktotalnum(::google::protobuf::int32 value) {
  
  tasktotalnum_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.TaskInfo.tasktotalnum)
}

// optional int32 taskusednum = 12;
void TaskInfo::clear_taskusednum() {
  taskusednum_ = 0;
}
 ::google::protobuf::int32 TaskInfo::taskusednum() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.TaskInfo.taskusednum)
  return taskusednum_;
}
 void TaskInfo::set_taskusednum(::google::protobuf::int32 value) {
  
  taskusednum_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.TaskInfo.taskusednum)
}

// optional int64 taskstime = 13;
void TaskInfo::clear_taskstime() {
  taskstime_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 TaskInfo::taskstime() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.TaskInfo.taskstime)
  return taskstime_;
}
 void TaskInfo::set_taskstime(::google::protobuf::int64 value) {
  
  taskstime_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.TaskInfo.taskstime)
}

// optional int64 tasketime = 14;
void TaskInfo::clear_tasketime() {
  tasketime_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 TaskInfo::tasketime() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.TaskInfo.tasketime)
  return tasketime_;
}
 void TaskInfo::set_tasketime(::google::protobuf::int64 value) {
  
  tasketime_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.TaskInfo.tasketime)
}

// optional int32 taskstatus = 15;
void TaskInfo::clear_taskstatus() {
  taskstatus_ = 0;
}
 ::google::protobuf::int32 TaskInfo::taskstatus() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.TaskInfo.taskstatus)
  return taskstatus_;
}
 void TaskInfo::set_taskstatus(::google::protobuf::int32 value) {
  
  taskstatus_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.TaskInfo.taskstatus)
}

// optional string taskicon = 16;
void TaskInfo::clear_taskicon() {
  taskicon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& TaskInfo::taskicon() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.TaskInfo.taskicon)
  return taskicon_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TaskInfo::set_taskicon(const ::std::string& value) {
  
  taskicon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.TaskInfo.taskicon)
}
 void TaskInfo::set_taskicon(const char* value) {
  
  taskicon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.TaskInfo.taskicon)
}
 void TaskInfo::set_taskicon(const char* value, size_t size) {
  
  taskicon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.TaskInfo.taskicon)
}
 ::std::string* TaskInfo::mutable_taskicon() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.TaskInfo.taskicon)
  return taskicon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TaskInfo::release_taskicon() {
  // @@protoc_insertion_point(field_release:com.adv.msg.TaskInfo.taskicon)
  
  return taskicon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TaskInfo::set_allocated_taskicon(::std::string* taskicon) {
  if (taskicon != NULL) {
    
  } else {
    
  }
  taskicon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), taskicon);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.TaskInfo.taskicon)
}

// optional string taskpkgname = 17;
void TaskInfo::clear_taskpkgname() {
  taskpkgname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& TaskInfo::taskpkgname() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.TaskInfo.taskpkgname)
  return taskpkgname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TaskInfo::set_taskpkgname(const ::std::string& value) {
  
  taskpkgname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.TaskInfo.taskpkgname)
}
 void TaskInfo::set_taskpkgname(const char* value) {
  
  taskpkgname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.TaskInfo.taskpkgname)
}
 void TaskInfo::set_taskpkgname(const char* value, size_t size) {
  
  taskpkgname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.TaskInfo.taskpkgname)
}
 ::std::string* TaskInfo::mutable_taskpkgname() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.TaskInfo.taskpkgname)
  return taskpkgname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TaskInfo::release_taskpkgname() {
  // @@protoc_insertion_point(field_release:com.adv.msg.TaskInfo.taskpkgname)
  
  return taskpkgname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TaskInfo::set_allocated_taskpkgname(::std::string* taskpkgname) {
  if (taskpkgname != NULL) {
    
  } else {
    
  }
  taskpkgname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), taskpkgname);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.TaskInfo.taskpkgname)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PField::kNameFieldNumber;
const int PField::kValueFieldNumber;
const int PField::kValuetypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PField::PField()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.adv.msg.PField)
}

void PField::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PField::PField(const PField& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.adv.msg.PField)
}

void PField::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  valuetype_ = 0;
}

PField::~PField() {
  // @@protoc_insertion_point(destructor:com.adv.msg.PField)
  SharedDtor();
}

void PField::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PField::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PField::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PField_descriptor_;
}

const PField& PField::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_adv_5fbase_2eproto();
  return *default_instance_;
}

PField* PField::default_instance_ = NULL;

PField* PField::New(::google::protobuf::Arena* arena) const {
  PField* n = new PField;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PField::Clear() {
// @@protoc_insertion_point(message_clear_start:com.adv.msg.PField)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  valuetype_ = 0;
}

bool PField::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.adv.msg.PField)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.PField.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // optional string value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.PField.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_valuetype;
        break;
      }

      // optional int32 valuetype = 3;
      case 3: {
        if (tag == 24) {
         parse_valuetype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &valuetype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.adv.msg.PField)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.adv.msg.PField)
  return false;
#undef DO_
}

void PField::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.adv.msg.PField)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.PField.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.PField.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  // optional int32 valuetype = 3;
  if (this->valuetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->valuetype(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.adv.msg.PField)
}

::google::protobuf::uint8* PField::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.adv.msg.PField)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.PField.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.PField.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  // optional int32 valuetype = 3;
  if (this->valuetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->valuetype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.adv.msg.PField)
  return target;
}

int PField::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:com.adv.msg.PField)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // optional int32 valuetype = 3;
  if (this->valuetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->valuetype());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PField::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.adv.msg.PField)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PField* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PField>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.adv.msg.PField)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.adv.msg.PField)
    MergeFrom(*source);
  }
}

void PField::MergeFrom(const PField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.adv.msg.PField)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.valuetype() != 0) {
    set_valuetype(from.valuetype());
  }
}

void PField::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.adv.msg.PField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PField::CopyFrom(const PField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.adv.msg.PField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PField::IsInitialized() const {

  return true;
}

void PField::Swap(PField* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PField::InternalSwap(PField* other) {
  name_.Swap(&other->name_);
  value_.Swap(&other->value_);
  std::swap(valuetype_, other->valuetype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PField::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PField_descriptor_;
  metadata.reflection = PField_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PField

// optional string name = 1;
void PField::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PField::name() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.PField.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PField::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.PField.name)
}
 void PField::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.PField.name)
}
 void PField::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.PField.name)
}
 ::std::string* PField::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.PField.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PField::release_name() {
  // @@protoc_insertion_point(field_release:com.adv.msg.PField.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PField::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.PField.name)
}

// optional string value = 2;
void PField::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PField::value() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.PField.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PField::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.PField.value)
}
 void PField::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.PField.value)
}
 void PField::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.PField.value)
}
 ::std::string* PField::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.PField.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PField::release_value() {
  // @@protoc_insertion_point(field_release:com.adv.msg.PField.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PField::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.PField.value)
}

// optional int32 valuetype = 3;
void PField::clear_valuetype() {
  valuetype_ = 0;
}
 ::google::protobuf::int32 PField::valuetype() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.PField.valuetype)
  return valuetype_;
}
 void PField::set_valuetype(::google::protobuf::int32 value) {
  
  valuetype_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.PField.valuetype)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PRow::kFieldnumFieldNumber;
const int PRow::kFieldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PRow::PRow()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.adv.msg.PRow)
}

void PRow::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PRow::PRow(const PRow& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.adv.msg.PRow)
}

void PRow::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  fieldnum_ = 0;
}

PRow::~PRow() {
  // @@protoc_insertion_point(destructor:com.adv.msg.PRow)
  SharedDtor();
}

void PRow::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PRow::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PRow::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PRow_descriptor_;
}

const PRow& PRow::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_adv_5fbase_2eproto();
  return *default_instance_;
}

PRow* PRow::default_instance_ = NULL;

PRow* PRow::New(::google::protobuf::Arena* arena) const {
  PRow* n = new PRow;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PRow::Clear() {
// @@protoc_insertion_point(message_clear_start:com.adv.msg.PRow)
  fieldnum_ = 0;
  field_.Clear();
}

bool PRow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.adv.msg.PRow)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 fieldnum = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fieldnum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_field;
        break;
      }

      // repeated .com.adv.msg.PField field = 2;
      case 2: {
        if (tag == 18) {
         parse_field:
          DO_(input->IncrementRecursionDepth());
         parse_loop_field:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_field()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_field;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.adv.msg.PRow)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.adv.msg.PRow)
  return false;
#undef DO_
}

void PRow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.adv.msg.PRow)
  // optional int32 fieldnum = 1;
  if (this->fieldnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fieldnum(), output);
  }

  // repeated .com.adv.msg.PField field = 2;
  for (unsigned int i = 0, n = this->field_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->field(i), output);
  }

  // @@protoc_insertion_point(serialize_end:com.adv.msg.PRow)
}

::google::protobuf::uint8* PRow::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.adv.msg.PRow)
  // optional int32 fieldnum = 1;
  if (this->fieldnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fieldnum(), target);
  }

  // repeated .com.adv.msg.PField field = 2;
  for (unsigned int i = 0, n = this->field_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->field(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.adv.msg.PRow)
  return target;
}

int PRow::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:com.adv.msg.PRow)
  int total_size = 0;

  // optional int32 fieldnum = 1;
  if (this->fieldnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fieldnum());
  }

  // repeated .com.adv.msg.PField field = 2;
  total_size += 1 * this->field_size();
  for (int i = 0; i < this->field_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->field(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PRow::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.adv.msg.PRow)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PRow* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PRow>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.adv.msg.PRow)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.adv.msg.PRow)
    MergeFrom(*source);
  }
}

void PRow::MergeFrom(const PRow& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.adv.msg.PRow)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  field_.MergeFrom(from.field_);
  if (from.fieldnum() != 0) {
    set_fieldnum(from.fieldnum());
  }
}

void PRow::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.adv.msg.PRow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PRow::CopyFrom(const PRow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.adv.msg.PRow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PRow::IsInitialized() const {

  return true;
}

void PRow::Swap(PRow* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PRow::InternalSwap(PRow* other) {
  std::swap(fieldnum_, other->fieldnum_);
  field_.UnsafeArenaSwap(&other->field_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PRow::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PRow_descriptor_;
  metadata.reflection = PRow_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PRow

// optional int32 fieldnum = 1;
void PRow::clear_fieldnum() {
  fieldnum_ = 0;
}
 ::google::protobuf::int32 PRow::fieldnum() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.PRow.fieldnum)
  return fieldnum_;
}
 void PRow::set_fieldnum(::google::protobuf::int32 value) {
  
  fieldnum_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.PRow.fieldnum)
}

// repeated .com.adv.msg.PField field = 2;
int PRow::field_size() const {
  return field_.size();
}
void PRow::clear_field() {
  field_.Clear();
}
const ::com::adv::msg::PField& PRow::field(int index) const {
  // @@protoc_insertion_point(field_get:com.adv.msg.PRow.field)
  return field_.Get(index);
}
::com::adv::msg::PField* PRow::mutable_field(int index) {
  // @@protoc_insertion_point(field_mutable:com.adv.msg.PRow.field)
  return field_.Mutable(index);
}
::com::adv::msg::PField* PRow::add_field() {
  // @@protoc_insertion_point(field_add:com.adv.msg.PRow.field)
  return field_.Add();
}
::google::protobuf::RepeatedPtrField< ::com::adv::msg::PField >*
PRow::mutable_field() {
  // @@protoc_insertion_point(field_mutable_list:com.adv.msg.PRow.field)
  return &field_;
}
const ::google::protobuf::RepeatedPtrField< ::com::adv::msg::PField >&
PRow::field() const {
  // @@protoc_insertion_point(field_list:com.adv.msg.PRow.field)
  return field_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PDataCell::kTagFieldNumber;
const int PDataCell::kStrValueFieldNumber;
const int PDataCell::kI32ValueFieldNumber;
const int PDataCell::kI64ValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PDataCell::PDataCell()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.adv.msg.PDataCell)
}

void PDataCell::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PDataCell::PDataCell(const PDataCell& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.adv.msg.PDataCell)
}

void PDataCell::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  str_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  i32_value_ = 0;
  i64_value_ = GOOGLE_LONGLONG(0);
}

PDataCell::~PDataCell() {
  // @@protoc_insertion_point(destructor:com.adv.msg.PDataCell)
  SharedDtor();
}

void PDataCell::SharedDtor() {
  tag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  str_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PDataCell::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PDataCell::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PDataCell_descriptor_;
}

const PDataCell& PDataCell::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_adv_5fbase_2eproto();
  return *default_instance_;
}

PDataCell* PDataCell::default_instance_ = NULL;

PDataCell* PDataCell::New(::google::protobuf::Arena* arena) const {
  PDataCell* n = new PDataCell;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PDataCell::Clear() {
// @@protoc_insertion_point(message_clear_start:com.adv.msg.PDataCell)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PDataCell, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PDataCell*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(i64_value_, i32_value_);
  tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  str_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool PDataCell::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.adv.msg.PDataCell)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string tag = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tag().data(), this->tag().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.PDataCell.tag"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_str_value;
        break;
      }

      // optional string str_value = 2;
      case 2: {
        if (tag == 18) {
         parse_str_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->str_value().data(), this->str_value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.adv.msg.PDataCell.str_value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_i32_value;
        break;
      }

      // optional int32 i32_value = 3;
      case 3: {
        if (tag == 24) {
         parse_i32_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &i32_value_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_i64_value;
        break;
      }

      // optional int64 i64_value = 4;
      case 4: {
        if (tag == 32) {
         parse_i64_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &i64_value_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.adv.msg.PDataCell)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.adv.msg.PDataCell)
  return false;
#undef DO_
}

void PDataCell::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.adv.msg.PDataCell)
  // optional string tag = 1;
  if (this->tag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tag().data(), this->tag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.PDataCell.tag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tag(), output);
  }

  // optional string str_value = 2;
  if (this->str_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str_value().data(), this->str_value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.PDataCell.str_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->str_value(), output);
  }

  // optional int32 i32_value = 3;
  if (this->i32_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->i32_value(), output);
  }

  // optional int64 i64_value = 4;
  if (this->i64_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->i64_value(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.adv.msg.PDataCell)
}

::google::protobuf::uint8* PDataCell::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.adv.msg.PDataCell)
  // optional string tag = 1;
  if (this->tag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tag().data(), this->tag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.PDataCell.tag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tag(), target);
  }

  // optional string str_value = 2;
  if (this->str_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str_value().data(), this->str_value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.adv.msg.PDataCell.str_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->str_value(), target);
  }

  // optional int32 i32_value = 3;
  if (this->i32_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->i32_value(), target);
  }

  // optional int64 i64_value = 4;
  if (this->i64_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->i64_value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.adv.msg.PDataCell)
  return target;
}

int PDataCell::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:com.adv.msg.PDataCell)
  int total_size = 0;

  // optional string tag = 1;
  if (this->tag().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tag());
  }

  // optional string str_value = 2;
  if (this->str_value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->str_value());
  }

  // optional int32 i32_value = 3;
  if (this->i32_value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->i32_value());
  }

  // optional int64 i64_value = 4;
  if (this->i64_value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->i64_value());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PDataCell::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.adv.msg.PDataCell)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PDataCell* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PDataCell>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.adv.msg.PDataCell)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.adv.msg.PDataCell)
    MergeFrom(*source);
  }
}

void PDataCell::MergeFrom(const PDataCell& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.adv.msg.PDataCell)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.tag().size() > 0) {

    tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_);
  }
  if (from.str_value().size() > 0) {

    str_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_value_);
  }
  if (from.i32_value() != 0) {
    set_i32_value(from.i32_value());
  }
  if (from.i64_value() != 0) {
    set_i64_value(from.i64_value());
  }
}

void PDataCell::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.adv.msg.PDataCell)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PDataCell::CopyFrom(const PDataCell& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.adv.msg.PDataCell)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PDataCell::IsInitialized() const {

  return true;
}

void PDataCell::Swap(PDataCell* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PDataCell::InternalSwap(PDataCell* other) {
  tag_.Swap(&other->tag_);
  str_value_.Swap(&other->str_value_);
  std::swap(i32_value_, other->i32_value_);
  std::swap(i64_value_, other->i64_value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PDataCell::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PDataCell_descriptor_;
  metadata.reflection = PDataCell_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PDataCell

// optional string tag = 1;
void PDataCell::clear_tag() {
  tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PDataCell::tag() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.PDataCell.tag)
  return tag_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PDataCell::set_tag(const ::std::string& value) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.PDataCell.tag)
}
 void PDataCell::set_tag(const char* value) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.PDataCell.tag)
}
 void PDataCell::set_tag(const char* value, size_t size) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.PDataCell.tag)
}
 ::std::string* PDataCell::mutable_tag() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.PDataCell.tag)
  return tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PDataCell::release_tag() {
  // @@protoc_insertion_point(field_release:com.adv.msg.PDataCell.tag)
  
  return tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PDataCell::set_allocated_tag(::std::string* tag) {
  if (tag != NULL) {
    
  } else {
    
  }
  tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.PDataCell.tag)
}

// optional string str_value = 2;
void PDataCell::clear_str_value() {
  str_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PDataCell::str_value() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.PDataCell.str_value)
  return str_value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PDataCell::set_str_value(const ::std::string& value) {
  
  str_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.PDataCell.str_value)
}
 void PDataCell::set_str_value(const char* value) {
  
  str_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.PDataCell.str_value)
}
 void PDataCell::set_str_value(const char* value, size_t size) {
  
  str_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.PDataCell.str_value)
}
 ::std::string* PDataCell::mutable_str_value() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.PDataCell.str_value)
  return str_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PDataCell::release_str_value() {
  // @@protoc_insertion_point(field_release:com.adv.msg.PDataCell.str_value)
  
  return str_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PDataCell::set_allocated_str_value(::std::string* str_value) {
  if (str_value != NULL) {
    
  } else {
    
  }
  str_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str_value);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.PDataCell.str_value)
}

// optional int32 i32_value = 3;
void PDataCell::clear_i32_value() {
  i32_value_ = 0;
}
 ::google::protobuf::int32 PDataCell::i32_value() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.PDataCell.i32_value)
  return i32_value_;
}
 void PDataCell::set_i32_value(::google::protobuf::int32 value) {
  
  i32_value_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.PDataCell.i32_value)
}

// optional int64 i64_value = 4;
void PDataCell::clear_i64_value() {
  i64_value_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PDataCell::i64_value() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.PDataCell.i64_value)
  return i64_value_;
}
 void PDataCell::set_i64_value(::google::protobuf::int64 value) {
  
  i64_value_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.PDataCell.i64_value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace msg
}  // namespace adv
}  // namespace com

// @@protoc_insertion_point(global_scope)
