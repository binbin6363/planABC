// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: adv_base.proto

#ifndef PROTOBUF_adv_5fbase_2eproto__INCLUDED
#define PROTOBUF_adv_5fbase_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace adv {
namespace msg {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_adv_5fbase_2eproto();
void protobuf_AssignDesc_adv_5fbase_2eproto();
void protobuf_ShutdownFile_adv_5fbase_2eproto();

class PDataCell;
class PField;
class PRow;
class RetBase;
class TaskInfo;

// ===================================================================

class RetBase : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.adv.msg.RetBase) */ {
 public:
  RetBase();
  virtual ~RetBase();

  RetBase(const RetBase& from);

  inline RetBase& operator=(const RetBase& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetBase& default_instance();

  void Swap(RetBase* other);

  // implements Message ----------------------------------------------

  inline RetBase* New() const { return New(NULL); }

  RetBase* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetBase& from);
  void MergeFrom(const RetBase& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RetBase* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // optional string retmsg = 2;
  void clear_retmsg();
  static const int kRetmsgFieldNumber = 2;
  const ::std::string& retmsg() const;
  void set_retmsg(const ::std::string& value);
  void set_retmsg(const char* value);
  void set_retmsg(const char* value, size_t size);
  ::std::string* mutable_retmsg();
  ::std::string* release_retmsg();
  void set_allocated_retmsg(::std::string* retmsg);

  // @@protoc_insertion_point(class_scope:com.adv.msg.RetBase)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr retmsg_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_adv_5fbase_2eproto();
  friend void protobuf_AssignDesc_adv_5fbase_2eproto();
  friend void protobuf_ShutdownFile_adv_5fbase_2eproto();

  void InitAsDefaultInstance();
  static RetBase* default_instance_;
};
// -------------------------------------------------------------------

class TaskInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.adv.msg.TaskInfo) */ {
 public:
  TaskInfo();
  virtual ~TaskInfo();

  TaskInfo(const TaskInfo& from);

  inline TaskInfo& operator=(const TaskInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskInfo& default_instance();

  void Swap(TaskInfo* other);

  // implements Message ----------------------------------------------

  inline TaskInfo* New() const { return New(NULL); }

  TaskInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaskInfo& from);
  void MergeFrom(const TaskInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TaskInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 taskid = 1;
  void clear_taskid();
  static const int kTaskidFieldNumber = 1;
  ::google::protobuf::int64 taskid() const;
  void set_taskid(::google::protobuf::int64 value);

  // optional int32 tasktype = 2;
  void clear_tasktype();
  static const int kTasktypeFieldNumber = 2;
  ::google::protobuf::int32 tasktype() const;
  void set_tasktype(::google::protobuf::int32 value);

  // optional string taskname = 3;
  void clear_taskname();
  static const int kTasknameFieldNumber = 3;
  const ::std::string& taskname() const;
  void set_taskname(const ::std::string& value);
  void set_taskname(const char* value);
  void set_taskname(const char* value, size_t size);
  ::std::string* mutable_taskname();
  ::std::string* release_taskname();
  void set_allocated_taskname(::std::string* taskname);

  // optional string tasklink = 4;
  void clear_tasklink();
  static const int kTasklinkFieldNumber = 4;
  const ::std::string& tasklink() const;
  void set_tasklink(const ::std::string& value);
  void set_tasklink(const char* value);
  void set_tasklink(const char* value, size_t size);
  ::std::string* mutable_tasklink();
  ::std::string* release_tasklink();
  void set_allocated_tasklink(::std::string* tasklink);

  // optional string taskdesc = 5;
  void clear_taskdesc();
  static const int kTaskdescFieldNumber = 5;
  const ::std::string& taskdesc() const;
  void set_taskdesc(const ::std::string& value);
  void set_taskdesc(const char* value);
  void set_taskdesc(const char* value, size_t size);
  ::std::string* mutable_taskdesc();
  ::std::string* release_taskdesc();
  void set_allocated_taskdesc(::std::string* taskdesc);

  // optional int32 tasksize = 6;
  void clear_tasksize();
  static const int kTasksizeFieldNumber = 6;
  ::google::protobuf::int32 tasksize() const;
  void set_tasksize(::google::protobuf::int32 value);

  // optional string taskprice = 7;
  void clear_taskprice();
  static const int kTaskpriceFieldNumber = 7;
  const ::std::string& taskprice() const;
  void set_taskprice(const ::std::string& value);
  void set_taskprice(const char* value);
  void set_taskprice(const char* value, size_t size);
  ::std::string* mutable_taskprice();
  ::std::string* release_taskprice();
  void set_allocated_taskprice(::std::string* taskprice);

  // optional int32 taskptstep = 8;
  void clear_taskptstep();
  static const int kTaskptstepFieldNumber = 8;
  ::google::protobuf::int32 taskptstep() const;
  void set_taskptstep(::google::protobuf::int32 value);

  // optional int32 taskpcstep = 9;
  void clear_taskpcstep();
  static const int kTaskpcstepFieldNumber = 9;
  ::google::protobuf::int32 taskpcstep() const;
  void set_taskpcstep(::google::protobuf::int32 value);

  // optional string taskpublisher = 10;
  void clear_taskpublisher();
  static const int kTaskpublisherFieldNumber = 10;
  const ::std::string& taskpublisher() const;
  void set_taskpublisher(const ::std::string& value);
  void set_taskpublisher(const char* value);
  void set_taskpublisher(const char* value, size_t size);
  ::std::string* mutable_taskpublisher();
  ::std::string* release_taskpublisher();
  void set_allocated_taskpublisher(::std::string* taskpublisher);

  // optional int32 tasktotalnum = 11;
  void clear_tasktotalnum();
  static const int kTasktotalnumFieldNumber = 11;
  ::google::protobuf::int32 tasktotalnum() const;
  void set_tasktotalnum(::google::protobuf::int32 value);

  // optional int32 taskusednum = 12;
  void clear_taskusednum();
  static const int kTaskusednumFieldNumber = 12;
  ::google::protobuf::int32 taskusednum() const;
  void set_taskusednum(::google::protobuf::int32 value);

  // optional int64 taskstime = 13;
  void clear_taskstime();
  static const int kTaskstimeFieldNumber = 13;
  ::google::protobuf::int64 taskstime() const;
  void set_taskstime(::google::protobuf::int64 value);

  // optional int64 tasketime = 14;
  void clear_tasketime();
  static const int kTasketimeFieldNumber = 14;
  ::google::protobuf::int64 tasketime() const;
  void set_tasketime(::google::protobuf::int64 value);

  // optional int32 taskstatus = 15;
  void clear_taskstatus();
  static const int kTaskstatusFieldNumber = 15;
  ::google::protobuf::int32 taskstatus() const;
  void set_taskstatus(::google::protobuf::int32 value);

  // optional string taskicon = 16;
  void clear_taskicon();
  static const int kTaskiconFieldNumber = 16;
  const ::std::string& taskicon() const;
  void set_taskicon(const ::std::string& value);
  void set_taskicon(const char* value);
  void set_taskicon(const char* value, size_t size);
  ::std::string* mutable_taskicon();
  ::std::string* release_taskicon();
  void set_allocated_taskicon(::std::string* taskicon);

  // optional string taskpkgname = 17;
  void clear_taskpkgname();
  static const int kTaskpkgnameFieldNumber = 17;
  const ::std::string& taskpkgname() const;
  void set_taskpkgname(const ::std::string& value);
  void set_taskpkgname(const char* value);
  void set_taskpkgname(const char* value, size_t size);
  ::std::string* mutable_taskpkgname();
  ::std::string* release_taskpkgname();
  void set_allocated_taskpkgname(::std::string* taskpkgname);

  // @@protoc_insertion_point(class_scope:com.adv.msg.TaskInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 taskid_;
  ::google::protobuf::internal::ArenaStringPtr taskname_;
  ::google::protobuf::internal::ArenaStringPtr tasklink_;
  ::google::protobuf::int32 tasktype_;
  ::google::protobuf::int32 tasksize_;
  ::google::protobuf::internal::ArenaStringPtr taskdesc_;
  ::google::protobuf::internal::ArenaStringPtr taskprice_;
  ::google::protobuf::int32 taskptstep_;
  ::google::protobuf::int32 taskpcstep_;
  ::google::protobuf::internal::ArenaStringPtr taskpublisher_;
  ::google::protobuf::int32 tasktotalnum_;
  ::google::protobuf::int32 taskusednum_;
  ::google::protobuf::int64 taskstime_;
  ::google::protobuf::int64 tasketime_;
  ::google::protobuf::internal::ArenaStringPtr taskicon_;
  ::google::protobuf::internal::ArenaStringPtr taskpkgname_;
  ::google::protobuf::int32 taskstatus_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_adv_5fbase_2eproto();
  friend void protobuf_AssignDesc_adv_5fbase_2eproto();
  friend void protobuf_ShutdownFile_adv_5fbase_2eproto();

  void InitAsDefaultInstance();
  static TaskInfo* default_instance_;
};
// -------------------------------------------------------------------

class PField : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.adv.msg.PField) */ {
 public:
  PField();
  virtual ~PField();

  PField(const PField& from);

  inline PField& operator=(const PField& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PField& default_instance();

  void Swap(PField* other);

  // implements Message ----------------------------------------------

  inline PField* New() const { return New(NULL); }

  PField* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PField& from);
  void MergeFrom(const PField& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PField* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // optional int32 valuetype = 3;
  void clear_valuetype();
  static const int kValuetypeFieldNumber = 3;
  ::google::protobuf::int32 valuetype() const;
  void set_valuetype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.adv.msg.PField)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::int32 valuetype_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_adv_5fbase_2eproto();
  friend void protobuf_AssignDesc_adv_5fbase_2eproto();
  friend void protobuf_ShutdownFile_adv_5fbase_2eproto();

  void InitAsDefaultInstance();
  static PField* default_instance_;
};
// -------------------------------------------------------------------

class PRow : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.adv.msg.PRow) */ {
 public:
  PRow();
  virtual ~PRow();

  PRow(const PRow& from);

  inline PRow& operator=(const PRow& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PRow& default_instance();

  void Swap(PRow* other);

  // implements Message ----------------------------------------------

  inline PRow* New() const { return New(NULL); }

  PRow* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PRow& from);
  void MergeFrom(const PRow& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PRow* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 fieldnum = 1;
  void clear_fieldnum();
  static const int kFieldnumFieldNumber = 1;
  ::google::protobuf::int32 fieldnum() const;
  void set_fieldnum(::google::protobuf::int32 value);

  // repeated .com.adv.msg.PField field = 2;
  int field_size() const;
  void clear_field();
  static const int kFieldFieldNumber = 2;
  const ::com::adv::msg::PField& field(int index) const;
  ::com::adv::msg::PField* mutable_field(int index);
  ::com::adv::msg::PField* add_field();
  ::google::protobuf::RepeatedPtrField< ::com::adv::msg::PField >*
      mutable_field();
  const ::google::protobuf::RepeatedPtrField< ::com::adv::msg::PField >&
      field() const;

  // @@protoc_insertion_point(class_scope:com.adv.msg.PRow)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::com::adv::msg::PField > field_;
  ::google::protobuf::int32 fieldnum_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_adv_5fbase_2eproto();
  friend void protobuf_AssignDesc_adv_5fbase_2eproto();
  friend void protobuf_ShutdownFile_adv_5fbase_2eproto();

  void InitAsDefaultInstance();
  static PRow* default_instance_;
};
// -------------------------------------------------------------------

class PDataCell : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.adv.msg.PDataCell) */ {
 public:
  PDataCell();
  virtual ~PDataCell();

  PDataCell(const PDataCell& from);

  inline PDataCell& operator=(const PDataCell& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PDataCell& default_instance();

  void Swap(PDataCell* other);

  // implements Message ----------------------------------------------

  inline PDataCell* New() const { return New(NULL); }

  PDataCell* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PDataCell& from);
  void MergeFrom(const PDataCell& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PDataCell* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string tag = 1;
  void clear_tag();
  static const int kTagFieldNumber = 1;
  const ::std::string& tag() const;
  void set_tag(const ::std::string& value);
  void set_tag(const char* value);
  void set_tag(const char* value, size_t size);
  ::std::string* mutable_tag();
  ::std::string* release_tag();
  void set_allocated_tag(::std::string* tag);

  // optional string str_value = 2;
  void clear_str_value();
  static const int kStrValueFieldNumber = 2;
  const ::std::string& str_value() const;
  void set_str_value(const ::std::string& value);
  void set_str_value(const char* value);
  void set_str_value(const char* value, size_t size);
  ::std::string* mutable_str_value();
  ::std::string* release_str_value();
  void set_allocated_str_value(::std::string* str_value);

  // optional int32 i32_value = 3;
  void clear_i32_value();
  static const int kI32ValueFieldNumber = 3;
  ::google::protobuf::int32 i32_value() const;
  void set_i32_value(::google::protobuf::int32 value);

  // optional int64 i64_value = 4;
  void clear_i64_value();
  static const int kI64ValueFieldNumber = 4;
  ::google::protobuf::int64 i64_value() const;
  void set_i64_value(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:com.adv.msg.PDataCell)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr tag_;
  ::google::protobuf::internal::ArenaStringPtr str_value_;
  ::google::protobuf::int64 i64_value_;
  ::google::protobuf::int32 i32_value_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_adv_5fbase_2eproto();
  friend void protobuf_AssignDesc_adv_5fbase_2eproto();
  friend void protobuf_ShutdownFile_adv_5fbase_2eproto();

  void InitAsDefaultInstance();
  static PDataCell* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RetBase

// optional int32 retcode = 1;
inline void RetBase::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 RetBase::retcode() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.RetBase.retcode)
  return retcode_;
}
inline void RetBase::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.RetBase.retcode)
}

// optional string retmsg = 2;
inline void RetBase::clear_retmsg() {
  retmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RetBase::retmsg() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.RetBase.retmsg)
  return retmsg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RetBase::set_retmsg(const ::std::string& value) {
  
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.RetBase.retmsg)
}
inline void RetBase::set_retmsg(const char* value) {
  
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.RetBase.retmsg)
}
inline void RetBase::set_retmsg(const char* value, size_t size) {
  
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.RetBase.retmsg)
}
inline ::std::string* RetBase::mutable_retmsg() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.RetBase.retmsg)
  return retmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RetBase::release_retmsg() {
  // @@protoc_insertion_point(field_release:com.adv.msg.RetBase.retmsg)
  
  return retmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RetBase::set_allocated_retmsg(::std::string* retmsg) {
  if (retmsg != NULL) {
    
  } else {
    
  }
  retmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), retmsg);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.RetBase.retmsg)
}

// -------------------------------------------------------------------

// TaskInfo

// optional int64 taskid = 1;
inline void TaskInfo::clear_taskid() {
  taskid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TaskInfo::taskid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.TaskInfo.taskid)
  return taskid_;
}
inline void TaskInfo::set_taskid(::google::protobuf::int64 value) {
  
  taskid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.TaskInfo.taskid)
}

// optional int32 tasktype = 2;
inline void TaskInfo::clear_tasktype() {
  tasktype_ = 0;
}
inline ::google::protobuf::int32 TaskInfo::tasktype() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.TaskInfo.tasktype)
  return tasktype_;
}
inline void TaskInfo::set_tasktype(::google::protobuf::int32 value) {
  
  tasktype_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.TaskInfo.tasktype)
}

// optional string taskname = 3;
inline void TaskInfo::clear_taskname() {
  taskname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TaskInfo::taskname() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.TaskInfo.taskname)
  return taskname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskInfo::set_taskname(const ::std::string& value) {
  
  taskname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.TaskInfo.taskname)
}
inline void TaskInfo::set_taskname(const char* value) {
  
  taskname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.TaskInfo.taskname)
}
inline void TaskInfo::set_taskname(const char* value, size_t size) {
  
  taskname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.TaskInfo.taskname)
}
inline ::std::string* TaskInfo::mutable_taskname() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.TaskInfo.taskname)
  return taskname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TaskInfo::release_taskname() {
  // @@protoc_insertion_point(field_release:com.adv.msg.TaskInfo.taskname)
  
  return taskname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskInfo::set_allocated_taskname(::std::string* taskname) {
  if (taskname != NULL) {
    
  } else {
    
  }
  taskname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), taskname);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.TaskInfo.taskname)
}

// optional string tasklink = 4;
inline void TaskInfo::clear_tasklink() {
  tasklink_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TaskInfo::tasklink() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.TaskInfo.tasklink)
  return tasklink_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskInfo::set_tasklink(const ::std::string& value) {
  
  tasklink_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.TaskInfo.tasklink)
}
inline void TaskInfo::set_tasklink(const char* value) {
  
  tasklink_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.TaskInfo.tasklink)
}
inline void TaskInfo::set_tasklink(const char* value, size_t size) {
  
  tasklink_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.TaskInfo.tasklink)
}
inline ::std::string* TaskInfo::mutable_tasklink() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.TaskInfo.tasklink)
  return tasklink_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TaskInfo::release_tasklink() {
  // @@protoc_insertion_point(field_release:com.adv.msg.TaskInfo.tasklink)
  
  return tasklink_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskInfo::set_allocated_tasklink(::std::string* tasklink) {
  if (tasklink != NULL) {
    
  } else {
    
  }
  tasklink_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tasklink);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.TaskInfo.tasklink)
}

// optional string taskdesc = 5;
inline void TaskInfo::clear_taskdesc() {
  taskdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TaskInfo::taskdesc() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.TaskInfo.taskdesc)
  return taskdesc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskInfo::set_taskdesc(const ::std::string& value) {
  
  taskdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.TaskInfo.taskdesc)
}
inline void TaskInfo::set_taskdesc(const char* value) {
  
  taskdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.TaskInfo.taskdesc)
}
inline void TaskInfo::set_taskdesc(const char* value, size_t size) {
  
  taskdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.TaskInfo.taskdesc)
}
inline ::std::string* TaskInfo::mutable_taskdesc() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.TaskInfo.taskdesc)
  return taskdesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TaskInfo::release_taskdesc() {
  // @@protoc_insertion_point(field_release:com.adv.msg.TaskInfo.taskdesc)
  
  return taskdesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskInfo::set_allocated_taskdesc(::std::string* taskdesc) {
  if (taskdesc != NULL) {
    
  } else {
    
  }
  taskdesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), taskdesc);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.TaskInfo.taskdesc)
}

// optional int32 tasksize = 6;
inline void TaskInfo::clear_tasksize() {
  tasksize_ = 0;
}
inline ::google::protobuf::int32 TaskInfo::tasksize() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.TaskInfo.tasksize)
  return tasksize_;
}
inline void TaskInfo::set_tasksize(::google::protobuf::int32 value) {
  
  tasksize_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.TaskInfo.tasksize)
}

// optional string taskprice = 7;
inline void TaskInfo::clear_taskprice() {
  taskprice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TaskInfo::taskprice() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.TaskInfo.taskprice)
  return taskprice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskInfo::set_taskprice(const ::std::string& value) {
  
  taskprice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.TaskInfo.taskprice)
}
inline void TaskInfo::set_taskprice(const char* value) {
  
  taskprice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.TaskInfo.taskprice)
}
inline void TaskInfo::set_taskprice(const char* value, size_t size) {
  
  taskprice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.TaskInfo.taskprice)
}
inline ::std::string* TaskInfo::mutable_taskprice() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.TaskInfo.taskprice)
  return taskprice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TaskInfo::release_taskprice() {
  // @@protoc_insertion_point(field_release:com.adv.msg.TaskInfo.taskprice)
  
  return taskprice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskInfo::set_allocated_taskprice(::std::string* taskprice) {
  if (taskprice != NULL) {
    
  } else {
    
  }
  taskprice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), taskprice);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.TaskInfo.taskprice)
}

// optional int32 taskptstep = 8;
inline void TaskInfo::clear_taskptstep() {
  taskptstep_ = 0;
}
inline ::google::protobuf::int32 TaskInfo::taskptstep() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.TaskInfo.taskptstep)
  return taskptstep_;
}
inline void TaskInfo::set_taskptstep(::google::protobuf::int32 value) {
  
  taskptstep_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.TaskInfo.taskptstep)
}

// optional int32 taskpcstep = 9;
inline void TaskInfo::clear_taskpcstep() {
  taskpcstep_ = 0;
}
inline ::google::protobuf::int32 TaskInfo::taskpcstep() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.TaskInfo.taskpcstep)
  return taskpcstep_;
}
inline void TaskInfo::set_taskpcstep(::google::protobuf::int32 value) {
  
  taskpcstep_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.TaskInfo.taskpcstep)
}

// optional string taskpublisher = 10;
inline void TaskInfo::clear_taskpublisher() {
  taskpublisher_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TaskInfo::taskpublisher() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.TaskInfo.taskpublisher)
  return taskpublisher_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskInfo::set_taskpublisher(const ::std::string& value) {
  
  taskpublisher_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.TaskInfo.taskpublisher)
}
inline void TaskInfo::set_taskpublisher(const char* value) {
  
  taskpublisher_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.TaskInfo.taskpublisher)
}
inline void TaskInfo::set_taskpublisher(const char* value, size_t size) {
  
  taskpublisher_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.TaskInfo.taskpublisher)
}
inline ::std::string* TaskInfo::mutable_taskpublisher() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.TaskInfo.taskpublisher)
  return taskpublisher_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TaskInfo::release_taskpublisher() {
  // @@protoc_insertion_point(field_release:com.adv.msg.TaskInfo.taskpublisher)
  
  return taskpublisher_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskInfo::set_allocated_taskpublisher(::std::string* taskpublisher) {
  if (taskpublisher != NULL) {
    
  } else {
    
  }
  taskpublisher_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), taskpublisher);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.TaskInfo.taskpublisher)
}

// optional int32 tasktotalnum = 11;
inline void TaskInfo::clear_tasktotalnum() {
  tasktotalnum_ = 0;
}
inline ::google::protobuf::int32 TaskInfo::tasktotalnum() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.TaskInfo.tasktotalnum)
  return tasktotalnum_;
}
inline void TaskInfo::set_tasktotalnum(::google::protobuf::int32 value) {
  
  tasktotalnum_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.TaskInfo.tasktotalnum)
}

// optional int32 taskusednum = 12;
inline void TaskInfo::clear_taskusednum() {
  taskusednum_ = 0;
}
inline ::google::protobuf::int32 TaskInfo::taskusednum() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.TaskInfo.taskusednum)
  return taskusednum_;
}
inline void TaskInfo::set_taskusednum(::google::protobuf::int32 value) {
  
  taskusednum_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.TaskInfo.taskusednum)
}

// optional int64 taskstime = 13;
inline void TaskInfo::clear_taskstime() {
  taskstime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TaskInfo::taskstime() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.TaskInfo.taskstime)
  return taskstime_;
}
inline void TaskInfo::set_taskstime(::google::protobuf::int64 value) {
  
  taskstime_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.TaskInfo.taskstime)
}

// optional int64 tasketime = 14;
inline void TaskInfo::clear_tasketime() {
  tasketime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TaskInfo::tasketime() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.TaskInfo.tasketime)
  return tasketime_;
}
inline void TaskInfo::set_tasketime(::google::protobuf::int64 value) {
  
  tasketime_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.TaskInfo.tasketime)
}

// optional int32 taskstatus = 15;
inline void TaskInfo::clear_taskstatus() {
  taskstatus_ = 0;
}
inline ::google::protobuf::int32 TaskInfo::taskstatus() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.TaskInfo.taskstatus)
  return taskstatus_;
}
inline void TaskInfo::set_taskstatus(::google::protobuf::int32 value) {
  
  taskstatus_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.TaskInfo.taskstatus)
}

// optional string taskicon = 16;
inline void TaskInfo::clear_taskicon() {
  taskicon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TaskInfo::taskicon() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.TaskInfo.taskicon)
  return taskicon_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskInfo::set_taskicon(const ::std::string& value) {
  
  taskicon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.TaskInfo.taskicon)
}
inline void TaskInfo::set_taskicon(const char* value) {
  
  taskicon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.TaskInfo.taskicon)
}
inline void TaskInfo::set_taskicon(const char* value, size_t size) {
  
  taskicon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.TaskInfo.taskicon)
}
inline ::std::string* TaskInfo::mutable_taskicon() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.TaskInfo.taskicon)
  return taskicon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TaskInfo::release_taskicon() {
  // @@protoc_insertion_point(field_release:com.adv.msg.TaskInfo.taskicon)
  
  return taskicon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskInfo::set_allocated_taskicon(::std::string* taskicon) {
  if (taskicon != NULL) {
    
  } else {
    
  }
  taskicon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), taskicon);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.TaskInfo.taskicon)
}

// optional string taskpkgname = 17;
inline void TaskInfo::clear_taskpkgname() {
  taskpkgname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TaskInfo::taskpkgname() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.TaskInfo.taskpkgname)
  return taskpkgname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskInfo::set_taskpkgname(const ::std::string& value) {
  
  taskpkgname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.TaskInfo.taskpkgname)
}
inline void TaskInfo::set_taskpkgname(const char* value) {
  
  taskpkgname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.TaskInfo.taskpkgname)
}
inline void TaskInfo::set_taskpkgname(const char* value, size_t size) {
  
  taskpkgname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.TaskInfo.taskpkgname)
}
inline ::std::string* TaskInfo::mutable_taskpkgname() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.TaskInfo.taskpkgname)
  return taskpkgname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TaskInfo::release_taskpkgname() {
  // @@protoc_insertion_point(field_release:com.adv.msg.TaskInfo.taskpkgname)
  
  return taskpkgname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskInfo::set_allocated_taskpkgname(::std::string* taskpkgname) {
  if (taskpkgname != NULL) {
    
  } else {
    
  }
  taskpkgname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), taskpkgname);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.TaskInfo.taskpkgname)
}

// -------------------------------------------------------------------

// PField

// optional string name = 1;
inline void PField::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PField::name() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.PField.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PField::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.PField.name)
}
inline void PField::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.PField.name)
}
inline void PField::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.PField.name)
}
inline ::std::string* PField::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.PField.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PField::release_name() {
  // @@protoc_insertion_point(field_release:com.adv.msg.PField.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PField::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.PField.name)
}

// optional string value = 2;
inline void PField::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PField::value() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.PField.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PField::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.PField.value)
}
inline void PField::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.PField.value)
}
inline void PField::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.PField.value)
}
inline ::std::string* PField::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.PField.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PField::release_value() {
  // @@protoc_insertion_point(field_release:com.adv.msg.PField.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PField::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.PField.value)
}

// optional int32 valuetype = 3;
inline void PField::clear_valuetype() {
  valuetype_ = 0;
}
inline ::google::protobuf::int32 PField::valuetype() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.PField.valuetype)
  return valuetype_;
}
inline void PField::set_valuetype(::google::protobuf::int32 value) {
  
  valuetype_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.PField.valuetype)
}

// -------------------------------------------------------------------

// PRow

// optional int32 fieldnum = 1;
inline void PRow::clear_fieldnum() {
  fieldnum_ = 0;
}
inline ::google::protobuf::int32 PRow::fieldnum() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.PRow.fieldnum)
  return fieldnum_;
}
inline void PRow::set_fieldnum(::google::protobuf::int32 value) {
  
  fieldnum_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.PRow.fieldnum)
}

// repeated .com.adv.msg.PField field = 2;
inline int PRow::field_size() const {
  return field_.size();
}
inline void PRow::clear_field() {
  field_.Clear();
}
inline const ::com::adv::msg::PField& PRow::field(int index) const {
  // @@protoc_insertion_point(field_get:com.adv.msg.PRow.field)
  return field_.Get(index);
}
inline ::com::adv::msg::PField* PRow::mutable_field(int index) {
  // @@protoc_insertion_point(field_mutable:com.adv.msg.PRow.field)
  return field_.Mutable(index);
}
inline ::com::adv::msg::PField* PRow::add_field() {
  // @@protoc_insertion_point(field_add:com.adv.msg.PRow.field)
  return field_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::com::adv::msg::PField >*
PRow::mutable_field() {
  // @@protoc_insertion_point(field_mutable_list:com.adv.msg.PRow.field)
  return &field_;
}
inline const ::google::protobuf::RepeatedPtrField< ::com::adv::msg::PField >&
PRow::field() const {
  // @@protoc_insertion_point(field_list:com.adv.msg.PRow.field)
  return field_;
}

// -------------------------------------------------------------------

// PDataCell

// optional string tag = 1;
inline void PDataCell::clear_tag() {
  tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PDataCell::tag() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.PDataCell.tag)
  return tag_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PDataCell::set_tag(const ::std::string& value) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.PDataCell.tag)
}
inline void PDataCell::set_tag(const char* value) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.PDataCell.tag)
}
inline void PDataCell::set_tag(const char* value, size_t size) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.PDataCell.tag)
}
inline ::std::string* PDataCell::mutable_tag() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.PDataCell.tag)
  return tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PDataCell::release_tag() {
  // @@protoc_insertion_point(field_release:com.adv.msg.PDataCell.tag)
  
  return tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PDataCell::set_allocated_tag(::std::string* tag) {
  if (tag != NULL) {
    
  } else {
    
  }
  tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.PDataCell.tag)
}

// optional string str_value = 2;
inline void PDataCell::clear_str_value() {
  str_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PDataCell::str_value() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.PDataCell.str_value)
  return str_value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PDataCell::set_str_value(const ::std::string& value) {
  
  str_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.PDataCell.str_value)
}
inline void PDataCell::set_str_value(const char* value) {
  
  str_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.PDataCell.str_value)
}
inline void PDataCell::set_str_value(const char* value, size_t size) {
  
  str_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.PDataCell.str_value)
}
inline ::std::string* PDataCell::mutable_str_value() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.PDataCell.str_value)
  return str_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PDataCell::release_str_value() {
  // @@protoc_insertion_point(field_release:com.adv.msg.PDataCell.str_value)
  
  return str_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PDataCell::set_allocated_str_value(::std::string* str_value) {
  if (str_value != NULL) {
    
  } else {
    
  }
  str_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str_value);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.PDataCell.str_value)
}

// optional int32 i32_value = 3;
inline void PDataCell::clear_i32_value() {
  i32_value_ = 0;
}
inline ::google::protobuf::int32 PDataCell::i32_value() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.PDataCell.i32_value)
  return i32_value_;
}
inline void PDataCell::set_i32_value(::google::protobuf::int32 value) {
  
  i32_value_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.PDataCell.i32_value)
}

// optional int64 i64_value = 4;
inline void PDataCell::clear_i64_value() {
  i64_value_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PDataCell::i64_value() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.PDataCell.i64_value)
  return i64_value_;
}
inline void PDataCell::set_i64_value(::google::protobuf::int64 value) {
  
  i64_value_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.PDataCell.i64_value)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace msg
}  // namespace adv
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_adv_5fbase_2eproto__INCLUDED
