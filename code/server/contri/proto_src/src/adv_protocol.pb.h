// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: adv_protocol.proto

#ifndef PROTOBUF_adv_5fprotocol_2eproto__INCLUDED
#define PROTOBUF_adv_5fprotocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "adv_base.pb.h"
// @@protoc_insertion_point(includes)

namespace com {
namespace adv {
namespace msg {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_adv_5fprotocol_2eproto();
void protobuf_AssignDesc_adv_5fprotocol_2eproto();
void protobuf_ShutdownFile_adv_5fprotocol_2eproto();

class AckRequest;
class GetIncomeRequest;
class GetIncomeResult;
class InnerCommonMsg;
class LoginRequest;
class LoginResult;
class LogoutRequest;
class LogoutResult;
class MysqlRequest;
class MysqlResult;
class RedispRequest;
class RedispResult;
class ReportTaskRequest;
class ReportTaskResult;
class SaveTaskRequest;
class SaveTaskResult;
class SyncTaskRequest;
class SyncTaskResult;
class TaskNotify;
class UserKeepAliveRequest;
class UserKeepAliveResult;
class WithdrawRequest;
class WithdrawResult;

// ===================================================================

class UserKeepAliveRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.adv.msg.UserKeepAliveRequest) */ {
 public:
  UserKeepAliveRequest();
  virtual ~UserKeepAliveRequest();

  UserKeepAliveRequest(const UserKeepAliveRequest& from);

  inline UserKeepAliveRequest& operator=(const UserKeepAliveRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserKeepAliveRequest& default_instance();

  void Swap(UserKeepAliveRequest* other);

  // implements Message ----------------------------------------------

  inline UserKeepAliveRequest* New() const { return New(NULL); }

  UserKeepAliveRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserKeepAliveRequest& from);
  void MergeFrom(const UserKeepAliveRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserKeepAliveRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 condid = 1;
  void clear_condid();
  static const int kCondidFieldNumber = 1;
  ::google::protobuf::int32 condid() const;
  void set_condid(::google::protobuf::int32 value);

  // optional int32 devicetype = 2;
  void clear_devicetype();
  static const int kDevicetypeFieldNumber = 2;
  ::google::protobuf::int32 devicetype() const;
  void set_devicetype(::google::protobuf::int32 value);

  // optional string deviceid = 3;
  void clear_deviceid();
  static const int kDeviceidFieldNumber = 3;
  const ::std::string& deviceid() const;
  void set_deviceid(const ::std::string& value);
  void set_deviceid(const char* value);
  void set_deviceid(const char* value, size_t size);
  ::std::string* mutable_deviceid();
  ::std::string* release_deviceid();
  void set_allocated_deviceid(::std::string* deviceid);

  // optional int32 uid = 4;
  void clear_uid();
  static const int kUidFieldNumber = 4;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // optional int32 version = 5;
  void clear_version();
  static const int kVersionFieldNumber = 5;
  ::google::protobuf::int32 version() const;
  void set_version(::google::protobuf::int32 value);

  // optional int32 transid = 32;
  void clear_transid();
  static const int kTransidFieldNumber = 32;
  ::google::protobuf::int32 transid() const;
  void set_transid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.adv.msg.UserKeepAliveRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 condid_;
  ::google::protobuf::int32 devicetype_;
  ::google::protobuf::internal::ArenaStringPtr deviceid_;
  ::google::protobuf::int32 uid_;
  ::google::protobuf::int32 version_;
  ::google::protobuf::int32 transid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_adv_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_adv_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_adv_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static UserKeepAliveRequest* default_instance_;
};
// -------------------------------------------------------------------

class UserKeepAliveResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.adv.msg.UserKeepAliveResult) */ {
 public:
  UserKeepAliveResult();
  virtual ~UserKeepAliveResult();

  UserKeepAliveResult(const UserKeepAliveResult& from);

  inline UserKeepAliveResult& operator=(const UserKeepAliveResult& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserKeepAliveResult& default_instance();

  void Swap(UserKeepAliveResult* other);

  // implements Message ----------------------------------------------

  inline UserKeepAliveResult* New() const { return New(NULL); }

  UserKeepAliveResult* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserKeepAliveResult& from);
  void MergeFrom(const UserKeepAliveResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserKeepAliveResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .com.adv.msg.RetBase retbase = 1;
  bool has_retbase() const;
  void clear_retbase();
  static const int kRetbaseFieldNumber = 1;
  const ::com::adv::msg::RetBase& retbase() const;
  ::com::adv::msg::RetBase* mutable_retbase();
  ::com::adv::msg::RetBase* release_retbase();
  void set_allocated_retbase(::com::adv::msg::RetBase* retbase);

  // optional int32 condid = 2;
  void clear_condid();
  static const int kCondidFieldNumber = 2;
  ::google::protobuf::int32 condid() const;
  void set_condid(::google::protobuf::int32 value);

  // optional int32 devicetype = 3;
  void clear_devicetype();
  static const int kDevicetypeFieldNumber = 3;
  ::google::protobuf::int32 devicetype() const;
  void set_devicetype(::google::protobuf::int32 value);

  // optional string deviceid = 4;
  void clear_deviceid();
  static const int kDeviceidFieldNumber = 4;
  const ::std::string& deviceid() const;
  void set_deviceid(const ::std::string& value);
  void set_deviceid(const char* value);
  void set_deviceid(const char* value, size_t size);
  ::std::string* mutable_deviceid();
  ::std::string* release_deviceid();
  void set_allocated_deviceid(::std::string* deviceid);

  // optional int32 uid = 5;
  void clear_uid();
  static const int kUidFieldNumber = 5;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // optional int32 version = 6;
  void clear_version();
  static const int kVersionFieldNumber = 6;
  ::google::protobuf::int32 version() const;
  void set_version(::google::protobuf::int32 value);

  // optional int32 transid = 32;
  void clear_transid();
  static const int kTransidFieldNumber = 32;
  ::google::protobuf::int32 transid() const;
  void set_transid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.adv.msg.UserKeepAliveResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::com::adv::msg::RetBase* retbase_;
  ::google::protobuf::int32 condid_;
  ::google::protobuf::int32 devicetype_;
  ::google::protobuf::internal::ArenaStringPtr deviceid_;
  ::google::protobuf::int32 uid_;
  ::google::protobuf::int32 version_;
  ::google::protobuf::int32 transid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_adv_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_adv_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_adv_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static UserKeepAliveResult* default_instance_;
};
// -------------------------------------------------------------------

class LoginRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.adv.msg.LoginRequest) */ {
 public:
  LoginRequest();
  virtual ~LoginRequest();

  LoginRequest(const LoginRequest& from);

  inline LoginRequest& operator=(const LoginRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRequest& default_instance();

  void Swap(LoginRequest* other);

  // implements Message ----------------------------------------------

  inline LoginRequest* New() const { return New(NULL); }

  LoginRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginRequest& from);
  void MergeFrom(const LoginRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // optional int32 magicnum = 2;
  void clear_magicnum();
  static const int kMagicnumFieldNumber = 2;
  ::google::protobuf::int32 magicnum() const;
  void set_magicnum(::google::protobuf::int32 value);

  // optional int32 status = 3;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // optional int32 devicetype = 4;
  void clear_devicetype();
  static const int kDevicetypeFieldNumber = 4;
  ::google::protobuf::int32 devicetype() const;
  void set_devicetype(::google::protobuf::int32 value);

  // optional string deviceid = 6;
  void clear_deviceid();
  static const int kDeviceidFieldNumber = 6;
  const ::std::string& deviceid() const;
  void set_deviceid(const ::std::string& value);
  void set_deviceid(const char* value);
  void set_deviceid(const char* value, size_t size);
  ::std::string* mutable_deviceid();
  ::std::string* release_deviceid();
  void set_allocated_deviceid(::std::string* deviceid);

  // optional string description = 7;
  void clear_description();
  static const int kDescriptionFieldNumber = 7;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // optional int32 condid = 8;
  void clear_condid();
  static const int kCondidFieldNumber = 8;
  ::google::protobuf::int32 condid() const;
  void set_condid(::google::protobuf::int32 value);

  // optional int32 loginseq = 9;
  void clear_loginseq();
  static const int kLoginseqFieldNumber = 9;
  ::google::protobuf::int32 loginseq() const;
  void set_loginseq(::google::protobuf::int32 value);

  // optional int32 accounttype = 10;
  void clear_accounttype();
  static const int kAccounttypeFieldNumber = 10;
  ::google::protobuf::int32 accounttype() const;
  void set_accounttype(::google::protobuf::int32 value);

  // optional string account = 11;
  void clear_account();
  static const int kAccountFieldNumber = 11;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string passwd = 12;
  void clear_passwd();
  static const int kPasswdFieldNumber = 12;
  const ::std::string& passwd() const;
  void set_passwd(const ::std::string& value);
  void set_passwd(const char* value);
  void set_passwd(const char* value, size_t size);
  ::std::string* mutable_passwd();
  ::std::string* release_passwd();
  void set_allocated_passwd(::std::string* passwd);

  // optional int32 version = 13;
  void clear_version();
  static const int kVersionFieldNumber = 13;
  ::google::protobuf::int32 version() const;
  void set_version(::google::protobuf::int32 value);

  // optional string nickname = 14;
  void clear_nickname();
  static const int kNicknameFieldNumber = 14;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional int32 gender = 15;
  void clear_gender();
  static const int kGenderFieldNumber = 15;
  ::google::protobuf::int32 gender() const;
  void set_gender(::google::protobuf::int32 value);

  // optional string province = 16;
  void clear_province();
  static const int kProvinceFieldNumber = 16;
  const ::std::string& province() const;
  void set_province(const ::std::string& value);
  void set_province(const char* value);
  void set_province(const char* value, size_t size);
  ::std::string* mutable_province();
  ::std::string* release_province();
  void set_allocated_province(::std::string* province);

  // optional string city = 17;
  void clear_city();
  static const int kCityFieldNumber = 17;
  const ::std::string& city() const;
  void set_city(const ::std::string& value);
  void set_city(const char* value);
  void set_city(const char* value, size_t size);
  ::std::string* mutable_city();
  ::std::string* release_city();
  void set_allocated_city(::std::string* city);

  // optional string country = 18;
  void clear_country();
  static const int kCountryFieldNumber = 18;
  const ::std::string& country() const;
  void set_country(const ::std::string& value);
  void set_country(const char* value);
  void set_country(const char* value, size_t size);
  ::std::string* mutable_country();
  ::std::string* release_country();
  void set_allocated_country(::std::string* country);

  // optional string avatar = 19;
  void clear_avatar();
  static const int kAvatarFieldNumber = 19;
  const ::std::string& avatar() const;
  void set_avatar(const ::std::string& value);
  void set_avatar(const char* value);
  void set_avatar(const char* value, size_t size);
  ::std::string* mutable_avatar();
  ::std::string* release_avatar();
  void set_allocated_avatar(::std::string* avatar);

  // optional string desc = 20;
  void clear_desc();
  static const int kDescFieldNumber = 20;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  void set_desc(const char* value);
  void set_desc(const char* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // optional string email = 21;
  void clear_email();
  static const int kEmailFieldNumber = 21;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // optional string mobile = 22;
  void clear_mobile();
  static const int kMobileFieldNumber = 22;
  const ::std::string& mobile() const;
  void set_mobile(const ::std::string& value);
  void set_mobile(const char* value);
  void set_mobile(const char* value, size_t size);
  ::std::string* mutable_mobile();
  ::std::string* release_mobile();
  void set_allocated_mobile(::std::string* mobile);

  // optional int32 time = 23;
  void clear_time();
  static const int kTimeFieldNumber = 23;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // optional int32 uid = 24;
  void clear_uid();
  static const int kUidFieldNumber = 24;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // optional int32 flag = 25;
  void clear_flag();
  static const int kFlagFieldNumber = 25;
  ::google::protobuf::int32 flag() const;
  void set_flag(::google::protobuf::int32 value);

  // optional int32 transid = 32;
  void clear_transid();
  static const int kTransidFieldNumber = 32;
  ::google::protobuf::int32 transid() const;
  void set_transid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.adv.msg.LoginRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::int32 magicnum_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::internal::ArenaStringPtr deviceid_;
  ::google::protobuf::int32 devicetype_;
  ::google::protobuf::int32 condid_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::int32 loginseq_;
  ::google::protobuf::int32 accounttype_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr passwd_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::int32 version_;
  ::google::protobuf::int32 gender_;
  ::google::protobuf::internal::ArenaStringPtr province_;
  ::google::protobuf::internal::ArenaStringPtr city_;
  ::google::protobuf::internal::ArenaStringPtr country_;
  ::google::protobuf::internal::ArenaStringPtr avatar_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  ::google::protobuf::internal::ArenaStringPtr mobile_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 uid_;
  ::google::protobuf::int32 flag_;
  ::google::protobuf::int32 transid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_adv_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_adv_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_adv_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static LoginRequest* default_instance_;
};
// -------------------------------------------------------------------

class LoginResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.adv.msg.LoginResult) */ {
 public:
  LoginResult();
  virtual ~LoginResult();

  LoginResult(const LoginResult& from);

  inline LoginResult& operator=(const LoginResult& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginResult& default_instance();

  void Swap(LoginResult* other);

  // implements Message ----------------------------------------------

  inline LoginResult* New() const { return New(NULL); }

  LoginResult* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginResult& from);
  void MergeFrom(const LoginResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .com.adv.msg.RetBase retbase = 1;
  bool has_retbase() const;
  void clear_retbase();
  static const int kRetbaseFieldNumber = 1;
  const ::com::adv::msg::RetBase& retbase() const;
  ::com::adv::msg::RetBase* mutable_retbase();
  ::com::adv::msg::RetBase* release_retbase();
  void set_allocated_retbase(::com::adv::msg::RetBase* retbase);

  // optional string key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional int32 uid = 3;
  void clear_uid();
  static const int kUidFieldNumber = 3;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // optional int32 loginseq = 4;
  void clear_loginseq();
  static const int kLoginseqFieldNumber = 4;
  ::google::protobuf::int32 loginseq() const;
  void set_loginseq(::google::protobuf::int32 value);

  // optional int32 accounttype = 5;
  void clear_accounttype();
  static const int kAccounttypeFieldNumber = 5;
  ::google::protobuf::int32 accounttype() const;
  void set_accounttype(::google::protobuf::int32 value);

  // optional int32 time = 6;
  void clear_time();
  static const int kTimeFieldNumber = 6;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // optional int32 transid = 32;
  void clear_transid();
  static const int kTransidFieldNumber = 32;
  ::google::protobuf::int32 transid() const;
  void set_transid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.adv.msg.LoginResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::com::adv::msg::RetBase* retbase_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::int32 uid_;
  ::google::protobuf::int32 loginseq_;
  ::google::protobuf::int32 accounttype_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 transid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_adv_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_adv_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_adv_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static LoginResult* default_instance_;
};
// -------------------------------------------------------------------

class LogoutRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.adv.msg.LogoutRequest) */ {
 public:
  LogoutRequest();
  virtual ~LogoutRequest();

  LogoutRequest(const LogoutRequest& from);

  inline LogoutRequest& operator=(const LogoutRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogoutRequest& default_instance();

  void Swap(LogoutRequest* other);

  // implements Message ----------------------------------------------

  inline LogoutRequest* New() const { return New(NULL); }

  LogoutRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogoutRequest& from);
  void MergeFrom(const LogoutRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LogoutRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 deviceType = 1;
  void clear_devicetype();
  static const int kDeviceTypeFieldNumber = 1;
  ::google::protobuf::int32 devicetype() const;
  void set_devicetype(::google::protobuf::int32 value);

  // optional string deviceid = 2;
  void clear_deviceid();
  static const int kDeviceidFieldNumber = 2;
  const ::std::string& deviceid() const;
  void set_deviceid(const ::std::string& value);
  void set_deviceid(const char* value);
  void set_deviceid(const char* value, size_t size);
  ::std::string* mutable_deviceid();
  ::std::string* release_deviceid();
  void set_allocated_deviceid(::std::string* deviceid);

  // optional int32 conid = 3;
  void clear_conid();
  static const int kConidFieldNumber = 3;
  ::google::protobuf::int32 conid() const;
  void set_conid(::google::protobuf::int32 value);

  // optional int32 transid = 32;
  void clear_transid();
  static const int kTransidFieldNumber = 32;
  ::google::protobuf::int32 transid() const;
  void set_transid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.adv.msg.LogoutRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr deviceid_;
  ::google::protobuf::int32 devicetype_;
  ::google::protobuf::int32 conid_;
  ::google::protobuf::int32 transid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_adv_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_adv_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_adv_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static LogoutRequest* default_instance_;
};
// -------------------------------------------------------------------

class LogoutResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.adv.msg.LogoutResult) */ {
 public:
  LogoutResult();
  virtual ~LogoutResult();

  LogoutResult(const LogoutResult& from);

  inline LogoutResult& operator=(const LogoutResult& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogoutResult& default_instance();

  void Swap(LogoutResult* other);

  // implements Message ----------------------------------------------

  inline LogoutResult* New() const { return New(NULL); }

  LogoutResult* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogoutResult& from);
  void MergeFrom(const LogoutResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LogoutResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .com.adv.msg.RetBase retbase = 1;
  bool has_retbase() const;
  void clear_retbase();
  static const int kRetbaseFieldNumber = 1;
  const ::com::adv::msg::RetBase& retbase() const;
  ::com::adv::msg::RetBase* mutable_retbase();
  ::com::adv::msg::RetBase* release_retbase();
  void set_allocated_retbase(::com::adv::msg::RetBase* retbase);

  // optional int32 transid = 32;
  void clear_transid();
  static const int kTransidFieldNumber = 32;
  ::google::protobuf::int32 transid() const;
  void set_transid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.adv.msg.LogoutResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::com::adv::msg::RetBase* retbase_;
  ::google::protobuf::int32 transid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_adv_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_adv_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_adv_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static LogoutResult* default_instance_;
};
// -------------------------------------------------------------------

class TaskNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.adv.msg.TaskNotify) */ {
 public:
  TaskNotify();
  virtual ~TaskNotify();

  TaskNotify(const TaskNotify& from);

  inline TaskNotify& operator=(const TaskNotify& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskNotify& default_instance();

  void Swap(TaskNotify* other);

  // implements Message ----------------------------------------------

  inline TaskNotify* New() const { return New(NULL); }

  TaskNotify* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaskNotify& from);
  void MergeFrom(const TaskNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TaskNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 tasktype = 1;
  void clear_tasktype();
  static const int kTasktypeFieldNumber = 1;
  ::google::protobuf::int32 tasktype() const;
  void set_tasktype(::google::protobuf::int32 value);

  // optional int32 transid = 32;
  void clear_transid();
  static const int kTransidFieldNumber = 32;
  ::google::protobuf::int32 transid() const;
  void set_transid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.adv.msg.TaskNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 tasktype_;
  ::google::protobuf::int32 transid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_adv_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_adv_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_adv_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static TaskNotify* default_instance_;
};
// -------------------------------------------------------------------

class SyncTaskRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.adv.msg.SyncTaskRequest) */ {
 public:
  SyncTaskRequest();
  virtual ~SyncTaskRequest();

  SyncTaskRequest(const SyncTaskRequest& from);

  inline SyncTaskRequest& operator=(const SyncTaskRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncTaskRequest& default_instance();

  void Swap(SyncTaskRequest* other);

  // implements Message ----------------------------------------------

  inline SyncTaskRequest* New() const { return New(NULL); }

  SyncTaskRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SyncTaskRequest& from);
  void MergeFrom(const SyncTaskRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SyncTaskRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 syncpoint = 1;
  void clear_syncpoint();
  static const int kSyncpointFieldNumber = 1;
  ::google::protobuf::int64 syncpoint() const;
  void set_syncpoint(::google::protobuf::int64 value);

  // optional int32 synctype = 2;
  void clear_synctype();
  static const int kSynctypeFieldNumber = 2;
  ::google::protobuf::int32 synctype() const;
  void set_synctype(::google::protobuf::int32 value);

  // optional int32 syncflag = 3;
  void clear_syncflag();
  static const int kSyncflagFieldNumber = 3;
  ::google::protobuf::int32 syncflag() const;
  void set_syncflag(::google::protobuf::int32 value);

  // optional int32 synclimit = 4;
  void clear_synclimit();
  static const int kSynclimitFieldNumber = 4;
  ::google::protobuf::int32 synclimit() const;
  void set_synclimit(::google::protobuf::int32 value);

  // optional int32 transid = 32;
  void clear_transid();
  static const int kTransidFieldNumber = 32;
  ::google::protobuf::int32 transid() const;
  void set_transid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.adv.msg.SyncTaskRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 syncpoint_;
  ::google::protobuf::int32 synctype_;
  ::google::protobuf::int32 syncflag_;
  ::google::protobuf::int32 synclimit_;
  ::google::protobuf::int32 transid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_adv_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_adv_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_adv_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static SyncTaskRequest* default_instance_;
};
// -------------------------------------------------------------------

class SyncTaskResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.adv.msg.SyncTaskResult) */ {
 public:
  SyncTaskResult();
  virtual ~SyncTaskResult();

  SyncTaskResult(const SyncTaskResult& from);

  inline SyncTaskResult& operator=(const SyncTaskResult& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncTaskResult& default_instance();

  void Swap(SyncTaskResult* other);

  // implements Message ----------------------------------------------

  inline SyncTaskResult* New() const { return New(NULL); }

  SyncTaskResult* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SyncTaskResult& from);
  void MergeFrom(const SyncTaskResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SyncTaskResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .com.adv.msg.RetBase retbase = 1;
  bool has_retbase() const;
  void clear_retbase();
  static const int kRetbaseFieldNumber = 1;
  const ::com::adv::msg::RetBase& retbase() const;
  ::com::adv::msg::RetBase* mutable_retbase();
  ::com::adv::msg::RetBase* release_retbase();
  void set_allocated_retbase(::com::adv::msg::RetBase* retbase);

  // repeated .com.adv.msg.TaskInfo taskinfos = 2;
  int taskinfos_size() const;
  void clear_taskinfos();
  static const int kTaskinfosFieldNumber = 2;
  const ::com::adv::msg::TaskInfo& taskinfos(int index) const;
  ::com::adv::msg::TaskInfo* mutable_taskinfos(int index);
  ::com::adv::msg::TaskInfo* add_taskinfos();
  ::google::protobuf::RepeatedPtrField< ::com::adv::msg::TaskInfo >*
      mutable_taskinfos();
  const ::google::protobuf::RepeatedPtrField< ::com::adv::msg::TaskInfo >&
      taskinfos() const;

  // optional int32 synctype = 3;
  void clear_synctype();
  static const int kSynctypeFieldNumber = 3;
  ::google::protobuf::int32 synctype() const;
  void set_synctype(::google::protobuf::int32 value);

  // optional int32 continueflag = 4;
  void clear_continueflag();
  static const int kContinueflagFieldNumber = 4;
  ::google::protobuf::int32 continueflag() const;
  void set_continueflag(::google::protobuf::int32 value);

  // optional int64 maxtaskid = 5;
  void clear_maxtaskid();
  static const int kMaxtaskidFieldNumber = 5;
  ::google::protobuf::int64 maxtaskid() const;
  void set_maxtaskid(::google::protobuf::int64 value);

  // optional int32 transid = 32;
  void clear_transid();
  static const int kTransidFieldNumber = 32;
  ::google::protobuf::int32 transid() const;
  void set_transid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.adv.msg.SyncTaskResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::com::adv::msg::RetBase* retbase_;
  ::google::protobuf::RepeatedPtrField< ::com::adv::msg::TaskInfo > taskinfos_;
  ::google::protobuf::int32 synctype_;
  ::google::protobuf::int32 continueflag_;
  ::google::protobuf::int64 maxtaskid_;
  ::google::protobuf::int32 transid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_adv_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_adv_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_adv_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static SyncTaskResult* default_instance_;
};
// -------------------------------------------------------------------

class ReportTaskRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.adv.msg.ReportTaskRequest) */ {
 public:
  ReportTaskRequest();
  virtual ~ReportTaskRequest();

  ReportTaskRequest(const ReportTaskRequest& from);

  inline ReportTaskRequest& operator=(const ReportTaskRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReportTaskRequest& default_instance();

  void Swap(ReportTaskRequest* other);

  // implements Message ----------------------------------------------

  inline ReportTaskRequest* New() const { return New(NULL); }

  ReportTaskRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReportTaskRequest& from);
  void MergeFrom(const ReportTaskRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReportTaskRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .com.adv.msg.TaskInfo taskinfo = 1;
  bool has_taskinfo() const;
  void clear_taskinfo();
  static const int kTaskinfoFieldNumber = 1;
  const ::com::adv::msg::TaskInfo& taskinfo() const;
  ::com::adv::msg::TaskInfo* mutable_taskinfo();
  ::com::adv::msg::TaskInfo* release_taskinfo();
  void set_allocated_taskinfo(::com::adv::msg::TaskInfo* taskinfo);

  // optional string reward = 2;
  void clear_reward();
  static const int kRewardFieldNumber = 2;
  const ::std::string& reward() const;
  void set_reward(const ::std::string& value);
  void set_reward(const char* value);
  void set_reward(const char* value, size_t size);
  ::std::string* mutable_reward();
  ::std::string* release_reward();
  void set_allocated_reward(::std::string* reward);

  // optional int32 transid = 32;
  void clear_transid();
  static const int kTransidFieldNumber = 32;
  ::google::protobuf::int32 transid() const;
  void set_transid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.adv.msg.ReportTaskRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::com::adv::msg::TaskInfo* taskinfo_;
  ::google::protobuf::internal::ArenaStringPtr reward_;
  ::google::protobuf::int32 transid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_adv_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_adv_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_adv_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ReportTaskRequest* default_instance_;
};
// -------------------------------------------------------------------

class ReportTaskResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.adv.msg.ReportTaskResult) */ {
 public:
  ReportTaskResult();
  virtual ~ReportTaskResult();

  ReportTaskResult(const ReportTaskResult& from);

  inline ReportTaskResult& operator=(const ReportTaskResult& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReportTaskResult& default_instance();

  void Swap(ReportTaskResult* other);

  // implements Message ----------------------------------------------

  inline ReportTaskResult* New() const { return New(NULL); }

  ReportTaskResult* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReportTaskResult& from);
  void MergeFrom(const ReportTaskResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReportTaskResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .com.adv.msg.RetBase retbase = 1;
  bool has_retbase() const;
  void clear_retbase();
  static const int kRetbaseFieldNumber = 1;
  const ::com::adv::msg::RetBase& retbase() const;
  ::com::adv::msg::RetBase* mutable_retbase();
  ::com::adv::msg::RetBase* release_retbase();
  void set_allocated_retbase(::com::adv::msg::RetBase* retbase);

  // optional int64 taskid = 2;
  void clear_taskid();
  static const int kTaskidFieldNumber = 2;
  ::google::protobuf::int64 taskid() const;
  void set_taskid(::google::protobuf::int64 value);

  // optional string reward = 3;
  void clear_reward();
  static const int kRewardFieldNumber = 3;
  const ::std::string& reward() const;
  void set_reward(const ::std::string& value);
  void set_reward(const char* value);
  void set_reward(const char* value, size_t size);
  ::std::string* mutable_reward();
  ::std::string* release_reward();
  void set_allocated_reward(::std::string* reward);

  // optional int32 done_step = 4;
  void clear_done_step();
  static const int kDoneStepFieldNumber = 4;
  ::google::protobuf::int32 done_step() const;
  void set_done_step(::google::protobuf::int32 value);

  // optional int32 tasktype = 5;
  void clear_tasktype();
  static const int kTasktypeFieldNumber = 5;
  ::google::protobuf::int32 tasktype() const;
  void set_tasktype(::google::protobuf::int32 value);

  // optional int32 report_time = 6;
  void clear_report_time();
  static const int kReportTimeFieldNumber = 6;
  ::google::protobuf::int32 report_time() const;
  void set_report_time(::google::protobuf::int32 value);

  // optional int32 transid = 32;
  void clear_transid();
  static const int kTransidFieldNumber = 32;
  ::google::protobuf::int32 transid() const;
  void set_transid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.adv.msg.ReportTaskResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::com::adv::msg::RetBase* retbase_;
  ::google::protobuf::int64 taskid_;
  ::google::protobuf::internal::ArenaStringPtr reward_;
  ::google::protobuf::int32 done_step_;
  ::google::protobuf::int32 tasktype_;
  ::google::protobuf::int32 report_time_;
  ::google::protobuf::int32 transid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_adv_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_adv_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_adv_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ReportTaskResult* default_instance_;
};
// -------------------------------------------------------------------

class GetIncomeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.adv.msg.GetIncomeRequest) */ {
 public:
  GetIncomeRequest();
  virtual ~GetIncomeRequest();

  GetIncomeRequest(const GetIncomeRequest& from);

  inline GetIncomeRequest& operator=(const GetIncomeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetIncomeRequest& default_instance();

  void Swap(GetIncomeRequest* other);

  // implements Message ----------------------------------------------

  inline GetIncomeRequest* New() const { return New(NULL); }

  GetIncomeRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetIncomeRequest& from);
  void MergeFrom(const GetIncomeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetIncomeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 transid = 32;
  void clear_transid();
  static const int kTransidFieldNumber = 32;
  ::google::protobuf::int32 transid() const;
  void set_transid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.adv.msg.GetIncomeRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 transid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_adv_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_adv_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_adv_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static GetIncomeRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetIncomeResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.adv.msg.GetIncomeResult) */ {
 public:
  GetIncomeResult();
  virtual ~GetIncomeResult();

  GetIncomeResult(const GetIncomeResult& from);

  inline GetIncomeResult& operator=(const GetIncomeResult& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetIncomeResult& default_instance();

  void Swap(GetIncomeResult* other);

  // implements Message ----------------------------------------------

  inline GetIncomeResult* New() const { return New(NULL); }

  GetIncomeResult* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetIncomeResult& from);
  void MergeFrom(const GetIncomeResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetIncomeResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .com.adv.msg.RetBase retbase = 1;
  bool has_retbase() const;
  void clear_retbase();
  static const int kRetbaseFieldNumber = 1;
  const ::com::adv::msg::RetBase& retbase() const;
  ::com::adv::msg::RetBase* mutable_retbase();
  ::com::adv::msg::RetBase* release_retbase();
  void set_allocated_retbase(::com::adv::msg::RetBase* retbase);

  // optional string pre_cash = 2;
  void clear_pre_cash();
  static const int kPreCashFieldNumber = 2;
  const ::std::string& pre_cash() const;
  void set_pre_cash(const ::std::string& value);
  void set_pre_cash(const char* value);
  void set_pre_cash(const char* value, size_t size);
  ::std::string* mutable_pre_cash();
  ::std::string* release_pre_cash();
  void set_allocated_pre_cash(::std::string* pre_cash);

  // optional string useable_cash = 3;
  void clear_useable_cash();
  static const int kUseableCashFieldNumber = 3;
  const ::std::string& useable_cash() const;
  void set_useable_cash(const ::std::string& value);
  void set_useable_cash(const char* value);
  void set_useable_cash(const char* value, size_t size);
  ::std::string* mutable_useable_cash();
  ::std::string* release_useable_cash();
  void set_allocated_useable_cash(::std::string* useable_cash);

  // optional string fetched_cash = 4;
  void clear_fetched_cash();
  static const int kFetchedCashFieldNumber = 4;
  const ::std::string& fetched_cash() const;
  void set_fetched_cash(const ::std::string& value);
  void set_fetched_cash(const char* value);
  void set_fetched_cash(const char* value, size_t size);
  ::std::string* mutable_fetched_cash();
  ::std::string* release_fetched_cash();
  void set_allocated_fetched_cash(::std::string* fetched_cash);

  // optional int32 rank = 5;
  void clear_rank();
  static const int kRankFieldNumber = 5;
  ::google::protobuf::int32 rank() const;
  void set_rank(::google::protobuf::int32 value);

  // optional string desc = 6;
  void clear_desc();
  static const int kDescFieldNumber = 6;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  void set_desc(const char* value);
  void set_desc(const char* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // optional int32 transid = 32;
  void clear_transid();
  static const int kTransidFieldNumber = 32;
  ::google::protobuf::int32 transid() const;
  void set_transid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.adv.msg.GetIncomeResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::com::adv::msg::RetBase* retbase_;
  ::google::protobuf::internal::ArenaStringPtr pre_cash_;
  ::google::protobuf::internal::ArenaStringPtr useable_cash_;
  ::google::protobuf::internal::ArenaStringPtr fetched_cash_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::google::protobuf::int32 rank_;
  ::google::protobuf::int32 transid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_adv_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_adv_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_adv_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static GetIncomeResult* default_instance_;
};
// -------------------------------------------------------------------

class AckRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.adv.msg.AckRequest) */ {
 public:
  AckRequest();
  virtual ~AckRequest();

  AckRequest(const AckRequest& from);

  inline AckRequest& operator=(const AckRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckRequest& default_instance();

  void Swap(AckRequest* other);

  // implements Message ----------------------------------------------

  inline AckRequest* New() const { return New(NULL); }

  AckRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckRequest& from);
  void MergeFrom(const AckRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AckRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // repeated int64 id = 2;
  int id_size() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int64 id(int index) const;
  void set_id(int index, ::google::protobuf::int64 value);
  void add_id(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_id();

  // optional int32 time = 3;
  void clear_time();
  static const int kTimeFieldNumber = 3;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // optional int32 transid = 32;
  void clear_transid();
  static const int kTransidFieldNumber = 32;
  ::google::protobuf::int32 transid() const;
  void set_transid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.adv.msg.AckRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > id_;
  mutable int _id_cached_byte_size_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 transid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_adv_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_adv_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_adv_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static AckRequest* default_instance_;
};
// -------------------------------------------------------------------

class SaveTaskRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.adv.msg.SaveTaskRequest) */ {
 public:
  SaveTaskRequest();
  virtual ~SaveTaskRequest();

  SaveTaskRequest(const SaveTaskRequest& from);

  inline SaveTaskRequest& operator=(const SaveTaskRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SaveTaskRequest& default_instance();

  void Swap(SaveTaskRequest* other);

  // implements Message ----------------------------------------------

  inline SaveTaskRequest* New() const { return New(NULL); }

  SaveTaskRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SaveTaskRequest& from);
  void MergeFrom(const SaveTaskRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SaveTaskRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.adv.msg.TaskInfo taskinfo = 1;
  int taskinfo_size() const;
  void clear_taskinfo();
  static const int kTaskinfoFieldNumber = 1;
  const ::com::adv::msg::TaskInfo& taskinfo(int index) const;
  ::com::adv::msg::TaskInfo* mutable_taskinfo(int index);
  ::com::adv::msg::TaskInfo* add_taskinfo();
  ::google::protobuf::RepeatedPtrField< ::com::adv::msg::TaskInfo >*
      mutable_taskinfo();
  const ::google::protobuf::RepeatedPtrField< ::com::adv::msg::TaskInfo >&
      taskinfo() const;

  // optional int32 transid = 32;
  void clear_transid();
  static const int kTransidFieldNumber = 32;
  ::google::protobuf::int32 transid() const;
  void set_transid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.adv.msg.SaveTaskRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::com::adv::msg::TaskInfo > taskinfo_;
  ::google::protobuf::int32 transid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_adv_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_adv_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_adv_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static SaveTaskRequest* default_instance_;
};
// -------------------------------------------------------------------

class SaveTaskResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.adv.msg.SaveTaskResult) */ {
 public:
  SaveTaskResult();
  virtual ~SaveTaskResult();

  SaveTaskResult(const SaveTaskResult& from);

  inline SaveTaskResult& operator=(const SaveTaskResult& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SaveTaskResult& default_instance();

  void Swap(SaveTaskResult* other);

  // implements Message ----------------------------------------------

  inline SaveTaskResult* New() const { return New(NULL); }

  SaveTaskResult* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SaveTaskResult& from);
  void MergeFrom(const SaveTaskResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SaveTaskResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .com.adv.msg.RetBase retbase = 1;
  bool has_retbase() const;
  void clear_retbase();
  static const int kRetbaseFieldNumber = 1;
  const ::com::adv::msg::RetBase& retbase() const;
  ::com::adv::msg::RetBase* mutable_retbase();
  ::com::adv::msg::RetBase* release_retbase();
  void set_allocated_retbase(::com::adv::msg::RetBase* retbase);

  // optional int32 transid = 32;
  void clear_transid();
  static const int kTransidFieldNumber = 32;
  ::google::protobuf::int32 transid() const;
  void set_transid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.adv.msg.SaveTaskResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::com::adv::msg::RetBase* retbase_;
  ::google::protobuf::int32 transid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_adv_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_adv_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_adv_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static SaveTaskResult* default_instance_;
};
// -------------------------------------------------------------------

class WithdrawRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.adv.msg.WithdrawRequest) */ {
 public:
  WithdrawRequest();
  virtual ~WithdrawRequest();

  WithdrawRequest(const WithdrawRequest& from);

  inline WithdrawRequest& operator=(const WithdrawRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WithdrawRequest& default_instance();

  void Swap(WithdrawRequest* other);

  // implements Message ----------------------------------------------

  inline WithdrawRequest* New() const { return New(NULL); }

  WithdrawRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WithdrawRequest& from);
  void MergeFrom(const WithdrawRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WithdrawRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional int32 withdraw_cash = 2;
  void clear_withdraw_cash();
  static const int kWithdrawCashFieldNumber = 2;
  ::google::protobuf::int32 withdraw_cash() const;
  void set_withdraw_cash(::google::protobuf::int32 value);

  // optional string id = 3;
  void clear_id();
  static const int kIdFieldNumber = 3;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional string open_id = 4;
  void clear_open_id();
  static const int kOpenIdFieldNumber = 4;
  const ::std::string& open_id() const;
  void set_open_id(const ::std::string& value);
  void set_open_id(const char* value);
  void set_open_id(const char* value, size_t size);
  ::std::string* mutable_open_id();
  ::std::string* release_open_id();
  void set_allocated_open_id(::std::string* open_id);

  // optional string passwd = 5;
  void clear_passwd();
  static const int kPasswdFieldNumber = 5;
  const ::std::string& passwd() const;
  void set_passwd(const ::std::string& value);
  void set_passwd(const char* value);
  void set_passwd(const char* value, size_t size);
  ::std::string* mutable_passwd();
  ::std::string* release_passwd();
  void set_allocated_passwd(::std::string* passwd);

  // optional string user_name = 6;
  void clear_user_name();
  static const int kUserNameFieldNumber = 6;
  const ::std::string& user_name() const;
  void set_user_name(const ::std::string& value);
  void set_user_name(const char* value);
  void set_user_name(const char* value, size_t size);
  ::std::string* mutable_user_name();
  ::std::string* release_user_name();
  void set_allocated_user_name(::std::string* user_name);

  // optional string desc = 7;
  void clear_desc();
  static const int kDescFieldNumber = 7;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  void set_desc(const char* value);
  void set_desc(const char* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // optional int32 time = 8;
  void clear_time();
  static const int kTimeFieldNumber = 8;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // optional int32 transid = 32;
  void clear_transid();
  static const int kTransidFieldNumber = 32;
  ::google::protobuf::int32 transid() const;
  void set_transid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.adv.msg.WithdrawRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 withdraw_cash_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr open_id_;
  ::google::protobuf::internal::ArenaStringPtr passwd_;
  ::google::protobuf::internal::ArenaStringPtr user_name_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 transid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_adv_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_adv_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_adv_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static WithdrawRequest* default_instance_;
};
// -------------------------------------------------------------------

class WithdrawResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.adv.msg.WithdrawResult) */ {
 public:
  WithdrawResult();
  virtual ~WithdrawResult();

  WithdrawResult(const WithdrawResult& from);

  inline WithdrawResult& operator=(const WithdrawResult& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WithdrawResult& default_instance();

  void Swap(WithdrawResult* other);

  // implements Message ----------------------------------------------

  inline WithdrawResult* New() const { return New(NULL); }

  WithdrawResult* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WithdrawResult& from);
  void MergeFrom(const WithdrawResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WithdrawResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .com.adv.msg.RetBase retbase = 1;
  bool has_retbase() const;
  void clear_retbase();
  static const int kRetbaseFieldNumber = 1;
  const ::com::adv::msg::RetBase& retbase() const;
  ::com::adv::msg::RetBase* mutable_retbase();
  ::com::adv::msg::RetBase* release_retbase();
  void set_allocated_retbase(::com::adv::msg::RetBase* retbase);

  // optional int32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional int32 withdraw_cash = 3;
  void clear_withdraw_cash();
  static const int kWithdrawCashFieldNumber = 3;
  ::google::protobuf::int32 withdraw_cash() const;
  void set_withdraw_cash(::google::protobuf::int32 value);

  // optional string trade_id = 4;
  void clear_trade_id();
  static const int kTradeIdFieldNumber = 4;
  const ::std::string& trade_id() const;
  void set_trade_id(const ::std::string& value);
  void set_trade_id(const char* value);
  void set_trade_id(const char* value, size_t size);
  ::std::string* mutable_trade_id();
  ::std::string* release_trade_id();
  void set_allocated_trade_id(::std::string* trade_id);

  // optional string desc = 5;
  void clear_desc();
  static const int kDescFieldNumber = 5;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  void set_desc(const char* value);
  void set_desc(const char* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // optional int32 time = 6;
  void clear_time();
  static const int kTimeFieldNumber = 6;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // optional string pre_cash = 7;
  void clear_pre_cash();
  static const int kPreCashFieldNumber = 7;
  const ::std::string& pre_cash() const;
  void set_pre_cash(const ::std::string& value);
  void set_pre_cash(const char* value);
  void set_pre_cash(const char* value, size_t size);
  ::std::string* mutable_pre_cash();
  ::std::string* release_pre_cash();
  void set_allocated_pre_cash(::std::string* pre_cash);

  // optional string useable_cash = 8;
  void clear_useable_cash();
  static const int kUseableCashFieldNumber = 8;
  const ::std::string& useable_cash() const;
  void set_useable_cash(const ::std::string& value);
  void set_useable_cash(const char* value);
  void set_useable_cash(const char* value, size_t size);
  ::std::string* mutable_useable_cash();
  ::std::string* release_useable_cash();
  void set_allocated_useable_cash(::std::string* useable_cash);

  // optional string fetched_cash = 9;
  void clear_fetched_cash();
  static const int kFetchedCashFieldNumber = 9;
  const ::std::string& fetched_cash() const;
  void set_fetched_cash(const ::std::string& value);
  void set_fetched_cash(const char* value);
  void set_fetched_cash(const char* value, size_t size);
  ::std::string* mutable_fetched_cash();
  ::std::string* release_fetched_cash();
  void set_allocated_fetched_cash(::std::string* fetched_cash);

  // optional int32 transid = 32;
  void clear_transid();
  static const int kTransidFieldNumber = 32;
  ::google::protobuf::int32 transid() const;
  void set_transid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.adv.msg.WithdrawResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::com::adv::msg::RetBase* retbase_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 withdraw_cash_;
  ::google::protobuf::internal::ArenaStringPtr trade_id_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::google::protobuf::internal::ArenaStringPtr pre_cash_;
  ::google::protobuf::internal::ArenaStringPtr useable_cash_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 transid_;
  ::google::protobuf::internal::ArenaStringPtr fetched_cash_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_adv_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_adv_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_adv_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static WithdrawResult* default_instance_;
};
// -------------------------------------------------------------------

class MysqlRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.adv.msg.MysqlRequest) */ {
 public:
  MysqlRequest();
  virtual ~MysqlRequest();

  MysqlRequest(const MysqlRequest& from);

  inline MysqlRequest& operator=(const MysqlRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MysqlRequest& default_instance();

  void Swap(MysqlRequest* other);

  // implements Message ----------------------------------------------

  inline MysqlRequest* New() const { return New(NULL); }

  MysqlRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MysqlRequest& from);
  void MergeFrom(const MysqlRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MysqlRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 sqlid = 1;
  void clear_sqlid();
  static const int kSqlidFieldNumber = 1;
  ::google::protobuf::int32 sqlid() const;
  void set_sqlid(::google::protobuf::int32 value);

  // optional string sql = 2;
  void clear_sql();
  static const int kSqlFieldNumber = 2;
  const ::std::string& sql() const;
  void set_sql(const ::std::string& value);
  void set_sql(const char* value);
  void set_sql(const char* value, size_t size);
  ::std::string* mutable_sql();
  ::std::string* release_sql();
  void set_allocated_sql(::std::string* sql);

  // optional int32 isrequestfield = 3;
  void clear_isrequestfield();
  static const int kIsrequestfieldFieldNumber = 3;
  ::google::protobuf::int32 isrequestfield() const;
  void set_isrequestfield(::google::protobuf::int32 value);

  // optional int32 limit = 4;
  void clear_limit();
  static const int kLimitFieldNumber = 4;
  ::google::protobuf::int32 limit() const;
  void set_limit(::google::protobuf::int32 value);

  // optional int32 timeout = 5;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 5;
  ::google::protobuf::int32 timeout() const;
  void set_timeout(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.adv.msg.MysqlRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr sql_;
  ::google::protobuf::int32 sqlid_;
  ::google::protobuf::int32 isrequestfield_;
  ::google::protobuf::int32 limit_;
  ::google::protobuf::int32 timeout_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_adv_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_adv_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_adv_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static MysqlRequest* default_instance_;
};
// -------------------------------------------------------------------

class MysqlResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.adv.msg.MysqlResult) */ {
 public:
  MysqlResult();
  virtual ~MysqlResult();

  MysqlResult(const MysqlResult& from);

  inline MysqlResult& operator=(const MysqlResult& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MysqlResult& default_instance();

  void Swap(MysqlResult* other);

  // implements Message ----------------------------------------------

  inline MysqlResult* New() const { return New(NULL); }

  MysqlResult* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MysqlResult& from);
  void MergeFrom(const MysqlResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MysqlResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .com.adv.msg.RetBase retbase = 1;
  bool has_retbase() const;
  void clear_retbase();
  static const int kRetbaseFieldNumber = 1;
  const ::com::adv::msg::RetBase& retbase() const;
  ::com::adv::msg::RetBase* mutable_retbase();
  ::com::adv::msg::RetBase* release_retbase();
  void set_allocated_retbase(::com::adv::msg::RetBase* retbase);

  // optional int32 affectedrows = 2;
  void clear_affectedrows();
  static const int kAffectedrowsFieldNumber = 2;
  ::google::protobuf::int32 affectedrows() const;
  void set_affectedrows(::google::protobuf::int32 value);

  // optional int32 insertid = 3;
  void clear_insertid();
  static const int kInsertidFieldNumber = 3;
  ::google::protobuf::int32 insertid() const;
  void set_insertid(::google::protobuf::int32 value);

  // repeated .com.adv.msg.PRow rows = 4;
  int rows_size() const;
  void clear_rows();
  static const int kRowsFieldNumber = 4;
  const ::com::adv::msg::PRow& rows(int index) const;
  ::com::adv::msg::PRow* mutable_rows(int index);
  ::com::adv::msg::PRow* add_rows();
  ::google::protobuf::RepeatedPtrField< ::com::adv::msg::PRow >*
      mutable_rows();
  const ::google::protobuf::RepeatedPtrField< ::com::adv::msg::PRow >&
      rows() const;

  // optional int32 sqlid = 5;
  void clear_sqlid();
  static const int kSqlidFieldNumber = 5;
  ::google::protobuf::int32 sqlid() const;
  void set_sqlid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.adv.msg.MysqlResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::com::adv::msg::RetBase* retbase_;
  ::google::protobuf::int32 affectedrows_;
  ::google::protobuf::int32 insertid_;
  ::google::protobuf::RepeatedPtrField< ::com::adv::msg::PRow > rows_;
  ::google::protobuf::int32 sqlid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_adv_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_adv_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_adv_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static MysqlResult* default_instance_;
};
// -------------------------------------------------------------------

class RedispRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.adv.msg.RedispRequest) */ {
 public:
  RedispRequest();
  virtual ~RedispRequest();

  RedispRequest(const RedispRequest& from);

  inline RedispRequest& operator=(const RedispRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RedispRequest& default_instance();

  void Swap(RedispRequest* other);

  // implements Message ----------------------------------------------

  inline RedispRequest* New() const { return New(NULL); }

  RedispRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RedispRequest& from);
  void MergeFrom(const RedispRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RedispRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 sqlid = 1;
  void clear_sqlid();
  static const int kSqlidFieldNumber = 1;
  ::google::protobuf::int32 sqlid() const;
  void set_sqlid(::google::protobuf::int32 value);

  // optional string key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional int32 param = 3;
  void clear_param();
  static const int kParamFieldNumber = 3;
  ::google::protobuf::int32 param() const;
  void set_param(::google::protobuf::int32 value);

  // optional int32 limit = 4;
  void clear_limit();
  static const int kLimitFieldNumber = 4;
  ::google::protobuf::int32 limit() const;
  void set_limit(::google::protobuf::int32 value);

  // optional int32 timeout = 5;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 5;
  ::google::protobuf::int32 timeout() const;
  void set_timeout(::google::protobuf::int32 value);

  // optional int32 transid = 32;
  void clear_transid();
  static const int kTransidFieldNumber = 32;
  ::google::protobuf::int32 transid() const;
  void set_transid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.adv.msg.RedispRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::int32 sqlid_;
  ::google::protobuf::int32 param_;
  ::google::protobuf::int32 limit_;
  ::google::protobuf::int32 timeout_;
  ::google::protobuf::int32 transid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_adv_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_adv_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_adv_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static RedispRequest* default_instance_;
};
// -------------------------------------------------------------------

class RedispResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.adv.msg.RedispResult) */ {
 public:
  RedispResult();
  virtual ~RedispResult();

  RedispResult(const RedispResult& from);

  inline RedispResult& operator=(const RedispResult& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RedispResult& default_instance();

  void Swap(RedispResult* other);

  // implements Message ----------------------------------------------

  inline RedispResult* New() const { return New(NULL); }

  RedispResult* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RedispResult& from);
  void MergeFrom(const RedispResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RedispResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .com.adv.msg.RetBase retbase = 1;
  bool has_retbase() const;
  void clear_retbase();
  static const int kRetbaseFieldNumber = 1;
  const ::com::adv::msg::RetBase& retbase() const;
  ::com::adv::msg::RetBase* mutable_retbase();
  ::com::adv::msg::RetBase* release_retbase();
  void set_allocated_retbase(::com::adv::msg::RetBase* retbase);

  // optional int32 affectedrows = 2;
  void clear_affectedrows();
  static const int kAffectedrowsFieldNumber = 2;
  ::google::protobuf::int32 affectedrows() const;
  void set_affectedrows(::google::protobuf::int32 value);

  // optional int32 insertid = 3;
  void clear_insertid();
  static const int kInsertidFieldNumber = 3;
  ::google::protobuf::int32 insertid() const;
  void set_insertid(::google::protobuf::int32 value);

  // repeated .com.adv.msg.PRow rows = 4;
  int rows_size() const;
  void clear_rows();
  static const int kRowsFieldNumber = 4;
  const ::com::adv::msg::PRow& rows(int index) const;
  ::com::adv::msg::PRow* mutable_rows(int index);
  ::com::adv::msg::PRow* add_rows();
  ::google::protobuf::RepeatedPtrField< ::com::adv::msg::PRow >*
      mutable_rows();
  const ::google::protobuf::RepeatedPtrField< ::com::adv::msg::PRow >&
      rows() const;

  // optional int32 sqlid = 5;
  void clear_sqlid();
  static const int kSqlidFieldNumber = 5;
  ::google::protobuf::int32 sqlid() const;
  void set_sqlid(::google::protobuf::int32 value);

  // optional int32 transid = 32;
  void clear_transid();
  static const int kTransidFieldNumber = 32;
  ::google::protobuf::int32 transid() const;
  void set_transid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.adv.msg.RedispResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::com::adv::msg::RetBase* retbase_;
  ::google::protobuf::int32 affectedrows_;
  ::google::protobuf::int32 insertid_;
  ::google::protobuf::RepeatedPtrField< ::com::adv::msg::PRow > rows_;
  ::google::protobuf::int32 sqlid_;
  ::google::protobuf::int32 transid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_adv_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_adv_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_adv_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static RedispResult* default_instance_;
};
// -------------------------------------------------------------------

class InnerCommonMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.adv.msg.InnerCommonMsg) */ {
 public:
  InnerCommonMsg();
  virtual ~InnerCommonMsg();

  InnerCommonMsg(const InnerCommonMsg& from);

  inline InnerCommonMsg& operator=(const InnerCommonMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InnerCommonMsg& default_instance();

  void Swap(InnerCommonMsg* other);

  // implements Message ----------------------------------------------

  inline InnerCommonMsg* New() const { return New(NULL); }

  InnerCommonMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InnerCommonMsg& from);
  void MergeFrom(const InnerCommonMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InnerCommonMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.adv.msg.PDataCell items = 1;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 1;
  const ::com::adv::msg::PDataCell& items(int index) const;
  ::com::adv::msg::PDataCell* mutable_items(int index);
  ::com::adv::msg::PDataCell* add_items();
  ::google::protobuf::RepeatedPtrField< ::com::adv::msg::PDataCell >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::com::adv::msg::PDataCell >&
      items() const;

  // optional string transfer = 2;
  void clear_transfer();
  static const int kTransferFieldNumber = 2;
  const ::std::string& transfer() const;
  void set_transfer(const ::std::string& value);
  void set_transfer(const char* value);
  void set_transfer(const char* value, size_t size);
  ::std::string* mutable_transfer();
  ::std::string* release_transfer();
  void set_allocated_transfer(::std::string* transfer);

  // optional int32 time = 3;
  void clear_time();
  static const int kTimeFieldNumber = 3;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // optional int32 transid = 32;
  void clear_transid();
  static const int kTransidFieldNumber = 32;
  ::google::protobuf::int32 transid() const;
  void set_transid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.adv.msg.InnerCommonMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::com::adv::msg::PDataCell > items_;
  ::google::protobuf::internal::ArenaStringPtr transfer_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 transid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_adv_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_adv_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_adv_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static InnerCommonMsg* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// UserKeepAliveRequest

// optional int32 condid = 1;
inline void UserKeepAliveRequest::clear_condid() {
  condid_ = 0;
}
inline ::google::protobuf::int32 UserKeepAliveRequest::condid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.UserKeepAliveRequest.condid)
  return condid_;
}
inline void UserKeepAliveRequest::set_condid(::google::protobuf::int32 value) {
  
  condid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.UserKeepAliveRequest.condid)
}

// optional int32 devicetype = 2;
inline void UserKeepAliveRequest::clear_devicetype() {
  devicetype_ = 0;
}
inline ::google::protobuf::int32 UserKeepAliveRequest::devicetype() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.UserKeepAliveRequest.devicetype)
  return devicetype_;
}
inline void UserKeepAliveRequest::set_devicetype(::google::protobuf::int32 value) {
  
  devicetype_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.UserKeepAliveRequest.devicetype)
}

// optional string deviceid = 3;
inline void UserKeepAliveRequest::clear_deviceid() {
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserKeepAliveRequest::deviceid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.UserKeepAliveRequest.deviceid)
  return deviceid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserKeepAliveRequest::set_deviceid(const ::std::string& value) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.UserKeepAliveRequest.deviceid)
}
inline void UserKeepAliveRequest::set_deviceid(const char* value) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.UserKeepAliveRequest.deviceid)
}
inline void UserKeepAliveRequest::set_deviceid(const char* value, size_t size) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.UserKeepAliveRequest.deviceid)
}
inline ::std::string* UserKeepAliveRequest::mutable_deviceid() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.UserKeepAliveRequest.deviceid)
  return deviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserKeepAliveRequest::release_deviceid() {
  // @@protoc_insertion_point(field_release:com.adv.msg.UserKeepAliveRequest.deviceid)
  
  return deviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserKeepAliveRequest::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid != NULL) {
    
  } else {
    
  }
  deviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceid);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.UserKeepAliveRequest.deviceid)
}

// optional int32 uid = 4;
inline void UserKeepAliveRequest::clear_uid() {
  uid_ = 0;
}
inline ::google::protobuf::int32 UserKeepAliveRequest::uid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.UserKeepAliveRequest.uid)
  return uid_;
}
inline void UserKeepAliveRequest::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.UserKeepAliveRequest.uid)
}

// optional int32 version = 5;
inline void UserKeepAliveRequest::clear_version() {
  version_ = 0;
}
inline ::google::protobuf::int32 UserKeepAliveRequest::version() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.UserKeepAliveRequest.version)
  return version_;
}
inline void UserKeepAliveRequest::set_version(::google::protobuf::int32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.UserKeepAliveRequest.version)
}

// optional int32 transid = 32;
inline void UserKeepAliveRequest::clear_transid() {
  transid_ = 0;
}
inline ::google::protobuf::int32 UserKeepAliveRequest::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.UserKeepAliveRequest.transid)
  return transid_;
}
inline void UserKeepAliveRequest::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.UserKeepAliveRequest.transid)
}

// -------------------------------------------------------------------

// UserKeepAliveResult

// optional .com.adv.msg.RetBase retbase = 1;
inline bool UserKeepAliveResult::has_retbase() const {
  return !_is_default_instance_ && retbase_ != NULL;
}
inline void UserKeepAliveResult::clear_retbase() {
  if (GetArenaNoVirtual() == NULL && retbase_ != NULL) delete retbase_;
  retbase_ = NULL;
}
inline const ::com::adv::msg::RetBase& UserKeepAliveResult::retbase() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.UserKeepAliveResult.retbase)
  return retbase_ != NULL ? *retbase_ : *default_instance_->retbase_;
}
inline ::com::adv::msg::RetBase* UserKeepAliveResult::mutable_retbase() {
  
  if (retbase_ == NULL) {
    retbase_ = new ::com::adv::msg::RetBase;
  }
  // @@protoc_insertion_point(field_mutable:com.adv.msg.UserKeepAliveResult.retbase)
  return retbase_;
}
inline ::com::adv::msg::RetBase* UserKeepAliveResult::release_retbase() {
  // @@protoc_insertion_point(field_release:com.adv.msg.UserKeepAliveResult.retbase)
  
  ::com::adv::msg::RetBase* temp = retbase_;
  retbase_ = NULL;
  return temp;
}
inline void UserKeepAliveResult::set_allocated_retbase(::com::adv::msg::RetBase* retbase) {
  delete retbase_;
  retbase_ = retbase;
  if (retbase) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.UserKeepAliveResult.retbase)
}

// optional int32 condid = 2;
inline void UserKeepAliveResult::clear_condid() {
  condid_ = 0;
}
inline ::google::protobuf::int32 UserKeepAliveResult::condid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.UserKeepAliveResult.condid)
  return condid_;
}
inline void UserKeepAliveResult::set_condid(::google::protobuf::int32 value) {
  
  condid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.UserKeepAliveResult.condid)
}

// optional int32 devicetype = 3;
inline void UserKeepAliveResult::clear_devicetype() {
  devicetype_ = 0;
}
inline ::google::protobuf::int32 UserKeepAliveResult::devicetype() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.UserKeepAliveResult.devicetype)
  return devicetype_;
}
inline void UserKeepAliveResult::set_devicetype(::google::protobuf::int32 value) {
  
  devicetype_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.UserKeepAliveResult.devicetype)
}

// optional string deviceid = 4;
inline void UserKeepAliveResult::clear_deviceid() {
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserKeepAliveResult::deviceid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.UserKeepAliveResult.deviceid)
  return deviceid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserKeepAliveResult::set_deviceid(const ::std::string& value) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.UserKeepAliveResult.deviceid)
}
inline void UserKeepAliveResult::set_deviceid(const char* value) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.UserKeepAliveResult.deviceid)
}
inline void UserKeepAliveResult::set_deviceid(const char* value, size_t size) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.UserKeepAliveResult.deviceid)
}
inline ::std::string* UserKeepAliveResult::mutable_deviceid() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.UserKeepAliveResult.deviceid)
  return deviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserKeepAliveResult::release_deviceid() {
  // @@protoc_insertion_point(field_release:com.adv.msg.UserKeepAliveResult.deviceid)
  
  return deviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserKeepAliveResult::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid != NULL) {
    
  } else {
    
  }
  deviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceid);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.UserKeepAliveResult.deviceid)
}

// optional int32 uid = 5;
inline void UserKeepAliveResult::clear_uid() {
  uid_ = 0;
}
inline ::google::protobuf::int32 UserKeepAliveResult::uid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.UserKeepAliveResult.uid)
  return uid_;
}
inline void UserKeepAliveResult::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.UserKeepAliveResult.uid)
}

// optional int32 version = 6;
inline void UserKeepAliveResult::clear_version() {
  version_ = 0;
}
inline ::google::protobuf::int32 UserKeepAliveResult::version() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.UserKeepAliveResult.version)
  return version_;
}
inline void UserKeepAliveResult::set_version(::google::protobuf::int32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.UserKeepAliveResult.version)
}

// optional int32 transid = 32;
inline void UserKeepAliveResult::clear_transid() {
  transid_ = 0;
}
inline ::google::protobuf::int32 UserKeepAliveResult::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.UserKeepAliveResult.transid)
  return transid_;
}
inline void UserKeepAliveResult::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.UserKeepAliveResult.transid)
}

// -------------------------------------------------------------------

// LoginRequest

// optional string token = 1;
inline void LoginRequest::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequest::token() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.token)
}
inline void LoginRequest::set_token(const char* value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.LoginRequest.token)
}
inline void LoginRequest::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.LoginRequest.token)
}
inline ::std::string* LoginRequest::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.LoginRequest.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_token() {
  // @@protoc_insertion_point(field_release:com.adv.msg.LoginRequest.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.LoginRequest.token)
}

// optional int32 magicnum = 2;
inline void LoginRequest::clear_magicnum() {
  magicnum_ = 0;
}
inline ::google::protobuf::int32 LoginRequest::magicnum() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.magicnum)
  return magicnum_;
}
inline void LoginRequest::set_magicnum(::google::protobuf::int32 value) {
  
  magicnum_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.magicnum)
}

// optional int32 status = 3;
inline void LoginRequest::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 LoginRequest::status() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.status)
  return status_;
}
inline void LoginRequest::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.status)
}

// optional int32 devicetype = 4;
inline void LoginRequest::clear_devicetype() {
  devicetype_ = 0;
}
inline ::google::protobuf::int32 LoginRequest::devicetype() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.devicetype)
  return devicetype_;
}
inline void LoginRequest::set_devicetype(::google::protobuf::int32 value) {
  
  devicetype_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.devicetype)
}

// optional string deviceid = 6;
inline void LoginRequest::clear_deviceid() {
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequest::deviceid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.deviceid)
  return deviceid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_deviceid(const ::std::string& value) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.deviceid)
}
inline void LoginRequest::set_deviceid(const char* value) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.LoginRequest.deviceid)
}
inline void LoginRequest::set_deviceid(const char* value, size_t size) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.LoginRequest.deviceid)
}
inline ::std::string* LoginRequest::mutable_deviceid() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.LoginRequest.deviceid)
  return deviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_deviceid() {
  // @@protoc_insertion_point(field_release:com.adv.msg.LoginRequest.deviceid)
  
  return deviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid != NULL) {
    
  } else {
    
  }
  deviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceid);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.LoginRequest.deviceid)
}

// optional string description = 7;
inline void LoginRequest::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequest::description() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.description)
  return description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.description)
}
inline void LoginRequest::set_description(const char* value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.LoginRequest.description)
}
inline void LoginRequest::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.LoginRequest.description)
}
inline ::std::string* LoginRequest::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.LoginRequest.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_description() {
  // @@protoc_insertion_point(field_release:com.adv.msg.LoginRequest.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.LoginRequest.description)
}

// optional int32 condid = 8;
inline void LoginRequest::clear_condid() {
  condid_ = 0;
}
inline ::google::protobuf::int32 LoginRequest::condid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.condid)
  return condid_;
}
inline void LoginRequest::set_condid(::google::protobuf::int32 value) {
  
  condid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.condid)
}

// optional int32 loginseq = 9;
inline void LoginRequest::clear_loginseq() {
  loginseq_ = 0;
}
inline ::google::protobuf::int32 LoginRequest::loginseq() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.loginseq)
  return loginseq_;
}
inline void LoginRequest::set_loginseq(::google::protobuf::int32 value) {
  
  loginseq_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.loginseq)
}

// optional int32 accounttype = 10;
inline void LoginRequest::clear_accounttype() {
  accounttype_ = 0;
}
inline ::google::protobuf::int32 LoginRequest::accounttype() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.accounttype)
  return accounttype_;
}
inline void LoginRequest::set_accounttype(::google::protobuf::int32 value) {
  
  accounttype_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.accounttype)
}

// optional string account = 11;
inline void LoginRequest::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequest::account() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.account)
  return account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.account)
}
inline void LoginRequest::set_account(const char* value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.LoginRequest.account)
}
inline void LoginRequest::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.LoginRequest.account)
}
inline ::std::string* LoginRequest::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.LoginRequest.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_account() {
  // @@protoc_insertion_point(field_release:com.adv.msg.LoginRequest.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.LoginRequest.account)
}

// optional string passwd = 12;
inline void LoginRequest::clear_passwd() {
  passwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequest::passwd() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.passwd)
  return passwd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_passwd(const ::std::string& value) {
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.passwd)
}
inline void LoginRequest::set_passwd(const char* value) {
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.LoginRequest.passwd)
}
inline void LoginRequest::set_passwd(const char* value, size_t size) {
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.LoginRequest.passwd)
}
inline ::std::string* LoginRequest::mutable_passwd() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.LoginRequest.passwd)
  return passwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_passwd() {
  // @@protoc_insertion_point(field_release:com.adv.msg.LoginRequest.passwd)
  
  return passwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_passwd(::std::string* passwd) {
  if (passwd != NULL) {
    
  } else {
    
  }
  passwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), passwd);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.LoginRequest.passwd)
}

// optional int32 version = 13;
inline void LoginRequest::clear_version() {
  version_ = 0;
}
inline ::google::protobuf::int32 LoginRequest::version() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.version)
  return version_;
}
inline void LoginRequest::set_version(::google::protobuf::int32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.version)
}

// optional string nickname = 14;
inline void LoginRequest::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequest::nickname() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.nickname)
  return nickname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.nickname)
}
inline void LoginRequest::set_nickname(const char* value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.LoginRequest.nickname)
}
inline void LoginRequest::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.LoginRequest.nickname)
}
inline ::std::string* LoginRequest::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.LoginRequest.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_nickname() {
  // @@protoc_insertion_point(field_release:com.adv.msg.LoginRequest.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.LoginRequest.nickname)
}

// optional int32 gender = 15;
inline void LoginRequest::clear_gender() {
  gender_ = 0;
}
inline ::google::protobuf::int32 LoginRequest::gender() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.gender)
  return gender_;
}
inline void LoginRequest::set_gender(::google::protobuf::int32 value) {
  
  gender_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.gender)
}

// optional string province = 16;
inline void LoginRequest::clear_province() {
  province_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequest::province() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.province)
  return province_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_province(const ::std::string& value) {
  
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.province)
}
inline void LoginRequest::set_province(const char* value) {
  
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.LoginRequest.province)
}
inline void LoginRequest::set_province(const char* value, size_t size) {
  
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.LoginRequest.province)
}
inline ::std::string* LoginRequest::mutable_province() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.LoginRequest.province)
  return province_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_province() {
  // @@protoc_insertion_point(field_release:com.adv.msg.LoginRequest.province)
  
  return province_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_province(::std::string* province) {
  if (province != NULL) {
    
  } else {
    
  }
  province_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), province);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.LoginRequest.province)
}

// optional string city = 17;
inline void LoginRequest::clear_city() {
  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequest::city() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.city)
  return city_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_city(const ::std::string& value) {
  
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.city)
}
inline void LoginRequest::set_city(const char* value) {
  
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.LoginRequest.city)
}
inline void LoginRequest::set_city(const char* value, size_t size) {
  
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.LoginRequest.city)
}
inline ::std::string* LoginRequest::mutable_city() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.LoginRequest.city)
  return city_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_city() {
  // @@protoc_insertion_point(field_release:com.adv.msg.LoginRequest.city)
  
  return city_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_city(::std::string* city) {
  if (city != NULL) {
    
  } else {
    
  }
  city_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), city);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.LoginRequest.city)
}

// optional string country = 18;
inline void LoginRequest::clear_country() {
  country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequest::country() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.country)
  return country_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_country(const ::std::string& value) {
  
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.country)
}
inline void LoginRequest::set_country(const char* value) {
  
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.LoginRequest.country)
}
inline void LoginRequest::set_country(const char* value, size_t size) {
  
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.LoginRequest.country)
}
inline ::std::string* LoginRequest::mutable_country() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.LoginRequest.country)
  return country_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_country() {
  // @@protoc_insertion_point(field_release:com.adv.msg.LoginRequest.country)
  
  return country_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_country(::std::string* country) {
  if (country != NULL) {
    
  } else {
    
  }
  country_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.LoginRequest.country)
}

// optional string avatar = 19;
inline void LoginRequest::clear_avatar() {
  avatar_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequest::avatar() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.avatar)
  return avatar_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_avatar(const ::std::string& value) {
  
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.avatar)
}
inline void LoginRequest::set_avatar(const char* value) {
  
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.LoginRequest.avatar)
}
inline void LoginRequest::set_avatar(const char* value, size_t size) {
  
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.LoginRequest.avatar)
}
inline ::std::string* LoginRequest::mutable_avatar() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.LoginRequest.avatar)
  return avatar_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_avatar() {
  // @@protoc_insertion_point(field_release:com.adv.msg.LoginRequest.avatar)
  
  return avatar_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_avatar(::std::string* avatar) {
  if (avatar != NULL) {
    
  } else {
    
  }
  avatar_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), avatar);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.LoginRequest.avatar)
}

// optional string desc = 20;
inline void LoginRequest::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequest::desc() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.desc)
  return desc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.desc)
}
inline void LoginRequest::set_desc(const char* value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.LoginRequest.desc)
}
inline void LoginRequest::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.LoginRequest.desc)
}
inline ::std::string* LoginRequest::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.LoginRequest.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_desc() {
  // @@protoc_insertion_point(field_release:com.adv.msg.LoginRequest.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.LoginRequest.desc)
}

// optional string email = 21;
inline void LoginRequest::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequest::email() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.email)
  return email_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.email)
}
inline void LoginRequest::set_email(const char* value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.LoginRequest.email)
}
inline void LoginRequest::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.LoginRequest.email)
}
inline ::std::string* LoginRequest::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.LoginRequest.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_email() {
  // @@protoc_insertion_point(field_release:com.adv.msg.LoginRequest.email)
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.LoginRequest.email)
}

// optional string mobile = 22;
inline void LoginRequest::clear_mobile() {
  mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequest::mobile() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.mobile)
  return mobile_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_mobile(const ::std::string& value) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.mobile)
}
inline void LoginRequest::set_mobile(const char* value) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.LoginRequest.mobile)
}
inline void LoginRequest::set_mobile(const char* value, size_t size) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.LoginRequest.mobile)
}
inline ::std::string* LoginRequest::mutable_mobile() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.LoginRequest.mobile)
  return mobile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_mobile() {
  // @@protoc_insertion_point(field_release:com.adv.msg.LoginRequest.mobile)
  
  return mobile_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_mobile(::std::string* mobile) {
  if (mobile != NULL) {
    
  } else {
    
  }
  mobile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mobile);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.LoginRequest.mobile)
}

// optional int32 time = 23;
inline void LoginRequest::clear_time() {
  time_ = 0;
}
inline ::google::protobuf::int32 LoginRequest::time() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.time)
  return time_;
}
inline void LoginRequest::set_time(::google::protobuf::int32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.time)
}

// optional int32 uid = 24;
inline void LoginRequest::clear_uid() {
  uid_ = 0;
}
inline ::google::protobuf::int32 LoginRequest::uid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.uid)
  return uid_;
}
inline void LoginRequest::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.uid)
}

// optional int32 flag = 25;
inline void LoginRequest::clear_flag() {
  flag_ = 0;
}
inline ::google::protobuf::int32 LoginRequest::flag() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.flag)
  return flag_;
}
inline void LoginRequest::set_flag(::google::protobuf::int32 value) {
  
  flag_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.flag)
}

// optional int32 transid = 32;
inline void LoginRequest::clear_transid() {
  transid_ = 0;
}
inline ::google::protobuf::int32 LoginRequest::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginRequest.transid)
  return transid_;
}
inline void LoginRequest::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginRequest.transid)
}

// -------------------------------------------------------------------

// LoginResult

// optional .com.adv.msg.RetBase retbase = 1;
inline bool LoginResult::has_retbase() const {
  return !_is_default_instance_ && retbase_ != NULL;
}
inline void LoginResult::clear_retbase() {
  if (GetArenaNoVirtual() == NULL && retbase_ != NULL) delete retbase_;
  retbase_ = NULL;
}
inline const ::com::adv::msg::RetBase& LoginResult::retbase() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginResult.retbase)
  return retbase_ != NULL ? *retbase_ : *default_instance_->retbase_;
}
inline ::com::adv::msg::RetBase* LoginResult::mutable_retbase() {
  
  if (retbase_ == NULL) {
    retbase_ = new ::com::adv::msg::RetBase;
  }
  // @@protoc_insertion_point(field_mutable:com.adv.msg.LoginResult.retbase)
  return retbase_;
}
inline ::com::adv::msg::RetBase* LoginResult::release_retbase() {
  // @@protoc_insertion_point(field_release:com.adv.msg.LoginResult.retbase)
  
  ::com::adv::msg::RetBase* temp = retbase_;
  retbase_ = NULL;
  return temp;
}
inline void LoginResult::set_allocated_retbase(::com::adv::msg::RetBase* retbase) {
  delete retbase_;
  retbase_ = retbase;
  if (retbase) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.LoginResult.retbase)
}

// optional string key = 2;
inline void LoginResult::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginResult::key() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginResult.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginResult::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginResult.key)
}
inline void LoginResult::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.LoginResult.key)
}
inline void LoginResult::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.LoginResult.key)
}
inline ::std::string* LoginResult::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.LoginResult.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginResult::release_key() {
  // @@protoc_insertion_point(field_release:com.adv.msg.LoginResult.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginResult::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.LoginResult.key)
}

// optional int32 uid = 3;
inline void LoginResult::clear_uid() {
  uid_ = 0;
}
inline ::google::protobuf::int32 LoginResult::uid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginResult.uid)
  return uid_;
}
inline void LoginResult::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginResult.uid)
}

// optional int32 loginseq = 4;
inline void LoginResult::clear_loginseq() {
  loginseq_ = 0;
}
inline ::google::protobuf::int32 LoginResult::loginseq() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginResult.loginseq)
  return loginseq_;
}
inline void LoginResult::set_loginseq(::google::protobuf::int32 value) {
  
  loginseq_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginResult.loginseq)
}

// optional int32 accounttype = 5;
inline void LoginResult::clear_accounttype() {
  accounttype_ = 0;
}
inline ::google::protobuf::int32 LoginResult::accounttype() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginResult.accounttype)
  return accounttype_;
}
inline void LoginResult::set_accounttype(::google::protobuf::int32 value) {
  
  accounttype_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginResult.accounttype)
}

// optional int32 time = 6;
inline void LoginResult::clear_time() {
  time_ = 0;
}
inline ::google::protobuf::int32 LoginResult::time() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginResult.time)
  return time_;
}
inline void LoginResult::set_time(::google::protobuf::int32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginResult.time)
}

// optional int32 transid = 32;
inline void LoginResult::clear_transid() {
  transid_ = 0;
}
inline ::google::protobuf::int32 LoginResult::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LoginResult.transid)
  return transid_;
}
inline void LoginResult::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LoginResult.transid)
}

// -------------------------------------------------------------------

// LogoutRequest

// optional int32 deviceType = 1;
inline void LogoutRequest::clear_devicetype() {
  devicetype_ = 0;
}
inline ::google::protobuf::int32 LogoutRequest::devicetype() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LogoutRequest.deviceType)
  return devicetype_;
}
inline void LogoutRequest::set_devicetype(::google::protobuf::int32 value) {
  
  devicetype_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LogoutRequest.deviceType)
}

// optional string deviceid = 2;
inline void LogoutRequest::clear_deviceid() {
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LogoutRequest::deviceid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LogoutRequest.deviceid)
  return deviceid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LogoutRequest::set_deviceid(const ::std::string& value) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.LogoutRequest.deviceid)
}
inline void LogoutRequest::set_deviceid(const char* value) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.LogoutRequest.deviceid)
}
inline void LogoutRequest::set_deviceid(const char* value, size_t size) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.LogoutRequest.deviceid)
}
inline ::std::string* LogoutRequest::mutable_deviceid() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.LogoutRequest.deviceid)
  return deviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LogoutRequest::release_deviceid() {
  // @@protoc_insertion_point(field_release:com.adv.msg.LogoutRequest.deviceid)
  
  return deviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LogoutRequest::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid != NULL) {
    
  } else {
    
  }
  deviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceid);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.LogoutRequest.deviceid)
}

// optional int32 conid = 3;
inline void LogoutRequest::clear_conid() {
  conid_ = 0;
}
inline ::google::protobuf::int32 LogoutRequest::conid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LogoutRequest.conid)
  return conid_;
}
inline void LogoutRequest::set_conid(::google::protobuf::int32 value) {
  
  conid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LogoutRequest.conid)
}

// optional int32 transid = 32;
inline void LogoutRequest::clear_transid() {
  transid_ = 0;
}
inline ::google::protobuf::int32 LogoutRequest::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LogoutRequest.transid)
  return transid_;
}
inline void LogoutRequest::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LogoutRequest.transid)
}

// -------------------------------------------------------------------

// LogoutResult

// optional .com.adv.msg.RetBase retbase = 1;
inline bool LogoutResult::has_retbase() const {
  return !_is_default_instance_ && retbase_ != NULL;
}
inline void LogoutResult::clear_retbase() {
  if (GetArenaNoVirtual() == NULL && retbase_ != NULL) delete retbase_;
  retbase_ = NULL;
}
inline const ::com::adv::msg::RetBase& LogoutResult::retbase() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LogoutResult.retbase)
  return retbase_ != NULL ? *retbase_ : *default_instance_->retbase_;
}
inline ::com::adv::msg::RetBase* LogoutResult::mutable_retbase() {
  
  if (retbase_ == NULL) {
    retbase_ = new ::com::adv::msg::RetBase;
  }
  // @@protoc_insertion_point(field_mutable:com.adv.msg.LogoutResult.retbase)
  return retbase_;
}
inline ::com::adv::msg::RetBase* LogoutResult::release_retbase() {
  // @@protoc_insertion_point(field_release:com.adv.msg.LogoutResult.retbase)
  
  ::com::adv::msg::RetBase* temp = retbase_;
  retbase_ = NULL;
  return temp;
}
inline void LogoutResult::set_allocated_retbase(::com::adv::msg::RetBase* retbase) {
  delete retbase_;
  retbase_ = retbase;
  if (retbase) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.LogoutResult.retbase)
}

// optional int32 transid = 32;
inline void LogoutResult::clear_transid() {
  transid_ = 0;
}
inline ::google::protobuf::int32 LogoutResult::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.LogoutResult.transid)
  return transid_;
}
inline void LogoutResult::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.LogoutResult.transid)
}

// -------------------------------------------------------------------

// TaskNotify

// optional int32 tasktype = 1;
inline void TaskNotify::clear_tasktype() {
  tasktype_ = 0;
}
inline ::google::protobuf::int32 TaskNotify::tasktype() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.TaskNotify.tasktype)
  return tasktype_;
}
inline void TaskNotify::set_tasktype(::google::protobuf::int32 value) {
  
  tasktype_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.TaskNotify.tasktype)
}

// optional int32 transid = 32;
inline void TaskNotify::clear_transid() {
  transid_ = 0;
}
inline ::google::protobuf::int32 TaskNotify::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.TaskNotify.transid)
  return transid_;
}
inline void TaskNotify::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.TaskNotify.transid)
}

// -------------------------------------------------------------------

// SyncTaskRequest

// optional int64 syncpoint = 1;
inline void SyncTaskRequest::clear_syncpoint() {
  syncpoint_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SyncTaskRequest::syncpoint() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.SyncTaskRequest.syncpoint)
  return syncpoint_;
}
inline void SyncTaskRequest::set_syncpoint(::google::protobuf::int64 value) {
  
  syncpoint_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.SyncTaskRequest.syncpoint)
}

// optional int32 synctype = 2;
inline void SyncTaskRequest::clear_synctype() {
  synctype_ = 0;
}
inline ::google::protobuf::int32 SyncTaskRequest::synctype() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.SyncTaskRequest.synctype)
  return synctype_;
}
inline void SyncTaskRequest::set_synctype(::google::protobuf::int32 value) {
  
  synctype_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.SyncTaskRequest.synctype)
}

// optional int32 syncflag = 3;
inline void SyncTaskRequest::clear_syncflag() {
  syncflag_ = 0;
}
inline ::google::protobuf::int32 SyncTaskRequest::syncflag() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.SyncTaskRequest.syncflag)
  return syncflag_;
}
inline void SyncTaskRequest::set_syncflag(::google::protobuf::int32 value) {
  
  syncflag_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.SyncTaskRequest.syncflag)
}

// optional int32 synclimit = 4;
inline void SyncTaskRequest::clear_synclimit() {
  synclimit_ = 0;
}
inline ::google::protobuf::int32 SyncTaskRequest::synclimit() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.SyncTaskRequest.synclimit)
  return synclimit_;
}
inline void SyncTaskRequest::set_synclimit(::google::protobuf::int32 value) {
  
  synclimit_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.SyncTaskRequest.synclimit)
}

// optional int32 transid = 32;
inline void SyncTaskRequest::clear_transid() {
  transid_ = 0;
}
inline ::google::protobuf::int32 SyncTaskRequest::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.SyncTaskRequest.transid)
  return transid_;
}
inline void SyncTaskRequest::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.SyncTaskRequest.transid)
}

// -------------------------------------------------------------------

// SyncTaskResult

// optional .com.adv.msg.RetBase retbase = 1;
inline bool SyncTaskResult::has_retbase() const {
  return !_is_default_instance_ && retbase_ != NULL;
}
inline void SyncTaskResult::clear_retbase() {
  if (GetArenaNoVirtual() == NULL && retbase_ != NULL) delete retbase_;
  retbase_ = NULL;
}
inline const ::com::adv::msg::RetBase& SyncTaskResult::retbase() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.SyncTaskResult.retbase)
  return retbase_ != NULL ? *retbase_ : *default_instance_->retbase_;
}
inline ::com::adv::msg::RetBase* SyncTaskResult::mutable_retbase() {
  
  if (retbase_ == NULL) {
    retbase_ = new ::com::adv::msg::RetBase;
  }
  // @@protoc_insertion_point(field_mutable:com.adv.msg.SyncTaskResult.retbase)
  return retbase_;
}
inline ::com::adv::msg::RetBase* SyncTaskResult::release_retbase() {
  // @@protoc_insertion_point(field_release:com.adv.msg.SyncTaskResult.retbase)
  
  ::com::adv::msg::RetBase* temp = retbase_;
  retbase_ = NULL;
  return temp;
}
inline void SyncTaskResult::set_allocated_retbase(::com::adv::msg::RetBase* retbase) {
  delete retbase_;
  retbase_ = retbase;
  if (retbase) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.SyncTaskResult.retbase)
}

// repeated .com.adv.msg.TaskInfo taskinfos = 2;
inline int SyncTaskResult::taskinfos_size() const {
  return taskinfos_.size();
}
inline void SyncTaskResult::clear_taskinfos() {
  taskinfos_.Clear();
}
inline const ::com::adv::msg::TaskInfo& SyncTaskResult::taskinfos(int index) const {
  // @@protoc_insertion_point(field_get:com.adv.msg.SyncTaskResult.taskinfos)
  return taskinfos_.Get(index);
}
inline ::com::adv::msg::TaskInfo* SyncTaskResult::mutable_taskinfos(int index) {
  // @@protoc_insertion_point(field_mutable:com.adv.msg.SyncTaskResult.taskinfos)
  return taskinfos_.Mutable(index);
}
inline ::com::adv::msg::TaskInfo* SyncTaskResult::add_taskinfos() {
  // @@protoc_insertion_point(field_add:com.adv.msg.SyncTaskResult.taskinfos)
  return taskinfos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::com::adv::msg::TaskInfo >*
SyncTaskResult::mutable_taskinfos() {
  // @@protoc_insertion_point(field_mutable_list:com.adv.msg.SyncTaskResult.taskinfos)
  return &taskinfos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::com::adv::msg::TaskInfo >&
SyncTaskResult::taskinfos() const {
  // @@protoc_insertion_point(field_list:com.adv.msg.SyncTaskResult.taskinfos)
  return taskinfos_;
}

// optional int32 synctype = 3;
inline void SyncTaskResult::clear_synctype() {
  synctype_ = 0;
}
inline ::google::protobuf::int32 SyncTaskResult::synctype() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.SyncTaskResult.synctype)
  return synctype_;
}
inline void SyncTaskResult::set_synctype(::google::protobuf::int32 value) {
  
  synctype_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.SyncTaskResult.synctype)
}

// optional int32 continueflag = 4;
inline void SyncTaskResult::clear_continueflag() {
  continueflag_ = 0;
}
inline ::google::protobuf::int32 SyncTaskResult::continueflag() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.SyncTaskResult.continueflag)
  return continueflag_;
}
inline void SyncTaskResult::set_continueflag(::google::protobuf::int32 value) {
  
  continueflag_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.SyncTaskResult.continueflag)
}

// optional int64 maxtaskid = 5;
inline void SyncTaskResult::clear_maxtaskid() {
  maxtaskid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SyncTaskResult::maxtaskid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.SyncTaskResult.maxtaskid)
  return maxtaskid_;
}
inline void SyncTaskResult::set_maxtaskid(::google::protobuf::int64 value) {
  
  maxtaskid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.SyncTaskResult.maxtaskid)
}

// optional int32 transid = 32;
inline void SyncTaskResult::clear_transid() {
  transid_ = 0;
}
inline ::google::protobuf::int32 SyncTaskResult::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.SyncTaskResult.transid)
  return transid_;
}
inline void SyncTaskResult::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.SyncTaskResult.transid)
}

// -------------------------------------------------------------------

// ReportTaskRequest

// optional .com.adv.msg.TaskInfo taskinfo = 1;
inline bool ReportTaskRequest::has_taskinfo() const {
  return !_is_default_instance_ && taskinfo_ != NULL;
}
inline void ReportTaskRequest::clear_taskinfo() {
  if (GetArenaNoVirtual() == NULL && taskinfo_ != NULL) delete taskinfo_;
  taskinfo_ = NULL;
}
inline const ::com::adv::msg::TaskInfo& ReportTaskRequest::taskinfo() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.ReportTaskRequest.taskinfo)
  return taskinfo_ != NULL ? *taskinfo_ : *default_instance_->taskinfo_;
}
inline ::com::adv::msg::TaskInfo* ReportTaskRequest::mutable_taskinfo() {
  
  if (taskinfo_ == NULL) {
    taskinfo_ = new ::com::adv::msg::TaskInfo;
  }
  // @@protoc_insertion_point(field_mutable:com.adv.msg.ReportTaskRequest.taskinfo)
  return taskinfo_;
}
inline ::com::adv::msg::TaskInfo* ReportTaskRequest::release_taskinfo() {
  // @@protoc_insertion_point(field_release:com.adv.msg.ReportTaskRequest.taskinfo)
  
  ::com::adv::msg::TaskInfo* temp = taskinfo_;
  taskinfo_ = NULL;
  return temp;
}
inline void ReportTaskRequest::set_allocated_taskinfo(::com::adv::msg::TaskInfo* taskinfo) {
  delete taskinfo_;
  taskinfo_ = taskinfo;
  if (taskinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.ReportTaskRequest.taskinfo)
}

// optional string reward = 2;
inline void ReportTaskRequest::clear_reward() {
  reward_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportTaskRequest::reward() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.ReportTaskRequest.reward)
  return reward_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportTaskRequest::set_reward(const ::std::string& value) {
  
  reward_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.ReportTaskRequest.reward)
}
inline void ReportTaskRequest::set_reward(const char* value) {
  
  reward_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.ReportTaskRequest.reward)
}
inline void ReportTaskRequest::set_reward(const char* value, size_t size) {
  
  reward_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.ReportTaskRequest.reward)
}
inline ::std::string* ReportTaskRequest::mutable_reward() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.ReportTaskRequest.reward)
  return reward_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportTaskRequest::release_reward() {
  // @@protoc_insertion_point(field_release:com.adv.msg.ReportTaskRequest.reward)
  
  return reward_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportTaskRequest::set_allocated_reward(::std::string* reward) {
  if (reward != NULL) {
    
  } else {
    
  }
  reward_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reward);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.ReportTaskRequest.reward)
}

// optional int32 transid = 32;
inline void ReportTaskRequest::clear_transid() {
  transid_ = 0;
}
inline ::google::protobuf::int32 ReportTaskRequest::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.ReportTaskRequest.transid)
  return transid_;
}
inline void ReportTaskRequest::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.ReportTaskRequest.transid)
}

// -------------------------------------------------------------------

// ReportTaskResult

// optional .com.adv.msg.RetBase retbase = 1;
inline bool ReportTaskResult::has_retbase() const {
  return !_is_default_instance_ && retbase_ != NULL;
}
inline void ReportTaskResult::clear_retbase() {
  if (GetArenaNoVirtual() == NULL && retbase_ != NULL) delete retbase_;
  retbase_ = NULL;
}
inline const ::com::adv::msg::RetBase& ReportTaskResult::retbase() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.ReportTaskResult.retbase)
  return retbase_ != NULL ? *retbase_ : *default_instance_->retbase_;
}
inline ::com::adv::msg::RetBase* ReportTaskResult::mutable_retbase() {
  
  if (retbase_ == NULL) {
    retbase_ = new ::com::adv::msg::RetBase;
  }
  // @@protoc_insertion_point(field_mutable:com.adv.msg.ReportTaskResult.retbase)
  return retbase_;
}
inline ::com::adv::msg::RetBase* ReportTaskResult::release_retbase() {
  // @@protoc_insertion_point(field_release:com.adv.msg.ReportTaskResult.retbase)
  
  ::com::adv::msg::RetBase* temp = retbase_;
  retbase_ = NULL;
  return temp;
}
inline void ReportTaskResult::set_allocated_retbase(::com::adv::msg::RetBase* retbase) {
  delete retbase_;
  retbase_ = retbase;
  if (retbase) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.ReportTaskResult.retbase)
}

// optional int64 taskid = 2;
inline void ReportTaskResult::clear_taskid() {
  taskid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ReportTaskResult::taskid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.ReportTaskResult.taskid)
  return taskid_;
}
inline void ReportTaskResult::set_taskid(::google::protobuf::int64 value) {
  
  taskid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.ReportTaskResult.taskid)
}

// optional string reward = 3;
inline void ReportTaskResult::clear_reward() {
  reward_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportTaskResult::reward() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.ReportTaskResult.reward)
  return reward_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportTaskResult::set_reward(const ::std::string& value) {
  
  reward_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.ReportTaskResult.reward)
}
inline void ReportTaskResult::set_reward(const char* value) {
  
  reward_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.ReportTaskResult.reward)
}
inline void ReportTaskResult::set_reward(const char* value, size_t size) {
  
  reward_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.ReportTaskResult.reward)
}
inline ::std::string* ReportTaskResult::mutable_reward() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.ReportTaskResult.reward)
  return reward_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportTaskResult::release_reward() {
  // @@protoc_insertion_point(field_release:com.adv.msg.ReportTaskResult.reward)
  
  return reward_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportTaskResult::set_allocated_reward(::std::string* reward) {
  if (reward != NULL) {
    
  } else {
    
  }
  reward_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reward);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.ReportTaskResult.reward)
}

// optional int32 done_step = 4;
inline void ReportTaskResult::clear_done_step() {
  done_step_ = 0;
}
inline ::google::protobuf::int32 ReportTaskResult::done_step() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.ReportTaskResult.done_step)
  return done_step_;
}
inline void ReportTaskResult::set_done_step(::google::protobuf::int32 value) {
  
  done_step_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.ReportTaskResult.done_step)
}

// optional int32 tasktype = 5;
inline void ReportTaskResult::clear_tasktype() {
  tasktype_ = 0;
}
inline ::google::protobuf::int32 ReportTaskResult::tasktype() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.ReportTaskResult.tasktype)
  return tasktype_;
}
inline void ReportTaskResult::set_tasktype(::google::protobuf::int32 value) {
  
  tasktype_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.ReportTaskResult.tasktype)
}

// optional int32 report_time = 6;
inline void ReportTaskResult::clear_report_time() {
  report_time_ = 0;
}
inline ::google::protobuf::int32 ReportTaskResult::report_time() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.ReportTaskResult.report_time)
  return report_time_;
}
inline void ReportTaskResult::set_report_time(::google::protobuf::int32 value) {
  
  report_time_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.ReportTaskResult.report_time)
}

// optional int32 transid = 32;
inline void ReportTaskResult::clear_transid() {
  transid_ = 0;
}
inline ::google::protobuf::int32 ReportTaskResult::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.ReportTaskResult.transid)
  return transid_;
}
inline void ReportTaskResult::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.ReportTaskResult.transid)
}

// -------------------------------------------------------------------

// GetIncomeRequest

// optional int32 transid = 32;
inline void GetIncomeRequest::clear_transid() {
  transid_ = 0;
}
inline ::google::protobuf::int32 GetIncomeRequest::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.GetIncomeRequest.transid)
  return transid_;
}
inline void GetIncomeRequest::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.GetIncomeRequest.transid)
}

// -------------------------------------------------------------------

// GetIncomeResult

// optional .com.adv.msg.RetBase retbase = 1;
inline bool GetIncomeResult::has_retbase() const {
  return !_is_default_instance_ && retbase_ != NULL;
}
inline void GetIncomeResult::clear_retbase() {
  if (GetArenaNoVirtual() == NULL && retbase_ != NULL) delete retbase_;
  retbase_ = NULL;
}
inline const ::com::adv::msg::RetBase& GetIncomeResult::retbase() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.GetIncomeResult.retbase)
  return retbase_ != NULL ? *retbase_ : *default_instance_->retbase_;
}
inline ::com::adv::msg::RetBase* GetIncomeResult::mutable_retbase() {
  
  if (retbase_ == NULL) {
    retbase_ = new ::com::adv::msg::RetBase;
  }
  // @@protoc_insertion_point(field_mutable:com.adv.msg.GetIncomeResult.retbase)
  return retbase_;
}
inline ::com::adv::msg::RetBase* GetIncomeResult::release_retbase() {
  // @@protoc_insertion_point(field_release:com.adv.msg.GetIncomeResult.retbase)
  
  ::com::adv::msg::RetBase* temp = retbase_;
  retbase_ = NULL;
  return temp;
}
inline void GetIncomeResult::set_allocated_retbase(::com::adv::msg::RetBase* retbase) {
  delete retbase_;
  retbase_ = retbase;
  if (retbase) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.GetIncomeResult.retbase)
}

// optional string pre_cash = 2;
inline void GetIncomeResult::clear_pre_cash() {
  pre_cash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetIncomeResult::pre_cash() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.GetIncomeResult.pre_cash)
  return pre_cash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetIncomeResult::set_pre_cash(const ::std::string& value) {
  
  pre_cash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.GetIncomeResult.pre_cash)
}
inline void GetIncomeResult::set_pre_cash(const char* value) {
  
  pre_cash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.GetIncomeResult.pre_cash)
}
inline void GetIncomeResult::set_pre_cash(const char* value, size_t size) {
  
  pre_cash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.GetIncomeResult.pre_cash)
}
inline ::std::string* GetIncomeResult::mutable_pre_cash() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.GetIncomeResult.pre_cash)
  return pre_cash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetIncomeResult::release_pre_cash() {
  // @@protoc_insertion_point(field_release:com.adv.msg.GetIncomeResult.pre_cash)
  
  return pre_cash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetIncomeResult::set_allocated_pre_cash(::std::string* pre_cash) {
  if (pre_cash != NULL) {
    
  } else {
    
  }
  pre_cash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pre_cash);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.GetIncomeResult.pre_cash)
}

// optional string useable_cash = 3;
inline void GetIncomeResult::clear_useable_cash() {
  useable_cash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetIncomeResult::useable_cash() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.GetIncomeResult.useable_cash)
  return useable_cash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetIncomeResult::set_useable_cash(const ::std::string& value) {
  
  useable_cash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.GetIncomeResult.useable_cash)
}
inline void GetIncomeResult::set_useable_cash(const char* value) {
  
  useable_cash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.GetIncomeResult.useable_cash)
}
inline void GetIncomeResult::set_useable_cash(const char* value, size_t size) {
  
  useable_cash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.GetIncomeResult.useable_cash)
}
inline ::std::string* GetIncomeResult::mutable_useable_cash() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.GetIncomeResult.useable_cash)
  return useable_cash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetIncomeResult::release_useable_cash() {
  // @@protoc_insertion_point(field_release:com.adv.msg.GetIncomeResult.useable_cash)
  
  return useable_cash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetIncomeResult::set_allocated_useable_cash(::std::string* useable_cash) {
  if (useable_cash != NULL) {
    
  } else {
    
  }
  useable_cash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), useable_cash);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.GetIncomeResult.useable_cash)
}

// optional string fetched_cash = 4;
inline void GetIncomeResult::clear_fetched_cash() {
  fetched_cash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetIncomeResult::fetched_cash() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.GetIncomeResult.fetched_cash)
  return fetched_cash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetIncomeResult::set_fetched_cash(const ::std::string& value) {
  
  fetched_cash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.GetIncomeResult.fetched_cash)
}
inline void GetIncomeResult::set_fetched_cash(const char* value) {
  
  fetched_cash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.GetIncomeResult.fetched_cash)
}
inline void GetIncomeResult::set_fetched_cash(const char* value, size_t size) {
  
  fetched_cash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.GetIncomeResult.fetched_cash)
}
inline ::std::string* GetIncomeResult::mutable_fetched_cash() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.GetIncomeResult.fetched_cash)
  return fetched_cash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetIncomeResult::release_fetched_cash() {
  // @@protoc_insertion_point(field_release:com.adv.msg.GetIncomeResult.fetched_cash)
  
  return fetched_cash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetIncomeResult::set_allocated_fetched_cash(::std::string* fetched_cash) {
  if (fetched_cash != NULL) {
    
  } else {
    
  }
  fetched_cash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fetched_cash);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.GetIncomeResult.fetched_cash)
}

// optional int32 rank = 5;
inline void GetIncomeResult::clear_rank() {
  rank_ = 0;
}
inline ::google::protobuf::int32 GetIncomeResult::rank() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.GetIncomeResult.rank)
  return rank_;
}
inline void GetIncomeResult::set_rank(::google::protobuf::int32 value) {
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.GetIncomeResult.rank)
}

// optional string desc = 6;
inline void GetIncomeResult::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetIncomeResult::desc() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.GetIncomeResult.desc)
  return desc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetIncomeResult::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.GetIncomeResult.desc)
}
inline void GetIncomeResult::set_desc(const char* value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.GetIncomeResult.desc)
}
inline void GetIncomeResult::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.GetIncomeResult.desc)
}
inline ::std::string* GetIncomeResult::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.GetIncomeResult.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetIncomeResult::release_desc() {
  // @@protoc_insertion_point(field_release:com.adv.msg.GetIncomeResult.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetIncomeResult::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.GetIncomeResult.desc)
}

// optional int32 transid = 32;
inline void GetIncomeResult::clear_transid() {
  transid_ = 0;
}
inline ::google::protobuf::int32 GetIncomeResult::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.GetIncomeResult.transid)
  return transid_;
}
inline void GetIncomeResult::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.GetIncomeResult.transid)
}

// -------------------------------------------------------------------

// AckRequest

// optional int32 type = 1;
inline void AckRequest::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 AckRequest::type() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.AckRequest.type)
  return type_;
}
inline void AckRequest::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.AckRequest.type)
}

// repeated int64 id = 2;
inline int AckRequest::id_size() const {
  return id_.size();
}
inline void AckRequest::clear_id() {
  id_.Clear();
}
inline ::google::protobuf::int64 AckRequest::id(int index) const {
  // @@protoc_insertion_point(field_get:com.adv.msg.AckRequest.id)
  return id_.Get(index);
}
inline void AckRequest::set_id(int index, ::google::protobuf::int64 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.adv.msg.AckRequest.id)
}
inline void AckRequest::add_id(::google::protobuf::int64 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:com.adv.msg.AckRequest.id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
AckRequest::id() const {
  // @@protoc_insertion_point(field_list:com.adv.msg.AckRequest.id)
  return id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
AckRequest::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:com.adv.msg.AckRequest.id)
  return &id_;
}

// optional int32 time = 3;
inline void AckRequest::clear_time() {
  time_ = 0;
}
inline ::google::protobuf::int32 AckRequest::time() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.AckRequest.time)
  return time_;
}
inline void AckRequest::set_time(::google::protobuf::int32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.AckRequest.time)
}

// optional int32 transid = 32;
inline void AckRequest::clear_transid() {
  transid_ = 0;
}
inline ::google::protobuf::int32 AckRequest::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.AckRequest.transid)
  return transid_;
}
inline void AckRequest::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.AckRequest.transid)
}

// -------------------------------------------------------------------

// SaveTaskRequest

// repeated .com.adv.msg.TaskInfo taskinfo = 1;
inline int SaveTaskRequest::taskinfo_size() const {
  return taskinfo_.size();
}
inline void SaveTaskRequest::clear_taskinfo() {
  taskinfo_.Clear();
}
inline const ::com::adv::msg::TaskInfo& SaveTaskRequest::taskinfo(int index) const {
  // @@protoc_insertion_point(field_get:com.adv.msg.SaveTaskRequest.taskinfo)
  return taskinfo_.Get(index);
}
inline ::com::adv::msg::TaskInfo* SaveTaskRequest::mutable_taskinfo(int index) {
  // @@protoc_insertion_point(field_mutable:com.adv.msg.SaveTaskRequest.taskinfo)
  return taskinfo_.Mutable(index);
}
inline ::com::adv::msg::TaskInfo* SaveTaskRequest::add_taskinfo() {
  // @@protoc_insertion_point(field_add:com.adv.msg.SaveTaskRequest.taskinfo)
  return taskinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::com::adv::msg::TaskInfo >*
SaveTaskRequest::mutable_taskinfo() {
  // @@protoc_insertion_point(field_mutable_list:com.adv.msg.SaveTaskRequest.taskinfo)
  return &taskinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::com::adv::msg::TaskInfo >&
SaveTaskRequest::taskinfo() const {
  // @@protoc_insertion_point(field_list:com.adv.msg.SaveTaskRequest.taskinfo)
  return taskinfo_;
}

// optional int32 transid = 32;
inline void SaveTaskRequest::clear_transid() {
  transid_ = 0;
}
inline ::google::protobuf::int32 SaveTaskRequest::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.SaveTaskRequest.transid)
  return transid_;
}
inline void SaveTaskRequest::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.SaveTaskRequest.transid)
}

// -------------------------------------------------------------------

// SaveTaskResult

// optional .com.adv.msg.RetBase retbase = 1;
inline bool SaveTaskResult::has_retbase() const {
  return !_is_default_instance_ && retbase_ != NULL;
}
inline void SaveTaskResult::clear_retbase() {
  if (GetArenaNoVirtual() == NULL && retbase_ != NULL) delete retbase_;
  retbase_ = NULL;
}
inline const ::com::adv::msg::RetBase& SaveTaskResult::retbase() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.SaveTaskResult.retbase)
  return retbase_ != NULL ? *retbase_ : *default_instance_->retbase_;
}
inline ::com::adv::msg::RetBase* SaveTaskResult::mutable_retbase() {
  
  if (retbase_ == NULL) {
    retbase_ = new ::com::adv::msg::RetBase;
  }
  // @@protoc_insertion_point(field_mutable:com.adv.msg.SaveTaskResult.retbase)
  return retbase_;
}
inline ::com::adv::msg::RetBase* SaveTaskResult::release_retbase() {
  // @@protoc_insertion_point(field_release:com.adv.msg.SaveTaskResult.retbase)
  
  ::com::adv::msg::RetBase* temp = retbase_;
  retbase_ = NULL;
  return temp;
}
inline void SaveTaskResult::set_allocated_retbase(::com::adv::msg::RetBase* retbase) {
  delete retbase_;
  retbase_ = retbase;
  if (retbase) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.SaveTaskResult.retbase)
}

// optional int32 transid = 32;
inline void SaveTaskResult::clear_transid() {
  transid_ = 0;
}
inline ::google::protobuf::int32 SaveTaskResult::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.SaveTaskResult.transid)
  return transid_;
}
inline void SaveTaskResult::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.SaveTaskResult.transid)
}

// -------------------------------------------------------------------

// WithdrawRequest

// optional int32 type = 1;
inline void WithdrawRequest::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 WithdrawRequest::type() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.WithdrawRequest.type)
  return type_;
}
inline void WithdrawRequest::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.WithdrawRequest.type)
}

// optional int32 withdraw_cash = 2;
inline void WithdrawRequest::clear_withdraw_cash() {
  withdraw_cash_ = 0;
}
inline ::google::protobuf::int32 WithdrawRequest::withdraw_cash() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.WithdrawRequest.withdraw_cash)
  return withdraw_cash_;
}
inline void WithdrawRequest::set_withdraw_cash(::google::protobuf::int32 value) {
  
  withdraw_cash_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.WithdrawRequest.withdraw_cash)
}

// optional string id = 3;
inline void WithdrawRequest::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WithdrawRequest::id() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.WithdrawRequest.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WithdrawRequest::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.WithdrawRequest.id)
}
inline void WithdrawRequest::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.WithdrawRequest.id)
}
inline void WithdrawRequest::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.WithdrawRequest.id)
}
inline ::std::string* WithdrawRequest::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.WithdrawRequest.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WithdrawRequest::release_id() {
  // @@protoc_insertion_point(field_release:com.adv.msg.WithdrawRequest.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WithdrawRequest::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.WithdrawRequest.id)
}

// optional string open_id = 4;
inline void WithdrawRequest::clear_open_id() {
  open_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WithdrawRequest::open_id() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.WithdrawRequest.open_id)
  return open_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WithdrawRequest::set_open_id(const ::std::string& value) {
  
  open_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.WithdrawRequest.open_id)
}
inline void WithdrawRequest::set_open_id(const char* value) {
  
  open_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.WithdrawRequest.open_id)
}
inline void WithdrawRequest::set_open_id(const char* value, size_t size) {
  
  open_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.WithdrawRequest.open_id)
}
inline ::std::string* WithdrawRequest::mutable_open_id() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.WithdrawRequest.open_id)
  return open_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WithdrawRequest::release_open_id() {
  // @@protoc_insertion_point(field_release:com.adv.msg.WithdrawRequest.open_id)
  
  return open_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WithdrawRequest::set_allocated_open_id(::std::string* open_id) {
  if (open_id != NULL) {
    
  } else {
    
  }
  open_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), open_id);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.WithdrawRequest.open_id)
}

// optional string passwd = 5;
inline void WithdrawRequest::clear_passwd() {
  passwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WithdrawRequest::passwd() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.WithdrawRequest.passwd)
  return passwd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WithdrawRequest::set_passwd(const ::std::string& value) {
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.WithdrawRequest.passwd)
}
inline void WithdrawRequest::set_passwd(const char* value) {
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.WithdrawRequest.passwd)
}
inline void WithdrawRequest::set_passwd(const char* value, size_t size) {
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.WithdrawRequest.passwd)
}
inline ::std::string* WithdrawRequest::mutable_passwd() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.WithdrawRequest.passwd)
  return passwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WithdrawRequest::release_passwd() {
  // @@protoc_insertion_point(field_release:com.adv.msg.WithdrawRequest.passwd)
  
  return passwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WithdrawRequest::set_allocated_passwd(::std::string* passwd) {
  if (passwd != NULL) {
    
  } else {
    
  }
  passwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), passwd);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.WithdrawRequest.passwd)
}

// optional string user_name = 6;
inline void WithdrawRequest::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WithdrawRequest::user_name() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.WithdrawRequest.user_name)
  return user_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WithdrawRequest::set_user_name(const ::std::string& value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.WithdrawRequest.user_name)
}
inline void WithdrawRequest::set_user_name(const char* value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.WithdrawRequest.user_name)
}
inline void WithdrawRequest::set_user_name(const char* value, size_t size) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.WithdrawRequest.user_name)
}
inline ::std::string* WithdrawRequest::mutable_user_name() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.WithdrawRequest.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WithdrawRequest::release_user_name() {
  // @@protoc_insertion_point(field_release:com.adv.msg.WithdrawRequest.user_name)
  
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WithdrawRequest::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    
  } else {
    
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.WithdrawRequest.user_name)
}

// optional string desc = 7;
inline void WithdrawRequest::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WithdrawRequest::desc() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.WithdrawRequest.desc)
  return desc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WithdrawRequest::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.WithdrawRequest.desc)
}
inline void WithdrawRequest::set_desc(const char* value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.WithdrawRequest.desc)
}
inline void WithdrawRequest::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.WithdrawRequest.desc)
}
inline ::std::string* WithdrawRequest::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.WithdrawRequest.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WithdrawRequest::release_desc() {
  // @@protoc_insertion_point(field_release:com.adv.msg.WithdrawRequest.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WithdrawRequest::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.WithdrawRequest.desc)
}

// optional int32 time = 8;
inline void WithdrawRequest::clear_time() {
  time_ = 0;
}
inline ::google::protobuf::int32 WithdrawRequest::time() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.WithdrawRequest.time)
  return time_;
}
inline void WithdrawRequest::set_time(::google::protobuf::int32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.WithdrawRequest.time)
}

// optional int32 transid = 32;
inline void WithdrawRequest::clear_transid() {
  transid_ = 0;
}
inline ::google::protobuf::int32 WithdrawRequest::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.WithdrawRequest.transid)
  return transid_;
}
inline void WithdrawRequest::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.WithdrawRequest.transid)
}

// -------------------------------------------------------------------

// WithdrawResult

// optional .com.adv.msg.RetBase retbase = 1;
inline bool WithdrawResult::has_retbase() const {
  return !_is_default_instance_ && retbase_ != NULL;
}
inline void WithdrawResult::clear_retbase() {
  if (GetArenaNoVirtual() == NULL && retbase_ != NULL) delete retbase_;
  retbase_ = NULL;
}
inline const ::com::adv::msg::RetBase& WithdrawResult::retbase() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.WithdrawResult.retbase)
  return retbase_ != NULL ? *retbase_ : *default_instance_->retbase_;
}
inline ::com::adv::msg::RetBase* WithdrawResult::mutable_retbase() {
  
  if (retbase_ == NULL) {
    retbase_ = new ::com::adv::msg::RetBase;
  }
  // @@protoc_insertion_point(field_mutable:com.adv.msg.WithdrawResult.retbase)
  return retbase_;
}
inline ::com::adv::msg::RetBase* WithdrawResult::release_retbase() {
  // @@protoc_insertion_point(field_release:com.adv.msg.WithdrawResult.retbase)
  
  ::com::adv::msg::RetBase* temp = retbase_;
  retbase_ = NULL;
  return temp;
}
inline void WithdrawResult::set_allocated_retbase(::com::adv::msg::RetBase* retbase) {
  delete retbase_;
  retbase_ = retbase;
  if (retbase) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.WithdrawResult.retbase)
}

// optional int32 type = 2;
inline void WithdrawResult::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 WithdrawResult::type() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.WithdrawResult.type)
  return type_;
}
inline void WithdrawResult::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.WithdrawResult.type)
}

// optional int32 withdraw_cash = 3;
inline void WithdrawResult::clear_withdraw_cash() {
  withdraw_cash_ = 0;
}
inline ::google::protobuf::int32 WithdrawResult::withdraw_cash() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.WithdrawResult.withdraw_cash)
  return withdraw_cash_;
}
inline void WithdrawResult::set_withdraw_cash(::google::protobuf::int32 value) {
  
  withdraw_cash_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.WithdrawResult.withdraw_cash)
}

// optional string trade_id = 4;
inline void WithdrawResult::clear_trade_id() {
  trade_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WithdrawResult::trade_id() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.WithdrawResult.trade_id)
  return trade_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WithdrawResult::set_trade_id(const ::std::string& value) {
  
  trade_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.WithdrawResult.trade_id)
}
inline void WithdrawResult::set_trade_id(const char* value) {
  
  trade_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.WithdrawResult.trade_id)
}
inline void WithdrawResult::set_trade_id(const char* value, size_t size) {
  
  trade_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.WithdrawResult.trade_id)
}
inline ::std::string* WithdrawResult::mutable_trade_id() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.WithdrawResult.trade_id)
  return trade_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WithdrawResult::release_trade_id() {
  // @@protoc_insertion_point(field_release:com.adv.msg.WithdrawResult.trade_id)
  
  return trade_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WithdrawResult::set_allocated_trade_id(::std::string* trade_id) {
  if (trade_id != NULL) {
    
  } else {
    
  }
  trade_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trade_id);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.WithdrawResult.trade_id)
}

// optional string desc = 5;
inline void WithdrawResult::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WithdrawResult::desc() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.WithdrawResult.desc)
  return desc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WithdrawResult::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.WithdrawResult.desc)
}
inline void WithdrawResult::set_desc(const char* value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.WithdrawResult.desc)
}
inline void WithdrawResult::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.WithdrawResult.desc)
}
inline ::std::string* WithdrawResult::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.WithdrawResult.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WithdrawResult::release_desc() {
  // @@protoc_insertion_point(field_release:com.adv.msg.WithdrawResult.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WithdrawResult::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.WithdrawResult.desc)
}

// optional int32 time = 6;
inline void WithdrawResult::clear_time() {
  time_ = 0;
}
inline ::google::protobuf::int32 WithdrawResult::time() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.WithdrawResult.time)
  return time_;
}
inline void WithdrawResult::set_time(::google::protobuf::int32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.WithdrawResult.time)
}

// optional string pre_cash = 7;
inline void WithdrawResult::clear_pre_cash() {
  pre_cash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WithdrawResult::pre_cash() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.WithdrawResult.pre_cash)
  return pre_cash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WithdrawResult::set_pre_cash(const ::std::string& value) {
  
  pre_cash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.WithdrawResult.pre_cash)
}
inline void WithdrawResult::set_pre_cash(const char* value) {
  
  pre_cash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.WithdrawResult.pre_cash)
}
inline void WithdrawResult::set_pre_cash(const char* value, size_t size) {
  
  pre_cash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.WithdrawResult.pre_cash)
}
inline ::std::string* WithdrawResult::mutable_pre_cash() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.WithdrawResult.pre_cash)
  return pre_cash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WithdrawResult::release_pre_cash() {
  // @@protoc_insertion_point(field_release:com.adv.msg.WithdrawResult.pre_cash)
  
  return pre_cash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WithdrawResult::set_allocated_pre_cash(::std::string* pre_cash) {
  if (pre_cash != NULL) {
    
  } else {
    
  }
  pre_cash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pre_cash);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.WithdrawResult.pre_cash)
}

// optional string useable_cash = 8;
inline void WithdrawResult::clear_useable_cash() {
  useable_cash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WithdrawResult::useable_cash() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.WithdrawResult.useable_cash)
  return useable_cash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WithdrawResult::set_useable_cash(const ::std::string& value) {
  
  useable_cash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.WithdrawResult.useable_cash)
}
inline void WithdrawResult::set_useable_cash(const char* value) {
  
  useable_cash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.WithdrawResult.useable_cash)
}
inline void WithdrawResult::set_useable_cash(const char* value, size_t size) {
  
  useable_cash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.WithdrawResult.useable_cash)
}
inline ::std::string* WithdrawResult::mutable_useable_cash() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.WithdrawResult.useable_cash)
  return useable_cash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WithdrawResult::release_useable_cash() {
  // @@protoc_insertion_point(field_release:com.adv.msg.WithdrawResult.useable_cash)
  
  return useable_cash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WithdrawResult::set_allocated_useable_cash(::std::string* useable_cash) {
  if (useable_cash != NULL) {
    
  } else {
    
  }
  useable_cash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), useable_cash);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.WithdrawResult.useable_cash)
}

// optional string fetched_cash = 9;
inline void WithdrawResult::clear_fetched_cash() {
  fetched_cash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WithdrawResult::fetched_cash() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.WithdrawResult.fetched_cash)
  return fetched_cash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WithdrawResult::set_fetched_cash(const ::std::string& value) {
  
  fetched_cash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.WithdrawResult.fetched_cash)
}
inline void WithdrawResult::set_fetched_cash(const char* value) {
  
  fetched_cash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.WithdrawResult.fetched_cash)
}
inline void WithdrawResult::set_fetched_cash(const char* value, size_t size) {
  
  fetched_cash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.WithdrawResult.fetched_cash)
}
inline ::std::string* WithdrawResult::mutable_fetched_cash() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.WithdrawResult.fetched_cash)
  return fetched_cash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WithdrawResult::release_fetched_cash() {
  // @@protoc_insertion_point(field_release:com.adv.msg.WithdrawResult.fetched_cash)
  
  return fetched_cash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WithdrawResult::set_allocated_fetched_cash(::std::string* fetched_cash) {
  if (fetched_cash != NULL) {
    
  } else {
    
  }
  fetched_cash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fetched_cash);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.WithdrawResult.fetched_cash)
}

// optional int32 transid = 32;
inline void WithdrawResult::clear_transid() {
  transid_ = 0;
}
inline ::google::protobuf::int32 WithdrawResult::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.WithdrawResult.transid)
  return transid_;
}
inline void WithdrawResult::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.WithdrawResult.transid)
}

// -------------------------------------------------------------------

// MysqlRequest

// optional int32 sqlid = 1;
inline void MysqlRequest::clear_sqlid() {
  sqlid_ = 0;
}
inline ::google::protobuf::int32 MysqlRequest::sqlid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.MysqlRequest.sqlid)
  return sqlid_;
}
inline void MysqlRequest::set_sqlid(::google::protobuf::int32 value) {
  
  sqlid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.MysqlRequest.sqlid)
}

// optional string sql = 2;
inline void MysqlRequest::clear_sql() {
  sql_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MysqlRequest::sql() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.MysqlRequest.sql)
  return sql_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MysqlRequest::set_sql(const ::std::string& value) {
  
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.MysqlRequest.sql)
}
inline void MysqlRequest::set_sql(const char* value) {
  
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.MysqlRequest.sql)
}
inline void MysqlRequest::set_sql(const char* value, size_t size) {
  
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.MysqlRequest.sql)
}
inline ::std::string* MysqlRequest::mutable_sql() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.MysqlRequest.sql)
  return sql_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MysqlRequest::release_sql() {
  // @@protoc_insertion_point(field_release:com.adv.msg.MysqlRequest.sql)
  
  return sql_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MysqlRequest::set_allocated_sql(::std::string* sql) {
  if (sql != NULL) {
    
  } else {
    
  }
  sql_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sql);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.MysqlRequest.sql)
}

// optional int32 isrequestfield = 3;
inline void MysqlRequest::clear_isrequestfield() {
  isrequestfield_ = 0;
}
inline ::google::protobuf::int32 MysqlRequest::isrequestfield() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.MysqlRequest.isrequestfield)
  return isrequestfield_;
}
inline void MysqlRequest::set_isrequestfield(::google::protobuf::int32 value) {
  
  isrequestfield_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.MysqlRequest.isrequestfield)
}

// optional int32 limit = 4;
inline void MysqlRequest::clear_limit() {
  limit_ = 0;
}
inline ::google::protobuf::int32 MysqlRequest::limit() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.MysqlRequest.limit)
  return limit_;
}
inline void MysqlRequest::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.MysqlRequest.limit)
}

// optional int32 timeout = 5;
inline void MysqlRequest::clear_timeout() {
  timeout_ = 0;
}
inline ::google::protobuf::int32 MysqlRequest::timeout() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.MysqlRequest.timeout)
  return timeout_;
}
inline void MysqlRequest::set_timeout(::google::protobuf::int32 value) {
  
  timeout_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.MysqlRequest.timeout)
}

// -------------------------------------------------------------------

// MysqlResult

// optional .com.adv.msg.RetBase retbase = 1;
inline bool MysqlResult::has_retbase() const {
  return !_is_default_instance_ && retbase_ != NULL;
}
inline void MysqlResult::clear_retbase() {
  if (GetArenaNoVirtual() == NULL && retbase_ != NULL) delete retbase_;
  retbase_ = NULL;
}
inline const ::com::adv::msg::RetBase& MysqlResult::retbase() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.MysqlResult.retbase)
  return retbase_ != NULL ? *retbase_ : *default_instance_->retbase_;
}
inline ::com::adv::msg::RetBase* MysqlResult::mutable_retbase() {
  
  if (retbase_ == NULL) {
    retbase_ = new ::com::adv::msg::RetBase;
  }
  // @@protoc_insertion_point(field_mutable:com.adv.msg.MysqlResult.retbase)
  return retbase_;
}
inline ::com::adv::msg::RetBase* MysqlResult::release_retbase() {
  // @@protoc_insertion_point(field_release:com.adv.msg.MysqlResult.retbase)
  
  ::com::adv::msg::RetBase* temp = retbase_;
  retbase_ = NULL;
  return temp;
}
inline void MysqlResult::set_allocated_retbase(::com::adv::msg::RetBase* retbase) {
  delete retbase_;
  retbase_ = retbase;
  if (retbase) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.MysqlResult.retbase)
}

// optional int32 affectedrows = 2;
inline void MysqlResult::clear_affectedrows() {
  affectedrows_ = 0;
}
inline ::google::protobuf::int32 MysqlResult::affectedrows() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.MysqlResult.affectedrows)
  return affectedrows_;
}
inline void MysqlResult::set_affectedrows(::google::protobuf::int32 value) {
  
  affectedrows_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.MysqlResult.affectedrows)
}

// optional int32 insertid = 3;
inline void MysqlResult::clear_insertid() {
  insertid_ = 0;
}
inline ::google::protobuf::int32 MysqlResult::insertid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.MysqlResult.insertid)
  return insertid_;
}
inline void MysqlResult::set_insertid(::google::protobuf::int32 value) {
  
  insertid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.MysqlResult.insertid)
}

// repeated .com.adv.msg.PRow rows = 4;
inline int MysqlResult::rows_size() const {
  return rows_.size();
}
inline void MysqlResult::clear_rows() {
  rows_.Clear();
}
inline const ::com::adv::msg::PRow& MysqlResult::rows(int index) const {
  // @@protoc_insertion_point(field_get:com.adv.msg.MysqlResult.rows)
  return rows_.Get(index);
}
inline ::com::adv::msg::PRow* MysqlResult::mutable_rows(int index) {
  // @@protoc_insertion_point(field_mutable:com.adv.msg.MysqlResult.rows)
  return rows_.Mutable(index);
}
inline ::com::adv::msg::PRow* MysqlResult::add_rows() {
  // @@protoc_insertion_point(field_add:com.adv.msg.MysqlResult.rows)
  return rows_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::com::adv::msg::PRow >*
MysqlResult::mutable_rows() {
  // @@protoc_insertion_point(field_mutable_list:com.adv.msg.MysqlResult.rows)
  return &rows_;
}
inline const ::google::protobuf::RepeatedPtrField< ::com::adv::msg::PRow >&
MysqlResult::rows() const {
  // @@protoc_insertion_point(field_list:com.adv.msg.MysqlResult.rows)
  return rows_;
}

// optional int32 sqlid = 5;
inline void MysqlResult::clear_sqlid() {
  sqlid_ = 0;
}
inline ::google::protobuf::int32 MysqlResult::sqlid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.MysqlResult.sqlid)
  return sqlid_;
}
inline void MysqlResult::set_sqlid(::google::protobuf::int32 value) {
  
  sqlid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.MysqlResult.sqlid)
}

// -------------------------------------------------------------------

// RedispRequest

// optional int32 sqlid = 1;
inline void RedispRequest::clear_sqlid() {
  sqlid_ = 0;
}
inline ::google::protobuf::int32 RedispRequest::sqlid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.RedispRequest.sqlid)
  return sqlid_;
}
inline void RedispRequest::set_sqlid(::google::protobuf::int32 value) {
  
  sqlid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.RedispRequest.sqlid)
}

// optional string key = 2;
inline void RedispRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RedispRequest::key() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.RedispRequest.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RedispRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.RedispRequest.key)
}
inline void RedispRequest::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.RedispRequest.key)
}
inline void RedispRequest::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.RedispRequest.key)
}
inline ::std::string* RedispRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.RedispRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RedispRequest::release_key() {
  // @@protoc_insertion_point(field_release:com.adv.msg.RedispRequest.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RedispRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.RedispRequest.key)
}

// optional int32 param = 3;
inline void RedispRequest::clear_param() {
  param_ = 0;
}
inline ::google::protobuf::int32 RedispRequest::param() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.RedispRequest.param)
  return param_;
}
inline void RedispRequest::set_param(::google::protobuf::int32 value) {
  
  param_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.RedispRequest.param)
}

// optional int32 limit = 4;
inline void RedispRequest::clear_limit() {
  limit_ = 0;
}
inline ::google::protobuf::int32 RedispRequest::limit() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.RedispRequest.limit)
  return limit_;
}
inline void RedispRequest::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.RedispRequest.limit)
}

// optional int32 timeout = 5;
inline void RedispRequest::clear_timeout() {
  timeout_ = 0;
}
inline ::google::protobuf::int32 RedispRequest::timeout() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.RedispRequest.timeout)
  return timeout_;
}
inline void RedispRequest::set_timeout(::google::protobuf::int32 value) {
  
  timeout_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.RedispRequest.timeout)
}

// optional int32 transid = 32;
inline void RedispRequest::clear_transid() {
  transid_ = 0;
}
inline ::google::protobuf::int32 RedispRequest::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.RedispRequest.transid)
  return transid_;
}
inline void RedispRequest::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.RedispRequest.transid)
}

// -------------------------------------------------------------------

// RedispResult

// optional .com.adv.msg.RetBase retbase = 1;
inline bool RedispResult::has_retbase() const {
  return !_is_default_instance_ && retbase_ != NULL;
}
inline void RedispResult::clear_retbase() {
  if (GetArenaNoVirtual() == NULL && retbase_ != NULL) delete retbase_;
  retbase_ = NULL;
}
inline const ::com::adv::msg::RetBase& RedispResult::retbase() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.RedispResult.retbase)
  return retbase_ != NULL ? *retbase_ : *default_instance_->retbase_;
}
inline ::com::adv::msg::RetBase* RedispResult::mutable_retbase() {
  
  if (retbase_ == NULL) {
    retbase_ = new ::com::adv::msg::RetBase;
  }
  // @@protoc_insertion_point(field_mutable:com.adv.msg.RedispResult.retbase)
  return retbase_;
}
inline ::com::adv::msg::RetBase* RedispResult::release_retbase() {
  // @@protoc_insertion_point(field_release:com.adv.msg.RedispResult.retbase)
  
  ::com::adv::msg::RetBase* temp = retbase_;
  retbase_ = NULL;
  return temp;
}
inline void RedispResult::set_allocated_retbase(::com::adv::msg::RetBase* retbase) {
  delete retbase_;
  retbase_ = retbase;
  if (retbase) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.RedispResult.retbase)
}

// optional int32 affectedrows = 2;
inline void RedispResult::clear_affectedrows() {
  affectedrows_ = 0;
}
inline ::google::protobuf::int32 RedispResult::affectedrows() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.RedispResult.affectedrows)
  return affectedrows_;
}
inline void RedispResult::set_affectedrows(::google::protobuf::int32 value) {
  
  affectedrows_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.RedispResult.affectedrows)
}

// optional int32 insertid = 3;
inline void RedispResult::clear_insertid() {
  insertid_ = 0;
}
inline ::google::protobuf::int32 RedispResult::insertid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.RedispResult.insertid)
  return insertid_;
}
inline void RedispResult::set_insertid(::google::protobuf::int32 value) {
  
  insertid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.RedispResult.insertid)
}

// repeated .com.adv.msg.PRow rows = 4;
inline int RedispResult::rows_size() const {
  return rows_.size();
}
inline void RedispResult::clear_rows() {
  rows_.Clear();
}
inline const ::com::adv::msg::PRow& RedispResult::rows(int index) const {
  // @@protoc_insertion_point(field_get:com.adv.msg.RedispResult.rows)
  return rows_.Get(index);
}
inline ::com::adv::msg::PRow* RedispResult::mutable_rows(int index) {
  // @@protoc_insertion_point(field_mutable:com.adv.msg.RedispResult.rows)
  return rows_.Mutable(index);
}
inline ::com::adv::msg::PRow* RedispResult::add_rows() {
  // @@protoc_insertion_point(field_add:com.adv.msg.RedispResult.rows)
  return rows_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::com::adv::msg::PRow >*
RedispResult::mutable_rows() {
  // @@protoc_insertion_point(field_mutable_list:com.adv.msg.RedispResult.rows)
  return &rows_;
}
inline const ::google::protobuf::RepeatedPtrField< ::com::adv::msg::PRow >&
RedispResult::rows() const {
  // @@protoc_insertion_point(field_list:com.adv.msg.RedispResult.rows)
  return rows_;
}

// optional int32 sqlid = 5;
inline void RedispResult::clear_sqlid() {
  sqlid_ = 0;
}
inline ::google::protobuf::int32 RedispResult::sqlid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.RedispResult.sqlid)
  return sqlid_;
}
inline void RedispResult::set_sqlid(::google::protobuf::int32 value) {
  
  sqlid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.RedispResult.sqlid)
}

// optional int32 transid = 32;
inline void RedispResult::clear_transid() {
  transid_ = 0;
}
inline ::google::protobuf::int32 RedispResult::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.RedispResult.transid)
  return transid_;
}
inline void RedispResult::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.RedispResult.transid)
}

// -------------------------------------------------------------------

// InnerCommonMsg

// repeated .com.adv.msg.PDataCell items = 1;
inline int InnerCommonMsg::items_size() const {
  return items_.size();
}
inline void InnerCommonMsg::clear_items() {
  items_.Clear();
}
inline const ::com::adv::msg::PDataCell& InnerCommonMsg::items(int index) const {
  // @@protoc_insertion_point(field_get:com.adv.msg.InnerCommonMsg.items)
  return items_.Get(index);
}
inline ::com::adv::msg::PDataCell* InnerCommonMsg::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:com.adv.msg.InnerCommonMsg.items)
  return items_.Mutable(index);
}
inline ::com::adv::msg::PDataCell* InnerCommonMsg::add_items() {
  // @@protoc_insertion_point(field_add:com.adv.msg.InnerCommonMsg.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::com::adv::msg::PDataCell >*
InnerCommonMsg::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:com.adv.msg.InnerCommonMsg.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::com::adv::msg::PDataCell >&
InnerCommonMsg::items() const {
  // @@protoc_insertion_point(field_list:com.adv.msg.InnerCommonMsg.items)
  return items_;
}

// optional string transfer = 2;
inline void InnerCommonMsg::clear_transfer() {
  transfer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InnerCommonMsg::transfer() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.InnerCommonMsg.transfer)
  return transfer_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InnerCommonMsg::set_transfer(const ::std::string& value) {
  
  transfer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.adv.msg.InnerCommonMsg.transfer)
}
inline void InnerCommonMsg::set_transfer(const char* value) {
  
  transfer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.adv.msg.InnerCommonMsg.transfer)
}
inline void InnerCommonMsg::set_transfer(const char* value, size_t size) {
  
  transfer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.adv.msg.InnerCommonMsg.transfer)
}
inline ::std::string* InnerCommonMsg::mutable_transfer() {
  
  // @@protoc_insertion_point(field_mutable:com.adv.msg.InnerCommonMsg.transfer)
  return transfer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InnerCommonMsg::release_transfer() {
  // @@protoc_insertion_point(field_release:com.adv.msg.InnerCommonMsg.transfer)
  
  return transfer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InnerCommonMsg::set_allocated_transfer(::std::string* transfer) {
  if (transfer != NULL) {
    
  } else {
    
  }
  transfer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), transfer);
  // @@protoc_insertion_point(field_set_allocated:com.adv.msg.InnerCommonMsg.transfer)
}

// optional int32 time = 3;
inline void InnerCommonMsg::clear_time() {
  time_ = 0;
}
inline ::google::protobuf::int32 InnerCommonMsg::time() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.InnerCommonMsg.time)
  return time_;
}
inline void InnerCommonMsg::set_time(::google::protobuf::int32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.InnerCommonMsg.time)
}

// optional int32 transid = 32;
inline void InnerCommonMsg::clear_transid() {
  transid_ = 0;
}
inline ::google::protobuf::int32 InnerCommonMsg::transid() const {
  // @@protoc_insertion_point(field_get:com.adv.msg.InnerCommonMsg.transid)
  return transid_;
}
inline void InnerCommonMsg::set_transid(::google::protobuf::int32 value) {
  
  transid_ = value;
  // @@protoc_insertion_point(field_set:com.adv.msg.InnerCommonMsg.transid)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace msg
}  // namespace adv
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_adv_5fprotocol_2eproto__INCLUDED
